{"version":3,"sources":["webpack:///../p3/src/derive.js","webpack:///../p4/src/io/ajax.js","webpack:///../picos/index.js","webpack:///./src/html/TimeNet.html","webpack:///./src/components/HomePage.vue?8b81","webpack:///./node_modules/vuetify/dist/vuetify.min.css","webpack:///../p3/src/allocate.js","webpack:///../p3/src/embed.js","webpack:///./src/html/DimNet.html","webpack:///../picos/src/colors.js","webpack:///../picos/src/chord.js","webpack:///../picos/src/text.js","webpack:///../picos/src/stats.js","webpack:///../picos/src/rect.js","webpack:///../picos/src/scatter.js","webpack:///../picos/src/colorlegend.js","webpack:///../picos/src/main.js","webpack:///../p3/src/aggregate.js","webpack:///src/App.vue","webpack:///./src/App.vue?bf2e","webpack:///./src/App.vue","webpack:///./src/components/WebSocket.js","webpack:///./src/components/Communication.js","webpack:///./src/components/TimeSeries.js","webpack:///./src/components/TimeNet.js","webpack:///./src/components/Dimensionality.js","webpack:///./src/components/DimNet.js","webpack:///./src/components/DimTime.js","webpack:///./src/components/CommPanels.js","webpack:///src/components/HomePage.vue","webpack:///./src/components/HomePage.vue?41f2","webpack:///./src/components/HomePage.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///../p3/src/pipeline.js","webpack:///../p4/src/utils.js","webpack:///../p4/src/allocate.js","webpack:///../p4/src/io/input.js","webpack:///../p4/src/io/output.js","webpack:///../p4/src/initialize.js","webpack:///../p4/src/vis/brush.js","webpack:///../p4/src/interact.js","webpack:///../p4/src/control.js","webpack:///../p4/src/pipeline.js","webpack:///../p4/src/ops/gpgpu/Aggregation.gl.js","webpack:///../p4/src/ops/aggregate.js","webpack:///../p4/src/ops/cache.js","webpack:///../p4/src/ops/datetime.js","webpack:///../p4/src/ops/derive.js","webpack:///../p4/src/ops/extent.js","webpack:///../p4/src/ops/gpgpu/Match.gl.js","webpack:///../p4/src/ops/match.js","webpack:///../p4/src/vis/gradients.js","webpack:///../p4/src/vis/colorhex.js","webpack:///../p4/src/vis/color.js","webpack:///../p4/src/vis/reveal.js","webpack:///../p4/src/vis/encode.js","webpack:///../p4/src/vis/extend.js","webpack:///../p4/src/vis/shaders/interpolate.gl.js","webpack:///../p4/src/vis/svg.js","webpack:///../p4/src/vis/scale.js","webpack:///../p4/src/vis/axis.js","webpack:///../p4/src/vis/format.js","webpack:///../p4/src/vis/legend.js","webpack:///../p4/src/vis/chart.js","webpack:///../p4/src/vis/layout.js","webpack:///../p4/src/vis/shaders/Renderer.gl.js","webpack:///../p4/src/vis/shaders/Instanced.gl.js","webpack:///../p4/src/vis/shaders/Polygon.gl.js","webpack:///../p4/src/vis/shaders/Interleaved.gl.js","webpack:///../p4/src/vis/visualize.js","webpack:///../p4/src/kernels.js","webpack:///../p4/src/compile.js","webpack:///../p4/src/operate.js","webpack:///../p.plot/src/plot.js","webpack:///../p.plot/src/area.js","webpack:///../p.plot/src/spline.js","webpack:///../p.plot/src/circle.js","webpack:///../p.plot/src/bar.js","webpack:///../p.plot/src/map.js","webpack:///../p.plot/index.js","webpack:///../p4/src/animate.js","webpack:///../p4/src/extensions.js","webpack:///../p4/src/grid.js","webpack:///../p4/src/main.js","webpack:///../p4/src/io/parse.js","webpack:///../p4/src/arrays.js","webpack:///./src/html/TimeSeries.html","webpack:///./src/html/Dimensionality.html","webpack:///./src/App.vue?7786","webpack:///../p3/src/match.js","webpack:///../p.plot/assets/countries.json","webpack:///./src/html/WebSocket.html","webpack:///./src/html/CommPanels.html","webpack:///../p4/flexgl/src/uniform.js","webpack:///../p4/flexgl/src/attribute.js","webpack:///../p4/flexgl/src/texture.js","webpack:///../p4/flexgl/src/varying.js","webpack:///../p4/flexgl/src/subroutine.js","webpack:///../p4/flexgl/src/resource.js","webpack:///../p4/flexgl/src/shader.js","webpack:///../p4/flexgl/src/program.js","webpack:///../p4/flexgl/src/framebuffer.js","webpack:///../p4/flexgl/src/main.js","webpack:///./node_modules/material-design-icons-iconfont/dist/material-design-icons.css","webpack:///../p4/src/ctypes.js","webpack:///../p4/test/utils.js","webpack:///../p3/src/toarray.js","webpack:///../p3/src/query.js","webpack:///../p3/src/stats.js","webpack:///../p4/index.js","webpack:///../p3/src/arrays.js","webpack:///../p.plot/assets/world-110m.json","webpack:///../p4/test/data-babies.js","webpack:///../p4/flexgl/index.js","webpack:///../p3/src/join.js","webpack:///./src/html/DimTime.html","webpack:///../p3/index.js","webpack:///../p3/src/vector.js","webpack:///./src/html/Communication.html","webpack:///../p4/test/data-timeseries.js","webpack:///../p4/src/cstore.js"],"names":["name","template","data","dialog","socketError","server","modes","defaultMode","methods","connect","resolve","reject","socket","WebSocket","onopen","send","method","onerror","error","onmessage","event","dataObj","JSON","parse","schema","hasOwnProperty","CommData","forEach","d","RbPrim","RbTotal","RbSec","drawer","timeDomain","allMetrics","metrics","showIntraComm","numKP","numPE","threshold","rings","maxLinkValue","isComparisonMode","granularity","colors","computed","thresholdValue","toFixed","updateLink","ring","updateMetrics","$emit","visualize","timeIntervals","measure","processIds","clusterIds","clusterColors","undefined","Array","isArray","length","filter","indexOf","KpGid","Math","max","map","Peid","Kpid","colorDomains","container","$refs","innerHTML","timeInterval","tii","aggregateByTime","p3","pipeline","match","tsData","aggregate","$group","$collect","items","$data","execute","tsCommData","sample","sort","a","b","item","accCommData","slice","rows","i","value","j","newRows","reduce","commData","vector","sum","collection","metric","aggrSpec","$aggregate","$reduce","transform","result","metricData","r","colorSets","layers","type","ignoreDiagonal","size","vmap","color","colorDomain","layerSpec","gid","pid","clusterId","mi","layer","push","div","document","createElement","radius","clientWidth","picos","config","legend","width","height","appendChild","rii","min","ringLayers","ringLayer","updateColor","view","vis","enableInteraction","timeDomains","granularities","measures","selectedTimeDomain","selectedMeasure","selectedMetrics","callback","visMarks","System","PE","KP","clusters","colorEncoding","colorSet","watch","cls","mounted","getElementById","init","cache","p4","cstore","import","index","clientHeight","viewport","padding","left","right","top","bottom","destroy","aggregation","views","firstMetric","firstMetricName","mark","x","y","gridlines","opacity","facets","sortBy","var","brush","condition","lazy","selection","cluster","$max","field","range","by","head","tpl","components","TimeSeries","Communication","appName","timeIndexes","selectedTimeInterval","selectedGran","isAggregated","then","k","reset","selectMetrics","updateCommunication","updateTimeSeries","updateTimeDomain","dimensionalMethods","dimensionalSelected","clusteringMethods","clusteringSelected","metricX","metricY","proc","oncomplete","Vis","parentElement","offset","interpolate","analyze","baseURL","dr","toLowerCase","cl","url","join","axios","get","res","clustering","catch","err","Dimensionality","joinData","sid","clm","params","timeMetric","ringMetrics","c","update","Vue","use","Router","Vuetify","mode","routes","path","component","HomePage","DimTime","TimeNet","DimNet","CommPanels","productionTip","el","router","App"],"mappings":";;;;;AAAA,QAAQ,mBAAO,CAAC,MAAa;;AAE7B;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC,aAAa;AACb,yHAAyH;AACzH;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;AC3DA;AAA+B;;AAE/B;AACA;AACA;;AAEA,aAAa,0DAAK;;AAEH,mHAAK,EAAC;;AAErB;AACA,qBAAqB,0DAAK,C;;;;;;;;ACX1B,kUAAkU,KAAK,WAAW,i+BAAi+B,sD;;;;;;;ACAnzC,yC;;;;;;;ACAA,yC;;;;;;;ACAA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AClJA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,cAAc,eAAe;;AAEvE,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;AC1BA,kUAAkU,KAAK,WAAW,4gB;;;;;;;;;;;;;;;;ACAnS;AACG;;AAEnC;AACf;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA,KAAK;AACL,uBAAuB,kCAAW;AAClC;AACA;AACA,sBAAsB,sBAAW;AACjC,uBAAuB,sBAAW;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,kCAAW;AAClC;AACA;AACA,KAAK;AACL,mBAAmB,kCAAW;AAC9B;AACA;AACA;AACA;AACA,C;;;;;;;;AC5BgC;AACkB;AACF;;AAEjC;AACf,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,qCAAO;AACvB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA,mCAAmC,uCAAuC;AAC1E;;AAEA;;AAEA;AACA;AACA;;AAEA,2BAA2B,QAAQ;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,K;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sCAAM;AAC7B;AACA;AACA;;AAEA,KAAK;AACL,mBAAmB,0CAAU;AAC7B,mBAAmB,mCAAW;AAC9B;AACA,yBAAyB,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD,qBAAqB,gCAAgC;AACrD,qBAAqB;AACrB;AACA;AACA,a;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,C;;AC1He;AACf,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B,EAAE;;AAE1D;AACA;;;;AClCe,SAAS,WAAK;;AAE7B;AACA;;AAEA;;AAEA;AACA,qCAAqC,YAAY,EAAE;AACnD;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,E;;;;;AChB+B;AACmB;;AAErB;AACO;;AAErB,SAAS,SAAI;AAC5B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;;AAEA,8BAA8B,oBAAoB,EAAE;AACpD,yEAAyE;;AAEzE;AACA,gBAAgB,WAAQ,yCAAyC,gBAAgB,EAAE;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,kCAAW;AACtC;AACA,0BAA0B,sBAAW;AACrC,2BAA2B,sBAAW;AACtC,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT,uBAAuB,kCAAW;AAClC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,+BAAQ;AAC3B;AACA;AACA;;AAEA;AACA,eAAe,mCAAG;AAClB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,oCAAoC,gCAAgC,EAAE;AACtE,yCAAyC,gCAAgC,EAAE;AAC3E;AACA;AACA,8CAA8C,kCAAkC;AAChF;AACA;AACA;AACA,YAAY,0CAAM;AAClB;AACA,SAAS;AACT;AACA;AACA,YAAY,0CAAM;AAClB,SAAS,E;;AAET;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,EAAE;AAC3E;;AAEA;AACA,C;;ACnG+B;;AAEhB,SAAS,eAAO;AAC/B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,UAAU,EAAE;AAC1C,8BAA8B,UAAU,EAAE;AAC1C,8BAA8B,UAAU,EAAE;AAC1C,yEAAyE;;AAEzE;AACA,gBAAgB,WAAQ,yCAAyC,gBAAgB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B;AAC5D,gCAAgC,iDAAiD;AACjF,+BAA+B,iDAAiD;AAChF,mCAAmC,+BAA+B;;AAElE;AACA;AACA;AACA;AACA,iD;AACA,2C;AACA,SAAS;AACT;;AAEA;AACA;;;;;;;AC7FyC;AACL;AACS;;AAE7C;AACe;AACf;AACA;AACA;AACA;AACA,eAAe,wCAAwC;AACvD;AACA;AACA;AACA,aAAa,uCAAQ;AACrB;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,iBAAiB,0CAAM;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,K;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,sBAAsB,sBAAE;AACxB,8BAA8B,SAAS;AACvC;AACA;AACA,wCAAwC,sBAAE;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;ACpGA;AAA4B;AACG;AACL;AACM;AACQ;AACR;AACI;;AAEpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,kBAAkB,0CAAM;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET,e;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB,KAAK;AAC7B;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,IAAS;AACjC;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;;AAEb;;AAEA,uBAAuB,QAAQ;;AAE/B;AACA;AACA,uBAAuB,eAAO;AAC9B,aAAa;AACb,uBAAuB,SAAI;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,KAAK;;AAEL;AACA,kBAAkB,0CAAM;AACxB;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA,C;;;;;;;ACpOA,gBAAgB,mBAAO,CAAC,MAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;;AAEA,sBAAsB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,gBAAgB,EAAE;AACvF,iFAAiF,gBAAgB,EAAE;AACnG,aAAa;AACb;AACA,uFAAuF,eAAe,EAAE;AACxG,iBAAiB;AACjB,sEAAsE,gBAAgB,EAAE;AACxF,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,2DAA2D,gBAAgB,EAAE;AAC7E;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+DAA+D,mBAAmB;AAClF;AACA,yBAAyB;AACzB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,yBAAy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;AChBA;AACA;AACA;AACA;AACA;;AAEAZ,kBAAGA,CAACrH,MAAJ,CAAWkI,aAAX,GAA2B,KAA3B;;AAEA;AACA,IAAIb,kBAAJ,CAAQ;AACNc,MAAI,MADE;AAENC,gBAFM;AAGNhE,cAAY,EAAEiE,YAAF,EAHN;AAIN1Q,YAAU;AAJJ,CAAR,E;;;;;;;ACTA,eAAe,mBAAO,CAAC,MAAU;AACjC,gBAAgB,mBAAO,CAAC,MAAS;AACjC,kBAAkB,mBAAO,CAAC,MAAa;AACvC,cAAc,mBAAO,CAAC,MAAS;;AAE/B;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC3HmC;;AAE5B;AACP;AACA;AACA;;AAEA,cAAc,MAAM;AACpB,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;;AAEO;AACA;;;;;;ACf0B;AACD;AAChC;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yC;AACA;AACA,uB;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD,0CAA0C,QAAQ;AAClD,2CAA2C,QAAQ;AACnD,2CAA2C,QAAQ;AACnD,KAAK;AACL;AACA,gCAAgC,wBAAM;AACtC;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,4BAA4B,YAAY;AACxC;AACA;;AAEA,6BAA6B,YAAY;AACzC;AACA;;AAEA,sBAAsB,sCAAsC;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kDAAkD;AAClF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACxN8B;AACA;AACH;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,oBAAoB,iCAAM,EAAE,aAAa;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,gCAAK;AAC5B;AACA,oBAAoB,iCAAM,EAAE,+CAA+C;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA,eAAe,WAAQ,EAAE,4BAA4B;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;AC7Fe;;AAEf;;AAEA,8BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB,S;AACjD,0CAA0C,oDAAoD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,2BAA2B;AAC9D,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;;AAEA,2BAA2B,eAAe;AAC1C;;AAEA;AACA;AACA;AACA;AACA,iB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;;AAEA;AACA,CAAC;;;;;;AC3F8B;;AAEhB;AACf;AACA;AACA;AACA,eAAe,mCAAmC;AAClD,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA;AACA;AACA;AACA,iBAAiB,yBAAM;AACvB;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCe;;AAEf,0BAA0B;AAC1B;AACA;AACA;AACA,yBAAyB,SAAS;AAClC,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,uDAAuD;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;ACvIgC;AACjB;AACf;;AAEA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6B;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,iD;AACA;AACA;AACA;AACA;AACA,yB;AACA;;AAEA,wBAAwB,KAAK;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,KAAK;AACrC,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA,aAAa;AACb;AACA;AACA;AACA,a;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;ACjPe;;AAEf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,CAAC;;;AClHc,uB;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,C;;ACtEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;;AC3GkC;AACqC;;AAEvE;AACA;;AAEe,SAAS,mBAAS;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,SAAS;AAClC,2BAA2B,SAAS;AACpC;;AAEA;AACA;AACA,yBAAyB,QAAQ;AACjC,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC,2BAA2B,UAAU;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,oD;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8CAA8C;AACtF;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACzSe,SAAS,WAAK;AAC7B,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;;AAEA;AACA;;;;ACnDA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,UAAU;AACV;;;AAGO,kBAAkB,aAAa;AACtC;AACA;AACA;;AAEO,kBAAkB,aAAa;AACtC;AACA;AACA;AACA;;AAEO,mBAAmB,yBAAyB;AACnD;AACA;;AAEA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;;AAEO,uBAAuB,aAAa;AAC3C;AACA;AACA,C;;AAEO,mBAAmB,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC9HmE;;AAEpD,SAAS,aAAM;;AAE9B,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,OAAO;AAC1C,oCAAoC,QAAQ;AAC5C,mCAAmC,OAAO;AAC1C,wCAAwC,YAAY;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iEAAiE;AACjE,KAAK;;AAEL,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,iBAAiB,GAAG;AAChE;;AAEA;AACA;;;;AClLA;AACe;;AAEf;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;ACrFO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mCAAmC;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,C;;ACnEoE;;AAErD,SAAS,WAAK;AAC7B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C,+BAA+B,cAAc;AAC7C;;AAEA;AACA,6BAA6B,gBAAgB;AAC7C,+BAA+B,gBAAgB;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2BAA2B,EAAE;AACvE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,SAAS;;AAET;AACA,6D;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,SAAS;;AAET;AACA;AACA,2BAA2B;AAC3B;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AChNO;AACP;AACA;AACA;AACA;AACA;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7IsD;AAClB;;AAEpC;AACA;AACA,2BAA2B,SAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,SAAS,WAAK;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,SAAY;AACvD,uBAAuB,SAAY;AACnC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;;AAEA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,sBAAsB,iCAAiC;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;ACnKkC;AACnB;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C,kCAAkC,QAAQ;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnIO;;AAEA;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AC9He;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,kCAAkC;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,S;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,C;;AC5De;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf,+CAA+C;AAC/C,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,kCAAkC;AAClC,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AC3Ie,SAAS,WAAK;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC,SAAS;AACT;AACA;AACA,gCAAgC;AAChC,SAAS;AACT;AACA;AACA;;AAEA,gCAAgC;;AAEhC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC;AAChC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AC7E4B;;AAEb,SAAS,SAAI;;AAE5B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA,aAAa;AACb,uCAAuC,eAAe;AACtD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,WAAK;AACtB,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,E;;ACpR8B;;AAEf;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAG;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sEAAsE,IAAI;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCwB;AACE;AACS;;AAEnC;AACA;AACA;;AAEe,SAAS,YAAK;AAC7B;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,qCAAqC,qCAAqC;AAC1E,gCAAgC;AAChC;AACA;AACA;AACA,kCAAkC,WAAW;;;AAG7C;AACA;AACA;;AAEA;AACA,cAAc,GAAG,EAAE,+CAA+C;AAClE;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA,KAAK;AACL,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA,SAAS;AACT,KAAK;AACL,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA,SAAS;AACT;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACxJ0B;AACI;AACA;;AAEf;AACf,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA,0CAA0C,mBAAmB;AAC7D;;AAEA,kCAAkC,yBAAyB;AAC3D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAM;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA,oBAAoB,WAAM;AAC1B;AACA;;AAEA;AACA;AACA,sBAAsB,YAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,SAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA,gBAAgB,SAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,SAAI;AACjE,8DAA8D,SAAI;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,SAAI;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACxQwB;AACI;;AAE5B,SAAS,aAAM;AACf;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD;;AAEe;AACf;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,aAAM;AACV,IAAI,aAAM;;AAEV;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;;AAEA;AACA;AACA;AACA,wCAAwC,qCAAqC;AAC7E,mCAAmC,wBAAwB;AAC3D,mCAAmC;;AAEnC;AACA;;AAEA;AACA,QAAQ,aAAM;AACd;;AAEA;AACA,QAAQ,aAAM;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,KAAK;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAiD,qBAAqB,eAAe;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;;ACvLe;AACf,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;AChCoC;;AAErB,wBAAwB,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;AC3EoC;;AAErB,sBAAsB,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;ACrFoC;;AAErB,MAAM,wBAAS,SAAS,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;ACzD6B;AACC;AACoB;AACpB;AACoB;;AAEpB;AACgB;AACJ;AACQ;;AAElD;AACA;;AAEe;;AAEf,uBAAuB,WAAM;AAC7B,sCAAsC;AACtC;;AAEA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uDAAuD,gBAAgB;AACvE,yDAAyD,gBAAgB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,MAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAW;AAChD,mDAAmD,cAAW;;AAE9D;AACA,uBAAuB,SAAS,EAAE,+BAA+B;AACjE,qBAAqB,OAAO,EAAE,6BAA6B;AAC3D,wBAAwB,wBAAW,EAAE,gCAAgC;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,MAAM;;AAE/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mE;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,MAAM;;AAEd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,sCAAsC,wCAAwC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;;;AC3OyC;AACJ;AACC;AACA;AACD;AACI;;AAEzC,gDAAe;AACf,IAAI,8BAAS;AACb,IAAI,kBAAK;AACT,IAAI,qBAAM;AACV,IAAI,cAAM;AACV,IAAI,kBAAK;AACT,IAAI,oBAAS;AACb,C;;ACdyC;AACJ;AACC;AACA;AACD;AACI;AACH;;AAEvB;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,mBAAS;AAC7B,oBAAoB,WAAK;AACzB,oBAAoB,WAAK;AACzB,oBAAoB,MAAM;AAC1B,oBAAoB,SAAS;AAC7B;AACA;;;ACvBiC;AACD;AACK;;AAEtB;AACf;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,WAAQ;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,WAAQ;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,WAAQ;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,MAAQ;AAC7C;AACA;AACA,+BAA+B,MAAQ;AACvC;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,WAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;ACjMmD;AACf;AACU;AACD;;AAE7C;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,MAAM,SAAI;AACzB;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB,IAAI,iBAAiB;;AAEvF,SAAS;AACT,4BAA4B,0CAAM;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,0CAAM;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sCAAsC,mCAAY;AAClD,iBAAiB;AACjB,sCAAsC,kCAAW;AACjD;AACA;AACA,gDAAgD,4CAAc;AAC9D;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D,kBAAkB,yCAAU;;AAE5B;AACA,sBAAsB,uCAAQ;;AAE9B;AACA;AACA;AACA,sBAAsB,uCAAQ;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;ACtI0B;AACgB;;AAE3B,MAAM,cAAS,SAAS,SAAI;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,oCAAI;AACxB,mBAAmB,kCAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;AC1B0B;AACgB;AACc;AACJ;;AAErC,MAAM,aAAM,SAAS,SAAI;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,oCAAI;AACvB,mBAAmB,kCAAU;AAC7B;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB,mCAAY,CAAC,0CAAgB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;;AAGb;;AAEA;AACA,C;;ACpF0B;;AAEX,0BAA0B,SAAI;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC1B0B;AACS;AACpB,MAAM,YAAQ,SAAS,SAAI;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,gCAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;;AC7C0B;AACG;AACe;AACQ;AAClB;AACY;AACG;;AAElC,MAAM,OAAG,SAAS,SAAI;AACrC;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,oBAAK;;AAEpC;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAE;AAC5B;AACA;;AAEA,oBAAoB,qBAAU;AAC9B;;AAEA;AACA;AACA;AACA,8BAA8B,mBAAS;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,6BAA6B,+BAAQ;AACrC;AACA;AACA,2BAA2B,kDAAgB;AAC3C,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,c;AACA;AACA,kBAAkB,kCAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,+BAAa,2DAA2D,gBAAgB,EAAE;AAC7G;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA,uBAAuB,kCAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC1G8B;AACK;AACD;AACK;AACN;AACF;;AAE/B,2CAAe;AACf,IAAI,eAAI;AACR,IAAI,wBAAW;AACf,IAAI,sBAAQ;AACZ,IAAI,yBAAS;AACb,IAAI,qBAAM;AACV,IAAI,eAAM;AACV,CAAC,EAAC;;;;ACdF,oBAAoB,kDAAkD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,sBAAsB,yBAAyB;AAC/C,yB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;ACrK0B;AACY;;AAExB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAK;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAK;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAK;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC5Ce;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qCAAqC;AACxD,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,C;;AC9CA;AAAmC;AACD;AACE;AACK;AACN;AACH;AACE;AACF;AACA;AACM;AACZ;AACG;;;AAGd;AACf;AACA,SAAS,IAAU;AACnB;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,KAAK;;AAEL,eAAe;AACf;AACA;AACA;AACA,S;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,qCAAqC;AACxE;AACA;;AAEA;AACA,oBAAoB,WAAO;AAC3B;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,WAAO;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA,iB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,iCAAM;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;AC7WA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,yCAAyC,sBAAsB;AAC/D;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEO;AACP;AACA;;AAEA,uBAAuB,UAAU;AACjC;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;;AAEO;AACP;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA,iDAAiD;AACjD;AACA;AACA,KAAK;AACL;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEO;AACP;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;ACnDgC;;AAEjB;;AAEf,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,OAAO;AAC3C,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;ACpIe;;AAEf,uDAAuD;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;;;ACzBe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AC7BgC;AACI;AACJ;AACA;AACM;;AAEvB;AACf,yDAAyD;AACzD;;AAEA,2BAA2B,OAAO;AAClC,6BAA6B,SAAS;AACtC,2BAA2B,OAAO;AAClC,2BAA2B,OAAO;AAClC,8BAA8B,UAAU;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;ACrDe;;AAEf,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA,uEAAuE,OAAO;AAC9E,SAAS;AACT;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;;AAE/D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,a;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;;;AAIb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC5O8B;;AAEf;;AAEf;AACA;AACA,eAAe;AACf,oBAAoB;AACpB,sBAAsB,MAAM;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACtFgC;;AAEjB;;AAEf,+DAA+D;AAC/D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;ACtEA;AAAkC;AACK;AACT;AACU;;AAEzB;;AAEf,qDAAqD;AACrD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA,yCAAyC;AACzC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B,wBAAwB,QAAQ;AAChC,2BAA2B,WAAW;AACtC,6BAA6B,OAAc;AAC3C,sBAAsB,MAAM;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC;;AAErC;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACpSA,yC;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcE;;;;;;;;;;;;;;;;;;;;;;ACvB0B;AACC;AACK;AACK;;AAEvC,YAAY,4CAAM;AAClB,cAAc,4CAAM;AACpB,iBAAiB,4CAAM;AACvB,iBAAiB,6CAAM;;AAEhB;AACP;AACA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,sBAAsB,0CAA0C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,aAAa,oEAAM,GAAG;AACtB;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,yCAAM;AAC/B,sBAAsB,UAAU;AAChC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEO;AACP;AACA,8B;;AAEA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA,uCAAuC,OAAO;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,C;;;;;;;ACnIA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,wCAAwC,aAAa,EAAE;AACvD,SAAS;AACT;AACA;;;;;;;;AClBA,kBAAkB,mBAAO,CAAC,MAAa;AACvC,kBAAkB,mBAAO,CAAC,MAAgB;AAC1C,cAAc,mBAAO,CAAC,MAAY;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mCAAmC,cAAc;AACjD;;AAEA;AACA,qCAAqC,cAAc;AACnD;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,cAAc;AAC7E;AACA;AACA;;AAEA;AACA;AACA,2DAA2D,oCAAoC;AAC/F;AACA;AACA,qCAAqC,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;;;AAGA,kBAAkB,YAAY;AAC9B,mBAAmB;AACnB;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,QAAQ;;AAER;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,qCAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C,6BAA6B;AACvE,SAAS;AACT,0CAA0C,iCAAiC;AAC3E,SAAS;AACT,0C;AACA;AACA,uF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD,aAAa;AACb;;AAEA,iCAAiC,qCAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,2BAA2B,WAAW;AACtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,eAAe,qCAAM;AACrB;;AAEA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA,S;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA,S;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,uDAAM;AAC9B;AACA,SAAS;AACT;AACA,sBAAsB,SAAS;AAC/B,uE;AACA;;AAEA;AACA;;AAEA;AACA","file":"static/js/app.45e0f4dcb976a9a88996.js","sourcesContent":["var $ = require('./arrays.js');\n\nmodule.exports = function(data, spec){\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    if(typeof(spec) === \"function\") {\n        data.forEach(spec);\n    } else {\n        var result = [],\n            tranfs = {};\n\n        Object.keys(spec).forEach(function(s){\n            if(typeof(spec[s]) == \"function\") {\n                tranfs[s] = function(d) { d[s] = spec[s](d) };\n            } else {\n                tranfs[s] = Function(\"attr\", \"attr.\" + s + \"=\" + spec[s].replace(/@/g, 'attr.').replace(/\\$/g, '$.') + \";\");\n            }\n        });\n\n        data.forEach(function(d){\n            Object.keys(spec).forEach(function(s){\n                tranfs[s](d);\n            });\n        });\n    }\n\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/derive.js\n// module id = 12xM\n// module chunks = 1","export function request(arg) {\n    var url = arg.url || arg,\n        method = arg.method || \"GET\",\n        dataType = arg.dataType || \"json\",\n        data = arg.data || [],\n        query = [];  //arraybuffer, blob, document, json, text\n\n    for (var key in data) {\n        query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n    }\n\n    return new Promise(function(resolve, reject) {\n\n        var req = new XMLHttpRequest();\n        req.open(method, url);\n        req.responseType = dataType;\n\n        req.onload = function() {\n          if (req.status == 200) {\n            resolve(req.response);\n          }\n          else {\n            reject(Error(req.statusText));\n          }\n        };\n\n        req.onerror = function() {\n          reject(Error(\"Network Error\"));\n        };\n\n        if (method == 'POST') {\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        }\n\n        req.send(data);\n    });\n};\n\nexport let get = request;\n\nexport function getAll(options) {\n    var promises = [];\n    options.forEach(function(option){\n        promises.push(\n            request(option)\n            .then(function(result){\n                return new Promise(function(resolve, reject) {\n                    resolve(result);\n                });\n            })\n        );\n    });\n\n    return Promise.all(promises);\n}\n\nexport function post(arg) {\n    arg.method = \"POST\";\n    return ajax.request(arg);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/io/ajax.js\n// module id = 16Nc\n// module chunks = 1","import picos from './src/main';\n\nvar root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nroot.picos = picos;\n\nexport default picos;\n\nif(typeof module != 'undefined' && module.exports)\n    module.exports = picos;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/index.js\n// module id = 2snl\n// module chunks = 1","module.exports = \"<v-app id=\\\"inspire\\\">\\n  <WebSocket ref=\\\"WebSocket\\\" @connect=\\\"connect\\\" />\\n  <v-toolbar\\n    color=\\\"blue-grey\\\"\\n    dark\\n    fixed\\n    app\\n    clipped-right\\n  >\\n    <v-toolbar-side-icon @click.stop=\\\"left = !left\\\">\\n    </v-toolbar-side-icon>\\n    <v-toolbar-title style=\\\"margin-right: 3em;\\\">{{ appName }}</v-toolbar-title>\\n      <v-flex xs4 class=\\\"ma-2\\\">\\n        <v-select box\\n          label=\\\"Metric\\\"\\n          :items=\\\"metrics\\\"\\n          multiple\\n          v-model=\\\"selectedMetrics\\\"\\n          persistent-hint\\n          v-on:change=\\\"visualize()\\\"\\n        >\\n        </v-select>\\n      </v-flex>\\n    <v-spacer></v-spacer>\\n    <v-flex xs2>\\n    </v-flex>\\n  </v-toolbar>\\n  <v-content class=\\\"pa-2\\\">\\n    <v-container fluid fill-height class=\\\"pa-1\\\">\\n      <v-layout justify-center align-center>\\n        <v-flex xs7 fill-height class=\\\"pa-1\\\">\\n          <TimeSeries ref=\\\"TimeSeries\\\"></TimeSeries>\\n        </v-flex>\\n        <v-flex xs5 fill-height class=\\\"pa-1\\\">\\n          <Communication  ref=\\\"Communication\\\" />\\n        </v-flex>\\n      </v-layout>\\n    </v-container>\\n  </v-content>\\n  <!-- <v-footer color=\\\"blue-grey\\\" class=\\\"white--text\\\" app> -->\\n    <!-- <span> VIDi Labs, University of California, Davis </span>\\n    <v-spacer></v-spacer>\\n    <span>&copy; 2018</span> -->\\n  <!-- </v-footer> -->\\n</v-app>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/TimeNet.html\n// module id = 31Cv\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-27cb0925\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/HomePage.vue\n// module id = 3ySA\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vuetify/dist/vuetify.min.css\n// module id = 7zck\n// module chunks = 1","/**\n * alloc(options) - allocating memory for storing data values in different schemaures.\n * @exports allocate\n * @param {Object} options - Options for allocating memory.\n * @param {Array} options.array - Array containing the data values.\n * @param {Array} options.fields - Fields in the data.\n * @param {number} [options.skip=0] - Number of rows to be skiped in data.\n * @param {object[]} [options.data] - default data\n *\n */\nmodule.exports = function allocate(options) {\n    'use strict';\n    var array = options.array || [],\n        header = options.fields || options.header || array[0],\n        types = options.types || [],\n        schema = options.schema || undefined,\n        skip = options.skip || 0,\n        data = options.data || [];\n\n    var ds = {},\n        parsers = [];\n\n    if (types.length && typeof(types) == 'string') {\n        var ta = [];\n        for (var i = 0; i < header.length; i++) {\n            ta.push(types);\n        }\n        types = ta;\n    }\n\n    if (typeof schema == 'object') {\n        header = Object.keys(schema);\n        types = Object.keys(schema).map(function(h) {\n            return schema[h];\n        });\n    }\n\n    if (typeof skip == 'number') {\n        for (var j = 0; j < skip; j++)\n            array.shift();\n    }\n\n    types.forEach(function(t) {\n        parsers.push(getParser(t));\n    })\n\n    function getParser(type) {\n        if (type == 'int' || type.match('veci*')) {\n            return function(value) {\n                var res = parseInt(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (type == 'float' || type.match('vecf*')) {\n            return function(value) {\n                var res = parseFloat(value);\n                return (isNaN(res)) ? 0 : res;\n            };\n        } else if (['date', 'time', 'datetime'].indexOf(type) != -1) {\n            return function(value) {\n                return new Date(value);\n            };\n        } else if (['money', 'price', 'cost'].indexOf(type) != -1) {\n            return function(value) {\n                return parseFloat(value.substring(1));\n            };\n        } else {\n            return function(value) {\n                return value;\n            };\n        }\n    }\n\n    ds.insertRows = function(rows) {\n        array = array.concat(rows);\n    }\n    \n    /**\n    * @method objectArray\n    * @return {Object[]} - Return data as array of objects\n    */\n    ds.objectArray = function() {\n        if (typeof(header) !== 'undefined' && header.length) {\n            var l = header.length;\n            array.forEach(function(a) {\n                var o = {},\n                    offset = 0;\n                for (var i = 0; i < l; i++) {\n                    var k = header[i];\n                    if (k.length) {\n                        if (types[i].match(/^(veci|vecf)\\d+$/)) {\n                            var vl = parseInt(types[i].slice(4)),\n                                vector = [];\n                            a.slice(offset, offset + vl).forEach(function(vi) {\n                                vector.push(parsers[i](vi));\n                            });\n                            o[k] = vector;\n                            offset += vl;\n                        } else {\n                            o[k] = parsers[i](a[offset]);\n                            offset++;\n                        }\n                    }\n                }\n                data.push(o);\n            });\n        }\n        return data;\n    }\n\n    /**\n    * @method rowArray\n    * @return {Array[]} - data as row arrays\n    */\n    ds.rowArray = function() {\n        array.forEach(function(a) {\n            var row = [];\n            header.forEach(function(k, i) {\n                if (k.length) {\n                    row.push(parsers[i](a[i]));\n                }\n            });\n            data.push(row);\n        });\n        data.fields = header;\n        data.schema = 'rowArray';\n        return data;\n    }\n\n    /**\n    * @method collumArray\n    * @return {Array[]} - data as column arrays\n    */\n    ds.columnArray = function() {\n        header.forEach(function(k, i) {\n            var column = array.map(function(a) {\n                return parsers[i](a[i]);\n            });\n            data.push(column);\n        });\n        data.fields = header;\n        data.schema = 'columnArray';\n        return data;\n    }\n    //TODO: make columnArray extensible like rowArray and objectArray\n\n    return ds;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/allocate.js\n// module id = BpKz\n// module chunks = 1","module.exports = function embed(spec) {\n    var id = spec.$id || spec.$by,\n        attributes = Object.keys(spec);\n\n    if(!id) throw Error(\"No id specified for embed!\");\n\n    attributes.filter(function(attr){\n        return (attr != \"$by\" && attr != \"$id\")\n    })\n    .forEach(function(attr){\n        var embedKey = spec[attr][0][id],\n            i = 0,\n            n = data.length,\n            l = spec[attr].length;\n\n        var lookup = data.map(function(d){ d[attr] = []; return d[id];});\n\n        for(i = 0; i < l; i++) {\n            var index = lookup.indexOf(spec[attr][i][id]);\n            if(index !== -1) {\n                data[index][attr].push(spec[attr][i]);\n            }\n            // delete spec[attr][i][id];\n        }\n    });\n    return data;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/embed.js\n// module id = CT2f\n// module chunks = 1","module.exports = \"<v-app id=\\\"inspire\\\">\\n  <WebSocket ref=\\\"WebSocket\\\" @connect=\\\"connect\\\" />\\n  <v-toolbar\\n    color=\\\"blue-grey\\\"\\n    dark\\n    fixed\\n    app\\n    clipped-right\\n  >\\n    <v-toolbar-side-icon @click.stop=\\\"left = !left\\\">\\n    </v-toolbar-side-icon>\\n    <v-toolbar-title style=\\\"margin-right: 3em;\\\">{{ appName }}</v-toolbar-title>\\n    <v-spacer></v-spacer>\\n  </v-toolbar>\\n  <v-content class=\\\"pa-2\\\">\\n    <v-container fluid style=\\\"height: 90%\\\" class=\\\"pa-2\\\">\\n      <v-layout fill-height row>\\n          <v-flex xs6 fill-height class=\\\"pa-1\\\">\\n            <Dimensionality ref=\\\"Dimensionality\\\"></Dimensionality>\\n          </v-flex>\\n          <v-flex xs6 fill-height class=\\\"pa-1\\\">\\n            <Communication  ref=\\\"Communication\\\" />\\n          </v-flex>\\n      </v-layout>\\n    </v-container>\\n  </v-content>\\n</v-app>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/DimNet.html\n// module id = IB2n\n// module chunks = 1","import {scaleLinear, scalePow} from 'd3-scale';\nimport * as colorScales from 'd3-scale-chromatic';\n\nexport default function mapColor(colors, colorDomain) {\n    var getColor;\n    if(typeof colors == 'function') {\n        getColor = function(d) { return colors(d); };\n        getColor.domain = () => {}\n    } else if(typeof colors == 'string') {\n        var getRange = scaleLinear().domain(colorDomain).range([0, 1]);\n        // var getRange = scalePow().exponent(0.333).domain(colorDomain).range([0, 1]);\n        getColor = function(value) {\n            if(typeof colorScales['interpolate' + colors] == 'function') {\n                return colorScales['interpolate' + colors](getRange(value));\n            } else {\n                return '#000000';\n            }\n        }\n        getColor.domain = function(d) {\n            getRange = scaleLinear().domain(d).range([0, 1]);\n            return getRange;\n        }\n    } else {\n        getColor = scaleLinear()\n            .domain(colorDomain)\n            .range(colors);\n    }\n    return getColor;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/colors.js\n// module id = null\n// module chunks = ","import colorMap from './colors';\nimport {chord as d3Chord, ribbon} from 'd3-chord';\nimport {lineRadial, curveBundle} from 'd3-shape'\n\nexport default function Chord(arg) {\n    let options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        radius = options.radius || 100,\n        padding = options.padding || 0.1,\n        ignoreDiagonal = options.ignoreDiagonal || false,\n        colorDomain = options.colorDomain || null,\n        colors = options.colors || ['steelblue', 'red'],\n        threshold = options.threshold || 0,\n        hover = options.hover || function(d) {};\n\n    let chord = d3Chord().padAngle(padding)\n        // .sortSubgroups(d3Chord.descending)\n\n    let matrix = {};\n    matrix.size = data.map((rows, i) => {\n        return rows.map((row, j) => {\n            return  (i == j) ? 1 * ((ignoreDiagonal) ? 0 : 1) : 1;\n        });\n    });\n\n    matrix.color =  data.map((rows, i) => {\n        return rows.map((row, j) => {\n            return (i == j) ? row * ((ignoreDiagonal) ? 0 : 1) : row;\n        });\n    });\n\n    let colorValues = [];\n    matrix.color.forEach((row) => { colorValues = colorValues.concat(row)});\n    colorValues = colorValues.filter(d => d !== 0)\n\n    let chords = chord(matrix.size);\n\n    if(colorDomain === null) {\n        colorDomain = [Math.min.apply(null, colorValues), Math.max.apply(null, colorValues)];\n    }\n\n    let interpolateColor = colorMap(colors, colorDomain);\n\n    let getColor = function(d) {\n        let send = matrix.color[d.source.index][d.target.index];\n        let recv = matrix.color[d.target.index][d.source.index];\n        return interpolateColor(Math.max(send, recv));\n    }\n\n    let getOpacity = function(d) {\n        let send = matrix.color[d.source.index][d.target.index];\n        let recv = matrix.color[d.target.index][d.source.index];\n        if( Math.max(send, recv) <= threshold) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } \n\n    let svg = container;\n    let links;\n\n    if(chords.groups.length < 13) {\n        let core = svg.append(\"g\")\n            .attr(\"class\", \"chord\")\n            .selectAll(\"path\")\n            .data(chords)\n            .enter();\n\n        links = core.append(\"path\").attr(\"class\", \"ribbons\")\n            .attr(\"d\", ribbon().radius(radius))\n            .style(\"fill\",  getColor)\n            .style(\"stroke\", \"#FFF\")\n            .style(\"opacity\", 1);\n\n    } else {\n        let line = lineRadial()\n            .curve(curveBundle.beta(0.5))\n            .radius(d => d.radius)\n            .angle(d => { return d.angle})\n\n        let linkData = chords.map((conn) => {\n            let source = chords.groups[conn.source.index];\n            let sourceAngle = source.startAngle + (source.endAngle - source.startAngle) / 2;\n            let target = chords.groups[conn.target.index];\n            let targetAngle = target.startAngle + (target.endAngle - target.startAngle) / 2;\n            return {\n                points: [\n                    {angle: sourceAngle, radius},\n                    {angle: 0, radius: 0, link: conn}, // curve midpoint\n                    {angle: targetAngle, radius}\n                ], \n                link: conn \n            } \n        })\n\n        links = svg.append(\"g\")\n            .selectAll(\".links\")\n            .data(linkData)\n            .enter().append('path')\n            .attr('class', 'link')\n            .attr('d', d => line(d.points))\n            .attr('fill', 'none')\n            .style(\"stroke-width\", 1)\n            .style(\"opacity\", d => getOpacity(d.link))\n            .style(\"stroke\", d => getColor(d.link))\n    }\n\n    chords.colorDomain = colorDomain;\n    chords.updateColor = function(colorDomain) {\n        chords.colorDomain = colorDomain;\n        interpolateColor.domain(colorDomain);\n        links.style(\"stroke\", d => getColor(d.link));\n    }\n\n    chords.filter = function (newThreshold) {\n        threshold = newThreshold\n        links.style(\"opacity\", d => getOpacity(d.link))\n    }\n\n    return chords;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/chord.js\n// module id = null\n// module chunks = ","export default function Text(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        prefix = options.prefix || '',\n        radius = options.radius || 200,\n        color = options.color || '#000000',\n        groups = options.groups || [],\n        hover = options.hover || function(d) {};\n\n    function textTransform(d) {\n        var offset = (d.startAngle + (d.endAngle - d.startAngle)/2);\n        return (offset > Math.PI/2 && offset < 1.5*Math.PI) ? \"rotate(270)\" :\"rotate(90)\";\n    }\n\n    function textRotate(d) {\n        var offset = (d.startAngle + (d.endAngle - d.startAngle)/2);\n        return \"rotate(\" + (offset * 180 / Math.PI - 90)\n            + \")translate(\" + (radius+5) + \",0)\";\n    }\n\n    var groupLabel = container.append(\"g\").selectAll(\"groupLabel\")\n            .data(groups)\n            .enter().append(\"g\")\n            .attr(\"transform\", textRotate);\n\n    groupLabel.append(\"text\")\n        .style(\"font-size\", \"0.9em\")\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\",  textTransform)\n        .text(function(d, i) { return  prefix + data[i]; });\n\n    return groupLabel;\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/text.js\n// module id = null\n// module chunks = ","export default function stats(data, fields){\n\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = {\n            min: Math.min.apply(null, a),\n            max: Math.max.apply(null, a)\n        };\n    });\n\n    return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/stats.js\n// module id = null\n// module chunks = ","import getStats from './stats';\nimport * as colorScales from 'd3-scale-chromatic';\nimport {scaleLinear, scalePow} from 'd3-scale'; \nimport {arc} from 'd3-shape';\nimport {select} from 'd3-selection';\n\nexport default function bars(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        vmap = options.vmap,\n        width = options.width || 800,\n        height = options.height || width,\n        outerRadius = options.outerRadius || Math.min(width/2, height/2),\n        innerRadius = options.innerRadius || outerRadius / 4,\n        padding = options.padding || 0.05,\n        domain = options.domain || null,\n        colorDomain = options.colorDomain || null,\n        stats = options.stats || null,\n        tooltip = options.tooltip || function() {},\n        colors = options.colors || ['white', 'steelblue'],\n        \n        hover = options.hover || function(d) {};\n\n    var getSize = function() { return outerRadius; },\n        getColor = (typeof colors === 'function') ? colors : function() { return colors[0]};\n\n    if(stats === null) {\n        stats = getStats(data, Object.keys(vmap).map(function(k){ return vmap[k]; }));\n    }\n\n    if(vmap.color && typeof(colors) != 'function') {\n        if(colorDomain === null) {\n            if(stats[vmap.color].max == stats[vmap.color].min) stats[vmap.color].max+=0.000001;\n            colorDomain = [stats[vmap.color].min, stats[vmap.color].max];\n        }\n        if(typeof colors == 'function') {\n            getColor = colors;\n        } else if(typeof colors == 'string') {\n            var getRange = scaleLinear().domain(colorDomain).range([0, 1]);\n            getColor = function(value) {\n                if(typeof colorScales['interpolate' + colors] == 'function') {\n                    return colorScales['interpolate' + colors](getRange(value));\n                } else {\n                    return 'steelblue';\n                }\n            }\n        } else {\n            getColor = scaleLinear()\n                .domain(colorDomain)\n                .range(colors);\n        }\n    }\n\n    if(vmap.size) {\n        getSize =  scalePow().exponent(0.9)\n            .domain([stats[vmap.size].min, stats[vmap.size].max])\n            .range([innerRadius, outerRadius]);\n    }\n\n    function createArc(d) {\n        return arc()\n            .innerRadius(innerRadius)\n            .outerRadius(getSize(d[vmap.size]))\n            (d);\n    }\n\n\n    var bars = container.append(\"g\").selectAll(\".bar\")\n        .data(data)\n        .enter()\n\n\n    var marks = bars.append(\"path\").attr(\"class\", \"bars\")\n        .attr('class', 'bars')\n        .style(\"fill\", function(d) { return getColor(d[vmap.color]); })\n        // .style(\"stroke\", function(d) { return getColor(d[vmap.color]); })\n        .style(\"stroke\", '#000')\n        .style(\"stroke-width\", 0)\n        // .style(\"fill-opacity\", function(d){return getOpacity(d[opacityAttr])})\n        .attr(\"d\", createArc)\n        .on(\"mouseover\", function(d){\n            let pos = this.getBBox();\n            select(this).style('stroke-width', 2)\n            tooltip.show(pos, d)\n        })\n        .on(\"mouseout\", function() {\n            tooltip.hide();\n            select(this).style('stroke-width', 0)\n        }); \n\n    bars.colorDomain = colorDomain;\n    bars.updateColor = function(colorDomain) {\n        bars.colorDomain = colorDomain;\n        getColor.domain(colorDomain);\n        marks.style(\"fill\", function(d) { return getColor(d[vmap.color]); })\n    }\n\n    return bars;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/rect.js\n// module id = null\n// module chunks = ","import getStats from './stats';\n\nexport default function scatter(arg) {\n    var options = arg || {},\n        container = options.container || \"body\",\n        data = options.data,\n        vmap = options.vmap,\n        width = options.width || 800,\n        height = options.height || width,\n        outerRadius = options.outerRadius || Math.min(width/2, height/2),\n        innerRadius = options.innerRadius || outerRadius / 4,\n        padding = options.padding || 0.05,\n        domain = options.domain || null,\n        colorDomain = options.colorDomain || null,        \n        stats = options.stats || null,\n        colors = options.colors || ['white', 'steelblue'],\n        hover = options.hover || function(d) {};\n\n    var scatter = {};\n    var getSize = function() { return 5; },\n        getPosX = function() { return 0; },\n        getPosY = function() { return 0; },\n        getColor = (typeof colors === 'function') ? colors : function() { return colors[0]};\n\n    if(stats === null) {\n        stats = getStats(data, Object.keys(vmap).map(function(k){ return vmap[k]; }));\n    }\n    if(vmap.color && typeof(colors) != 'function') {\n        if(colorDomain === null) {\n            if(stats[vmap.color].max == stats[vmap.color].min) stats[vmap.color].max+=0.000001;\n            colorDomain = [stats[vmap.color].min, stats[vmap.color].max];\n        }\n\n        if(typeof colors == 'function') {\n            getColor = colors;\n        } else if(colors == 'string') {\n            var getRange = d3.scale.linear().domain(colorDomain).range([0, 1]);\n            getColor = function(value) {\n                if(typeof colorScales['interpolate' + colors] == 'function') {\n                    return colorScales['interpolate' + colors](getRange(value));\n                } else {\n                    return 'steelblue';\n                }\n            }\n        } else {\n            getColor =  d3.scale.linear()\n                .domain(colorDomain)\n                .range(colors);\n        }\n    }\n\n    if(vmap.x) {\n        var xScale = d3.scale.linear()\n        .domain([stats[vmap.x].min, stats[vmap.x].max]);\n\n        getPosX = function(d) {\n            var v = xScale.range([ d.startAngle, d.endAngle])(d[vmap.x]);\n            return v;\n        }\n    }\n\n    if(vmap.y) {\n        getPosY = d3.scale.linear()\n            .domain([stats[vmap.y].min, stats[vmap.y].max])\n            .range([innerRadius, outerRadius]);\n    }\n\n    function createArc(d) {\n        return d3.svg.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(getSize(d[vmap.size]))\n            (d);\n    }\n\n    var visualElement = container.append(\"g\").selectAll(\".dot\")\n        .data(data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", function(d){return getSize(d[vmap.size])})\n        .attr(\"cx\", function(d){return getPosY(d[vmap.y]) * Math.cos(getPosX(d))})\n        .attr(\"cy\",function(d){return getPosY(d[vmap.y]) * Math.sin(getPosX(d))})\n        .style(\"fill\", function(d){return getColor(d[vmap.color])});\n\n    scatter.colorDomain = colorDomain;\n    scatter.updateColor = function(colorDomain) {\n        scatter.colorDomain = colorDomain;\n        getColor.domain(colorDomain);\n        visualElement.style(\"fill\", function(d) { \n            return getColor(d[vmap.color]); \n        })\n    }\n\n    return scatter;\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/scatter.js\n// module id = null\n// module chunks = ","import * as cs from 'd3-scale-chromatic';\nimport {select} from 'd3-selection';\nimport {format as d3Format} from 'd3-format';\n\nvar gradientID = 0;\nexport default function colorLegend({\n    container = null,\n    width = 200,\n    height = 20,\n    pos = [0, 0],\n    padding = {left: 25, right: 25, top: 20, bottom: 0},\n    colors = ['#eee', 'steelblue'],\n    domain = ['min', 'max'],\n    noLabel = false,\n    format = d3Format('.2s'),\n    title = ''\n}){\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n    \n    let legend;\n    if(container === null) {\n        legend = select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n        legend.attr(\"width\", width).attr(\"height\", height);\n    } else {\n        legend = container;\n        if(typeof container.appendChild === 'function') {\n            container.appendChild(legend);\n        } else if(typeof container === 'string') {\n            document.getElementById(container).appendChild(legend);\n        }\n    } \n       \n    function linearGradient(colors) {\n        let gradient = legend.append(\"defs\")\n            .append(\"linearGradient\")\n                .attr(\"id\", \"gradlegend\" + gradientID)\n                .attr(\"x1\", \"0%\")\n                .attr(\"x2\", \"100%\")\n                .attr(\"y1\", \"0%\")\n                .attr(\"y2\", \"0%\");\n\n        if(Array.isArray(colors)) {\n            colors.forEach(function(c, i){\n                gradient.append(\"stop\")\n                    .attr(\"offset\", i / colors.length )\n                    .attr(\"stop-color\", c);\n            });\n        } else if(typeof colors == 'string' ) {\n            if(typeof cs['interpolate' + colors] == 'function') {\n                for(var i = 0; i < 128; i++) {\n                    gradient.append(\"stop\")\n                    .attr(\"offset\", i / 128 )\n                    .attr(\"stop-color\", cs['interpolate' + colors](i/128));\n                }\n            }\n        }\n\n        return gradientID++;\n    }\n\n    var rect = legend.append(\"g\");\n    rect.attr('transform', 'translate(' + padding.left + ', ' + padding.right + ')')\n        .append(\"rect\")\n        .attr(\"x\", pos[0])\n        .attr(\"y\", pos[1])\n        .attr(\"width\", width-padding.left)\n        .attr(\"height\", height)\n        .style(\"fill\",\"url(#gradlegend\" + linearGradient(colors) + \")\");\n\n    if(!noLabel) {\n        rect.append(\"text\")\n            .attr(\"x\", pos[0])\n            .attr(\"y\", pos[1] + height/2 + 5)\n            .style(\"fill\", \"#222\")\n            .style(\"text-anchor\", 'end')\n            // .style(\"font-size\", \".9em\")\n            .text(format(domain[0]) || 0);\n\n        rect.append(\"text\")\n            .attr(\"x\", pos[0] + width - padding.left)\n            .attr(\"y\", pos[1] + height/2 + 5)\n            .style(\"fill\", \"#222\")\n            .style(\"text-anchor\", 'begin')\n            // .style(\"font-size\", \".9em\")\n            .text(format(domain[1]) || 'max');\n    }\n\n    if(title) {\n        rect.append(\"g\")\n            .append(\"text\")\n            .attr(\"y\", pos[1])\n            .attr(\"x\", pos[0] + (width - padding.left) / 2)\n            // .attr(\"dy\", \"0.7em\")\n            .style(\"text-anchor\", \"middle\")\n            // .style(\"font-size\", \"0.7em\")\n            .text(title);\n    }\n\n    return legend;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/colorlegend.js\n// module id = null\n// module chunks = ","import chord from './chord';\nimport textLabel from './text';\nimport rect from './rect';\nimport scatter from './scatter';\nimport colorlegend from './colorlegend';\nimport colorMap from './colors';\nimport {select} from 'd3-selection';\n\nfunction getExtent(data, field) {\n    var tuple = data.map(function (d) {\n        return d[field];\n    });\n    var min = Math.min.apply(null, tuple);\n    var max = Math.max.apply(null, tuple);\n    if (max == min) max += 1e-4;\n\n    return [min, max];\n}\n\nexport default function Picos(spec) {\n    let layers = spec.layers;\n    let rings = new Array(layers.length);\n\n    var config = spec.config;\n    var width = config.width || 800;\n    var height = config.height || width;\n    var padding = config.padding || 10;\n    var outerRadius = config.outerRadius || Math.min(width / 2, height / 2);\n    var innerRadius = config.innerRadius || Math.min(width / 4, height / 4);\n    var container = config.container || \"body\";\n    var parentRing = container;\n    var chartTitle = config.chartTitle || false;\n    var colorDomains = config.colorDomains || [];\n    var groups = [];\n\n    outerRadius -= padding;\n\n    \n    var offset = Math.min((width / 2), (height / 2));\n    var baseSVG = select(container).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + offset + \",\" + offset + \")\");\n\n    var cirRange = outerRadius - innerRadius - padding,\n        cirOffset = innerRadius,\n        sectionRadius = cirOffset,\n        cirSize = layers\n        .map(function (layer) {\n            return layer.size;\n        })\n        .reduce(function (a, b) {\n            return a + b;\n        });\n\n    var tipBox;    \n    var tip = null;\n    let tipTextBox;\n    let tipTexts = [];\n    \n    let tooltip = {\n        show(pos, dataItem) {\n            if (tip === null) {\n                tip = tipBox.append('rect')\n                    .attr(\"class\", \"tooltip\")\n                    .attr('fill', '#EEE')\n                    .attr('stroke', '#222')\n                    .attr('width', 100)\n                    .attr('height', 50)\n                    .style(\"opacity\", 0);\n\n                tipTextBox = tipBox.append('text')\n                    .attr('x', 10)\n                    .attr('y', 10)\n            }\n            tip.style(\"opacity\", .9)\n            tipBox.attr('transform', 'translate (' +  [pos.x + pos.width, pos.y + pos.height].join(',') + ')')\n\n            let texts = Object.entries(dataItem).slice(0, 10)\n            texts.forEach((text, i) => {\n                let label = tipTextBox.append('tspan')\n                    .attr('y', i * 15)\n                    .attr('x', 15)\n                    .attr('dy', 20)\n                    .text(text.join(': '));\n                tipTexts.push(label)\n            })\n            let textBBox = tipTextBox.node().getBBox();\n            tip.attr('width', textBBox.width + 15*2)\n                .attr('height', textBBox.height + 15*2)\n \n        },\n\n        hide () {\n            tip.style(\"opacity\", .0)\n            tipTexts.forEach((t) => t.remove())\n        }\n    }\n\n    layers.forEach(function (layer, li) {\n        var sectionRadiusRange = cirOffset + layer.size / cirSize * cirRange,\n            cirPadding = 0.05 * sectionRadiusRange,\n            sectionRadius = sectionRadiusRange,\n            colorDomain = ['min', 'max'];\n\n        var colors = layer.colors;\n        var getColor;\n\n        if (layer.type == 'link') {\n            let linkOption = Object.assign({\n                container: baseSVG,\n                radius: cirOffset,\n                colorDomain: colorDomains[li],\n            }, layer)\n            rings[li] = chord(linkOption);\n            parentRing = rings[li];\n            groups = parentRing.groups;\n            colorDomain = rings[li].colorDomain;\n            \n        } else if (layer.type == 'text') {\n            layer.container = baseSVG;\n            layer.radius = cirOffset;\n            layer.groups = groups;\n            rings[li] = textLabel(layer);\n            cirOffset = sectionRadius + cirPadding;\n        } else {\n\n            var dataItems = [];\n            groups.forEach(function (chord, ci) {\n                var delta = (chord.endAngle - chord.startAngle) / layer.data[ci].length;\n                layer.data[ci].forEach(function (d, di) {\n                    var start = chord.startAngle + di * delta;\n                    d.startAngle = start;\n                    d.endAngle = start + delta;\n                    d.index = chord.index;\n                })\n                dataItems = dataItems.concat(layer.data[ci]);\n            })\n\n            colorDomain = (Array.isArray(colorDomains[li])) ? colorDomains[li] : getExtent(dataItems, layer.vmap.color);\n\n            getColor = colorMap(layer.colors || ['red', 'steelblue'], colorDomain);\n\n            var plot;\n            if (layer.type == 'circle') {\n                plot = scatter;\n            } else {\n                plot = rect;\n            }\n\n            rings[li] = plot({\n                container: baseSVG,\n                data: dataItems,\n                innerRadius: cirOffset,\n                outerRadius: sectionRadius,\n                colors: getColor,\n                colorDomain: colorDomain,\n                tooltip: tooltip,\n                vmap: layer.vmap || layer.encoding,\n            });\n\n            cirOffset = sectionRadius + cirPadding;\n\n        }\n\n        if (layer.type !== 'text' && layer.vmap) {\n            if (config.legend) {\n                if (rings[li].colorDomain) colorDomain = rings[li].colorDomain;\n                colorlegend({\n                    container: baseSVG,\n                    colors: layer.colors,\n                    height: Math.min(50, outerRadius / 2 / rings.length),\n                    width: (width / 2 - outerRadius / 2 - padding) * 0.9,\n                    title:  (layer.vmap) ? layer.vmap.color : null,\n                    domain: colorDomain,\n                    pos: [\n                        width / 2 - (width / 2 - outerRadius / 2 - padding) * 0.9,\n                        outerRadius / 2 + outerRadius / 2 / (rings.length) * li]\n                })\n            }\n        }\n\n        if (chartTitle) {\n            baseSVG.append(\"text\")\n                .style(\"font-size\", \"1.1em\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"x\", 0)\n                .attr(\"y\", height / 2 - 15)\n                .text(function (d, i) {\n                    return chartTitle\n                });\n        }\n\n        tipBox = baseSVG.append('g')\n    });\n\n    rings.createColorLegend = function (options) {\n        var svg = select(options.container).append('svg')\n            .attr('width', options.width).attr('height', options.height);\n\n        layers.forEach(function (layer, li) {\n            if (layer.type == 'text') return;\n            var colorDomain = (options.colorDomains) ? options.colorDomains[li] : rings[li].colorDomain;\n            colorlegend({\n                container: svg,\n                colors: layer.colors,\n                height: options.height / (layers.length - 1),\n                width: options.width,\n                title: layer.project + ' (' + ((layer.vmap) ? layer.vmap.color : null) + ')',\n                domain: colorDomain,\n                padding: options.padding,\n                pos: [0, options.height / (layers.length - 1) * li]\n            });\n        });\n    }\n\n    rings.updateColor = function (colorDomains) {\n        rings.forEach(function (ring, ri) {\n            if (layers[ri].type !== 'text') {\n                ring.updateColor(colorDomains[ri]);\n            }\n        })\n    }\n\n    rings.updateLink = rings[0].filter\n\n    return rings;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../picos/src/main.js\n// module id = null\n// module chunks = ","var ArrayOpts = require(\"./arrays.js\");\n\nmodule.exports = function(data, spec, headers){\n    var i,\n        l = data.length,\n        attributes = headers || Object.keys(data[0]),\n        bin,\n        bins = [],\n        binCollection = {},\n        result = [],\n        ks;\n\n    if(!spec.hasOwnProperty('$group') && !spec.hasOwnProperty('$bin')) return result;\n\n    if(typeof spec.$bin == 'object') {\n        var binAttr = Object.keys(spec.$bin)[0],\n            binCount = spec.$bin[binAttr];\n\n        if(attributes.indexOf(binAttr) !== -1) {\n            var column = data.map(function(d){return d[binAttr]}),\n                min = ArrayOpts.min(column),\n                max = ArrayOpts.max(column),\n                binInterval = (max - min) / binCount;\n\n            for(i = 0; i < l; i++){\n                data[i]['bin@' + binAttr] = Math.min(Math.floor(data[i][binAttr]/binInterval), binCount-1);\n            }\n\n            spec.$group = 'bin@' + binAttr;\n            attributes.push('bin@' + binAttr);\n        }\n    }\n\n    for(i = 0; i < l; i++){\n        if(Array.isArray(spec.$group)) {\n            ks = [];\n            spec.$group.forEach(function(si){\n                ks.push(data[i][si]);\n            });\n            bin = JSON.stringify(ks);\n        } else {\n            bin = data[i][spec.$group];\n        }\n        if( bins.indexOf(bin) < 0 ){\n            bins.push(bin);\n            binCollection[bin] = [data[i]];\n        } else {\n            binCollection[bin].push(data[i]);\n        }\n    }\n\n    var bl = bins.length;\n\n    for(i = 0; i < bl; i++){\n        var res = {};\n        if(Array.isArray(spec.$group)) {\n            ks = JSON.parse(bins[i]);\n            spec.$group.forEach(function(s, j){\n                res[s] = ks[j];\n            })\n\n        } else {\n            res[spec.$group] = bins[i];\n        }\n\n        if(spec.$data) {\n            res.data = binCollection[bins[i]];\n        }\n\n        if(spec.$group) {\n            var gkeys = Array.isArray(spec.$group) ? spec.$group : [spec.$group];\n\n            gkeys.forEach(function(gk){\n                if(attributes.indexOf(gk) === -1) {\n                    throw Error('Invalid attribute name: ', gk);\n                }\n            })\n        }\n\n        var out = spec.$collect || spec.$reduce || [];\n        var keys = Object.keys(out);\n        if(keys.length === 0 && !spec.$data) return result;\n        keys.forEach(function(key){\n            var attr = key,\n                opt = out[key];\n\n            if(opt === \"$count\" || opt === \"$data\") {\n                attr = key;\n            }\n            if(typeof out[key] === 'object'){\n                opt = Object.keys(out[key])[0];\n                attr = out[key][opt];\n\n                if(attributes.indexOf(attr) === -1 && attr !== \"*\" && !Array.isArray(attr)) {\n                    var warnMsg = \"No matching attribute or operation defined for the new attribute \" + key + \":\" + spec[key];\n                    console.warn(warnMsg);\n                    return;\n                }\n            }\n\n            if(typeof opt === \"function\") {\n                // res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; }).reduce(opt);\n                res[key] = opt.call(null, binCollection[bins[i]].map(function(a){ return a[attr]; }));\n            } else if(typeof opt === \"string\") {\n                if(opt === \"$unique\") {\n                    res[key] = ArrayOpts.unique(binCollection[bins[i]].map(function(a){ return a[key]; }));\n                } else if (opt === \"$list\") {\n                    res[key] = binCollection[bins[i]].map(function(a){ return a[attr]; });\n                } else if (opt === \"$first\") {\n                    res[key] = binCollection[bins[i]][0][attr];\n                } else if (opt === \"$merge\") {\n                    var mergedResult = [];\n                    binCollection[bins[i]].map(function(a){ return a[attr]; }).forEach(function(m){\n                        mergedResult = mergedResult.concat(m);\n                    })\n                    res[key] = mergedResult;\n                } else if (opt === \"$count\") {\n                    res[key] = binCollection[bins[i]].length;\n                } else if (opt === \"$data\") {\n                    var collect = (spec.$collect) ? '$collect' : '$reduce';\n                    res[key] = (spec[collect][key][opt] == '*')\n                        ? binCollection[bins[i]]\n                        : binCollection[bins[i]].map(function(data){\n                            var row = {};\n                            spec[key][opt].forEach(function(k){ row[k] = data[k] });\n                            return row;\n                        });\n                } else {\n                    var fname = opt.slice(1);\n\n                    if(fname in ArrayOpts) {\n                        res[key] = ArrayOpts[fname].call(null, binCollection[bins[i]].map(function(a){\n                            return a[attr];\n                        }));\n                    }\n                }\n            }\n        });\n        result.push(res);\n    }\n\n    return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/aggregate.js\n// module id = L1ge\n// module chunks = 1","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  margin-top: 10px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-79a6cfec\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-79a6cfec\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-79a6cfec\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import template from '../html/WebSocket.html'\n\nexport default {\n  name: 'WebSocket',\n  template,\n  data: () => ({\n    dialog: true,\n    socketError: false,\n    server: 'localhost:8888',\n    modes: ['Post Hoc', 'In Situ'],\n    defaultMode: 'Post Hoc',\n  }),\n  methods: {\n    connect () {\n      return new Promise((resolve, reject) => {\n        let socket = new WebSocket('ws://' + this.server + '/websocket')\n        socket.onopen = () => {\n          this.dialog = !this.dialog\n          this.socketError = false\n          socket.send(JSON.stringify({data: 'KpData', method: 'get'}))\n        }\n  \n        socket.onerror = (error) => {\n          this.socketError = true\n          reject(error)\n        }\n    \n        socket.onmessage = (event) => {\n          let dataObj = JSON.parse(event.data)\n          if (dataObj.schema.hasOwnProperty('CommData')) {\n            dataObj.schema.CommData = 'int'\n          }\n          dataObj.data.forEach(d => {\n            d.RbPrim = d.RbTotal - d.RbSec\n          })\n          resolve({data: dataObj.data, schema: dataObj.schema})\n        }\n      })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/WebSocket.js","import p3 from 'p3'\nimport picos from 'picos'\nimport template from '../html/Communication.html'\n\nexport default {\n  name: 'Communication',\n  template,\n  data: () => ({\n    drawer: false,\n    data: null,\n    timeDomain: null,\n    allMetrics: [],\n    metrics: [],\n    showIntraComm: false,\n    numKP: 0,\n    numPE: 0,\n    threshold: 0,\n    rings: [],\n    maxLinkValue: 1,\n    isComparisonMode: false,\n    granularity: 'KpGid',\n    colors: ['red', 'blue', 'yellow', 'green', 'purple']\n\n  }),\n  computed: {\n    thresholdValue: function() {\n      return (this.threshold / 100 * this.maxLinkValue).toFixed(0)\n    }\n  },\n  methods: {\n    updateLink () {\n      this.rings.forEach(ring => {\n        ring.updateLink(this.thresholdValue )\n      })\n    },\n\n    updateMetrics () {\n      this.$emit('updateMetrics', this.metrics)\n    },\n\n    visualize({\n      data,\n      timeDomain,\n      metrics,\n      timeIntervals,\n      measure,\n      processIds = [],\n      clusterIds = [],\n      clusterColors = this.colors\n    }) {\n      if(data !== undefined && Array.isArray(data)) {\n        this.data = data\n        if (processIds.length > 0) {\n          this.data = data.filter(d => processIds.indexOf(d.KpGid))\n        }\n        this.numPE = Math.max(...this.data.map(d => d.Peid)) + 1\n        this.numKP = Math.max(...this.data.map(d => d.Kpid)) + 1\n      }\n      this.rings = new Array(timeIntervals.length)\n      let colorDomains = new Array(metrics.length + 1)\n      let container = this.$refs.container\n      container.innerHTML = ''\n      if (timeIntervals.length > 1) {\n        this.isComparisonMode = true\n      }\n\n      timeIntervals.forEach((timeInterval, tii) => {\n        let aggregateByTime = p3.pipeline()\n        if(timeInterval !== null) {\n          let match = {}\n          match[timeDomain] = timeInterval\n          aggregateByTime.match(match)\n        }\n        \n        let tsData = aggregateByTime.aggregate({\n          $group: timeDomain,\n          $collect: {\n            items: {$data: '*'}\n          }\n        }).execute(this.data)\n        \n        let tsCommData = tsData.map(sample => {\n          return sample.items.sort((a,b) => a.Peid - b.Peid).map(item => item.CommData)\n        })\n        let accCommData = tsCommData[0]\n  \n        if(tsCommData.length > 1) {\n          tsCommData.slice(1).forEach(sample => {\n            sample.forEach((rows, i) => {\n              rows.forEach((value, j) => {\n                if(i < accCommData.length) accCommData[i][j] += value;\n              })\n            })\n          })\n        }\n        accCommData = accCommData.map(rows => {\n          let newRows = new Array(this.numPE)\n          for(var i = 0; i< this.numPE; i++) {\n            newRows[i] = rows.slice(i * this.numKP, (i+1) * this.numKP).reduce((a,b) => a+b)\n          }\n          return newRows\n        })\n    \n        let commData = accCommData[0].map((a, i) => p3.vector.sum(accCommData.slice(i*this.numKP, (i+1)*this.numKP)))\n        \n        let collection = {}\n        for (let metric of metrics) {\n          collection[measure + '.' + metric] = {}\n          collection[measure + '.' + metric]['$'+measure] = metric\n        }\n\n        let aggrSpec = {\n          $aggregate: {\n            $group: ['Kpid', 'Peid'],\n            $reduce: collection\n          }\n        }\n  \n        let transform = p3.pipeline()\n        let match = {}\n        if (timeInterval !== null) {\n          match[timeDomain] = timeInterval\n        }\n\n        if (Object.keys(match).length) {\n          transform.match(match)\n        }\n\n        let result = transform.aggregate(aggrSpec.$aggregate)\n          .execute(this.data)\n\n        let metricData = p3.aggregate(result, {\n          $group: 'Peid',\n          $collect: {items: {$data: '*'}}\n        })\n        .sort((a, b) => a.items[0].Peid - b.items[0].Peid)\n        .map(r => r.items)\n\n        let colorSets = [\n          ['#EEE', 'teal'],\n          ['#EEE', 'purple'],\n          ['#EEE', 'orange'],\n          ['#EEE', 'steelblue'],\n          ['#EEE', 'red'],\n          ['steelblue', 'red'],\n          ['green', 'yellow'],\n        ]\n  \n        let layers = [\n          {\n            type: 'link',\n            data: commData,\n            threshold: 0,\n            ignoreDiagonal: !this.showIntraComm,\n            size: 2,\n            vmap: { color: 'CommData' },\n            colors: ['steelblue', 'red'],\n            colorDomain: colorDomains[0]\n          },\n        ]\n\n        let layerSpec = {\n          type: 'rect',\n          size: 1,\n        }\n\n        if(clusterIds.length && processIds.length) {\n          metricData.forEach( (items) => {\n            items.forEach((item)=> {\n              let gid = item.Peid * this.numKP + item.Kpid\n              let pid = processIds.indexOf(gid)\n              item.clusterId = clusterIds[pid]\n            })\n          })\n\n          layerSpec.colors = (d) => {\n            return clusterColors[d]\n          }\n          layerSpec.vmap = {color: 'clusterId'}\n        }\n\n        metrics.forEach( (metric, mi) => {\n          let layer = Object.assign({}, layerSpec)\n          layer.data = metricData\n          layer.colorDomain = colorDomains[mi+1]\n\n          if(clusterIds.length && processIds.length) {\n            layer.vmap.size = measure + '.' + metric\n          } else {\n            layer.vmap = { color: measure + '.' + metric }\n            layer.colors = colorSets[mi]\n          }\n          layers.push(layer)\n        })\n  \n        layers.push({\n          type: 'text',\n          data: metricData.map((r,i) => 'PE' + i),\n          size: 1\n        })\n        \n        let div = document.createElement('div')\n        let radius = container.clientWidth / timeIntervals.length\n        this.rings[tii] = picos({\n          config: {\n            container: div,\n            legend: (tii === timeIntervals.length - 1),\n            width: radius,\n            height: radius\n          },\n          layers: layers\n        })\n  \n        container.appendChild(div)\n        this.rings[tii].forEach( (ring, rii) => {\n          if (Array.isArray(colorDomains[rii])) {\n            colorDomains[rii][0] = Math.min(colorDomains[rii][0], ring.colorDomain[0])\n            colorDomains[rii][1] = Math.max(colorDomains[rii][1], ring.colorDomain[1])\n          } else {\n            if(Array.isArray(ring.colorDomain)) {\n              colorDomains[rii] = ring.colorDomain\n            }\n          }\n        })\n      })\n      this.maxLinkValue = colorDomains[0][1]\n      if(timeIntervals.length > 1) {\n        this.rings.forEach(ringLayers=> {\n          ringLayers.forEach((ringLayer,rii) => {\n            if(typeof(ringLayer.updateColor) === 'function') {\n              ringLayer.updateColor(colorDomains[rii])\n            }\n          })\n        })\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Communication.js","import p4 from 'p4'\nimport template from '../html/TimeSeries.html'\n\nexport default {\n  name: 'TimeSeries',\n  template: template,\n  data: () => ({\n    data: null,\n    view: null,\n    vis: null,\n    container: null,\n    enableInteraction: true,\n    height: 0,\n    width: 0,\n    metrics: [],\n    timeDomains: ['LastGvt', 'RealTs', 'VirtualTime'],\n    granularities: ['System', 'PE', 'KP'],\n    measures: ['avg', 'sum', 'max', 'min'],\n    selectedTimeDomain: 'LastGvt',\n    granularity: 'System',\n    selectedMeasure: 'sum',\n    selectedMetrics: ['NeventProcessed', 'RbTotal'],\n    callback: null,\n    colors: ['teal', 'purple', 'orange', 'steelblue'],\n    visMarks: {\n      System: 'area',\n      PE: 'line',\n      KP: 'line'\n    },\n    clusters: null,\n    colorEncoding: null,\n    colorSet: ['green', 'orange', 'purple', 'steelblue', 'red']\n  }),\n  watch: {\n    clusters: function(cls) {\n      this.colorEncoding = cls[0]\n    }\n  },\n  mounted () {\n    this.container = document.getElementById('RossVisTimeSeries')\n  },\n  methods: {\n    init (dataObj) {\n      let cache = p4.cstore({})\n      cache.import(dataObj)\n      cache.index('RealTs')\n      cache.index('LastGvt')\n      this.data = cache.data()\n      this.width = this.container.clientWidth\n      this.height = this.container.clientHeight * 0.9\n      let config = {\n        container: this.container,\n        viewport: [this.width, this.height],\n        padding: {left: 100, right: 20, top: 20, bottom: 50},\n      }\n      this.vis = p4(config).data(this.data)\n    },\n\n    destroy () {\n      this.vis = null\n      this.container.innerHTML = ''\n    },\n\n    visualize (callback) {\n      if(typeof(callback) === 'function') {\n        this.callback = callback\n      }\n      let aggregation = []\n      let collection = {}\n      let views = []\n      let metrics = this.selectedMetrics\n      metrics.forEach((metric, mi) => {\n        collection[metric] = {}\n        collection[metric]['$' + this.selectedMeasure] = metric\n      })\n\n      let firstMetric = {}\n      let firstMetricName = Object.keys(collection)[0]\n      firstMetric[firstMetricName] = collection[firstMetricName]\n\n      let vmap = {\n        mark: this.visMarks[this.granularity],\n        x: this.selectedTimeDomain,\n        color: 'colors',\n        y: 'metrics',\n        size: 1,\n        gridlines: {y: true},\n        opacity: (this.granularity === 'KP') ? 0.5 : 1,\n        facets: {\n          rows: {\n            metrics: metrics,\n            colors: this.colors\n          },\n          sortBy: {var: 'metrics'}\n        },\n      }\n\n      if (this.enableInteraction) {\n        vmap.facets.brush = {\n          condition: {x: true, lazy: true},\n          callback: (selection) => {\n            this.callback(selection[this.selectedTimeDomain])\n          }\n        }\n      }\n\n      if(Array.isArray(this.clusters)) {\n        this.clusters.forEach(cluster => {\n          collection[cluster] = {$max: cluster}\n        })\n        if(this.colorEncoding) {\n          vmap.color = {\n            field: this.colorEncoding,\n            range: this.colorSet,\n            \"interpolate\": false\n          }\n        }\n      }\n      \n      if(this.granularity === 'PE') {\n        vmap.by = 'Peid'\n        aggregation = [this.selectedTimeDomain, 'Peid']\n      } else if (this.granularity === 'KP') {\n        aggregation = [this.selectedTimeDomain, 'KpGid']\n      } else {\n        aggregation = [this.selectedTimeDomain]\n      }\n\n      this.vis.view(views).head()\n      .aggregate({\n        $group: aggregation,\n        $collect: collection\n      })\n      .visualize(vmap)\n\n      this.selectedMetrics = vmap.facets.rows.metrics\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TimeSeries.js","import WebSocket from './WebSocket'\nimport Communication from './Communication'\nimport TimeSeries from './TimeSeries'\nimport tpl from '../html/TimeNet.html'\n\nexport default {\n  name: 'TimeNet',\n  template: tpl,\n  components: {\n    WebSocket,\n    TimeSeries,\n    Communication\n  },\n  data: () => ({\n    appName: 'ROSS-Vis',\n    granularity: ['PE','KP','LP'],\n    measures: ['avg', 'sum', 'max', 'min'],\n    timeIndexes: null,\n    selectedTimeDomain: 'LastGvt',\n    selectedTimeInterval: null,\n    selectedGran: 'PE',\n    selectedMeasure: 'sum',\n    isAggregated: true,\n    left: false,\n    metrics: [],\n    selectedMetrics: ['NeventProcessed', 'RbTotal']\n  }),\n  methods: {\n    connect() {\n      this.$refs.WebSocket.connect().then(dataObj => {\n        // this.timeIndexes = data.uniqueValues\n        let timeDomains = this.$refs.TimeSeries.timeDomains\n        this.$refs.TimeSeries.init(dataObj)\n        this.data = dataObj.data\n        this.metrics = Object.keys(dataObj.schema).filter(k => timeDomains.indexOf(k) === -1 && !k.match(/id$/i))\n        this.reset()\n      })\n    },\n\n    reset() {\n      this.selectMetrics = ['NeventProcessed', 'RbTotal']\n      this.selectedTimeInterval = null\n      this.visualize()\n      \n    },\n    updateCommunication() {\n      this.$refs.Communication.visualize({\n        data: this.data,\n        measure: this.selectedMeasure,\n        timeDomain: this.selectedTimeDomain,\n        metrics: this.selectedMetrics,\n        timeIntervals: [this.selectedTimeInterval]\n      })\n    },\n\n    updateTimeSeries (callback) {\n      this.$refs.TimeSeries.selectedMetrics = this.selectedMetrics\n      this.$refs.TimeSeries.visualize(callback)\n      this.selectedMetrics = this.$refs.TimeSeries.selectedMetrics\n    },\n\n    updateTimeDomain (timeDomain) {\n      this.selectedTimeDomain = timeDomain\n      this.updateCommunication()\n    },\n\n    visualize() {\n      let callback = (selection) => {\n        this.selectedTimeInterval = selection\n        this.updateCommunication()\n      }\n      this.updateTimeSeries(callback)\n      this.updateCommunication()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TimeNet.js","import p4 from 'p4'\nimport template from '../html/Dimensionality.html'\nimport axios from 'axios'\n\nexport default {\n  name: 'Dimensionality',\n  template,\n  data: () => ({\n    data: null,\n    server: null,\n    dimensionalMethods: ['PCA', 'tSNE'],\n    dimensionalSelected: 'PCA',\n    clusteringMethods: ['DBSCAN', 'KMeans'],\n    clusteringSelected: 'DBSCAN',\n    metrics: [],\n    metricX: null,\n    metricY: null,\n    granularities: ['PE', 'KP'],\n    granularity: 'PE',\n    proc: null,\n    oncomplete: null,\n    colorSet: ['teal', 'purple', 'orange', 'steelblue']\n  }),\n  methods: {\n    init() {\n      let container = this.$refs.Vis\n      let width = container.parentElement.clientWidth\n      let height = container.parentElement.clientHeight\n      container.innerHTML = ''\n      this.proc = p4({\n        container: container,\n        viewport: [width, height],\n        padding: {left: 80, right: 30, top: 30, bottom: 80}\n      })\n      .view([{\n        width, height, \n        offset: [0, 0],\n        color: {\n          range: this.colorSet,\n          interpolate: false\n        }\n      }])\n      return this.analyze()\n    },\n\n    analyze () {\n      let baseURL = 'http://localhost:8888/analysis'\n      let dr = this.dimensionalSelected.toLowerCase()\n      let cl = this.clusteringSelected.toLowerCase()\n      let url = [baseURL, this.granularity, dr].join('/')\n\n      return new Promise((resolve, reject) => {\n        axios.get(url).then(result => {\n          this.metrics = Object.keys(result.data.schema)\n          let data = p4.cstore().import({\n            data: result.data.data,\n            schema: result.data.schema,\n          })\n          .data()\n          this.proc.data(data)\n          this.visualize()\n\n          let res = {\n            schema: result.data.schema,\n            data: result.data.data,\n            granularity: this.granularity,\n            clustering: this.clusteringMethods.map(d=>d.toLowerCase())\n          }\n          if(typeof(this.oncomplete) === 'function') {\n            this.oncomplete(res)\n          }\n          resolve(res)          \n        }).catch(err => {\n          reject(err)\n        })\n      })\n    },\n\n    visualize () {\n      this.proc.visualize({\n        x: 'PC0',\n        y: 'PC1',\n        color:  this.clusteringSelected.toLowerCase(),\n        opacity: 0.5,\n        size: (this.granularity === 'PE' ) ? 20 : 10\n      })\n\n\n    }\n  }    \n}\n    \n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Dimensionality.js","import p4 from 'p4'\nimport WebSocket from './WebSocket'\nimport Communication from './Communication'\nimport Dimensionality from './Dimensionality'\nimport tpl from '../html/DimNet.html'\n\nexport default {\n  name: 'DimNet',\n  template: tpl,\n  components: {\n    WebSocket,\n    Dimensionality,\n    Communication\n  },\n  data: () => ({\n    appName: 'ROSS-Vis',\n    timeDomains: ['LastGvt','RealTs','VirtualTime'],\n    granularity: ['PE','KP','LP'],\n    measures: ['avg', 'sum', 'max', 'min'],\n    timeIndexes: null,\n    selectedTimeDomain: 'LastGvt',\n    selectedTimeInterval: null,\n    selectedGran: 'PE',\n    selectedMeasure: 'sum',\n    isAggregated: true,\n    left: false,\n    metrics: [],\n    selectedMetrics: []\n  }),\n  methods: {\n    connect() {\n      this.$refs.Dimensionality.init()\n      this.$refs.WebSocket.connect().then(dataObj => {\n        this.$refs.Dimensionality.server = this.$refs.WebSocket.server\n        this.data = dataObj.data\n        this.metrics = Object.keys(dataObj.schema).filter(k => this.timeDomains.indexOf(k) === -1 && !k.match(/id$/i))\n        this.reset()\n      })\n    },\n\n    reset() {\n      this.selectMetrics = ['NeventProcessed', 'RbTotal']\n      this.selectedTimeInterval = null\n      this.visualize()      \n    },\n\n    updateCommunication() {\n      this.$refs.Communication.visualize({\n        data: this.data,\n        measure: this.selectedMeasure,\n        timeDomain: this.selectedTimeDomain,\n        metrics: this.selectedMetrics,\n        timeIntervals: [this.selectedTimeInterval]\n      })\n    },\n\n    visualize() {\n      // let callback = (selection) => {\n      //   let ti = this.timeIndexes[this.selectedTimeDomain]\n      //   let start = Math.floor(selection[this.selectedTimeDomain][0])\n      //   let end = Math.ceil(selection[this.selectedTimeDomain][1])\n      //   if (end - start > 1) {\n      //     this.selectedTimeInterval = [ti[start], ti[end]]\n      //     this.updateCommunication()\n      //   }\n      // }\n      // this.updateTimeSeries(callback)\n      // this.updateCommunication()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/DimNet.js","import WebSocket from './WebSocket'\nimport TimeSeries from './TimeSeries'\nimport Dimensionality from './Dimensionality'\nimport tpl from '../html/DimTime.html'\n\nexport default {\n  name: 'DimTime',\n  template: tpl,\n  components: {\n    WebSocket,\n    Dimensionality,\n    TimeSeries\n  },\n  data: () => ({\n    appName: 'ROSS-Vis',\n    timeDomains: ['LastGvt','RealTs','VirtualTime'],\n    granularity: ['PE','KP','LP'],\n    measures: ['avg', 'sum', 'max', 'min'],\n    timeIndexes: null,\n    selectedTimeDomain: 'LastGvt',\n    selectedTimeInterval: null,\n    granularity: 'PE',\n    selectedMeasure: 'sum',\n    isAggregated: true,\n    left: false,\n    metrics: [],\n    selectedMetrics: []\n  }),\n  methods: {\n    connect() {\n      this.$refs.WebSocket.connect().then(dataObj => {\n        this.$refs.Dimensionality.server = this.$refs.WebSocket.server\n        this.data = dataObj.data\n        this.metrics = Object.keys(dataObj.schema).filter(k => this.timeDomains.indexOf(k) === -1 && !k.match(/id$/i))\n        \n        this.$refs.Dimensionality.oncomplete = (result) => {\n          this.$refs.TimeSeries.granularity = result.granularity\n          this.$refs.TimeSeries.clusters = result.clustering\n          this.$refs.TimeSeries.colorEncoding = result.clustering[0]\n          this.$refs.TimeSeries.enableInteraction = false\n          if(this.$refs.TimeSeries.vis !== null) {\n            this.$refs.TimeSeries.destroy()\n          }\n          this.$refs.TimeSeries.init(this.joinData(dataObj, result))\n          this.$refs.TimeSeries.visualize()\n        }\n        this.$refs.Dimensionality.init()\n      })\n    },\n\n    joinData (dataObj, result) {\n      let sid = result.granularity === 'PE' ? 'Peid' : 'KpGid'\n      let clusters = {}\n      result.clustering.forEach(clm => {\n        clusters[clm] = result.data.sort((a,b) => a[sid] - b[sid]).map(d => d[clm])\n        dataObj.schema[clm] = 'int'\n      })\n\n      dataObj.data.forEach(d => {\n        result.clustering.forEach(clm => {\n          d[clm] = clusters[clm][d[sid]]\n        })\n      })\n\n      return dataObj\n    },\n\n    reset() {\n      this.selectMetrics = ['NeventProcessed', 'RbTotal']\n      this.selectedTimeInterval = null\n      this.visualize()      \n    },\n\n    visualize() {\n      // let callback = (selection) => {\n      //   let ti = this.timeIndexes[this.selectedTimeDomain]\n      //   let start = Math.floor(selection[this.selectedTimeDomain][0])\n      //   let end = Math.ceil(selection[this.selectedTimeDomain][1])\n      //   if (end - start > 1) {\n      //     this.selectedTimeInterval = [ti[start], ti[end]]\n      //     this.updateCommunication()\n      //   }\n      // }\n      // this.updateTimeSeries(callback)\n      // this.updateCommunication()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/DimTime.js","import tpl from '../html/CommPanels.html'\n\nimport p4 from 'p4'\n\nimport Communication from './Communication'\n\nexport default {\n  name: 'Dashboard',\n  template: tpl,\n  components: {\n    Communication\n  },\n  data: () => ({\n    socketError: false,\n    server: 'vidi1.cs.ucdavis.edu:8888',\n    timeDomains: ['LastGvt','RealTs','VirtualTime'],\n    granularity: ['PE','KP','LP'],\n    measures: ['avg', 'sum', 'max', 'min'],\n    timeIndexes: null,\n    timeDomain: 'LastGvt',\n    selectedGran: 'PE',\n    selectedMeasure: 'sum',\n    metrics: [\n      'RbSec',\n      'RbPrim'\n    ],\n    timeIntervals: [\n      [204471, 238514],\n      [242484, 263715],\n      [280495, 363079],\n      // [365019, 366747],\n    ],\n    processIds: [],\n    clusterIds: [],\n    clusterColors: [\n      [227, 119, 194],\n      [188, 189, 34],\n      [23, 190, 207],\n      [127, 127, 127]],\n  }),\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      let socket = new WebSocket('ws://' + this.server + '/websocket')\n      socket.onopen = () => {\n        this.dialog = !this.dialog\n        this.socketError = false\n        socket.send(JSON.stringify({method: 'get', data: 'KpData'}))\n      }\n\n      socket.onerror = (error) => {\n        this.socketError = true\n      }\n  \n      socket.onmessage = (event) => {\n        let data = JSON.parse(event.data)\n        data.data.forEach(d => {\n          d.RbPrim = d.RbTotal - d.RbSec\n        })\n        this.data = data.data\n        if (data.schema.hasOwnProperty('CommData')) {\n          data.schema.CommData = 'int'\n        }\n        this.$refs.container.allMetrics = Object.keys(data.schema).filter(k => k.slice(-2) !== 'id' && k.slice(-2) !== 'Id')\n        let params = data.params || {}\n\n        if(params.timeIntervals) this.timeIntervals = params.timeIntervals\n        if(params.timeMetric) this.timeDomain = params.timeMetric\n        if(params.ringMetrics) {\n          this.metrics = params.ringMetrics\n          this.$refs.container.metrics = params.ringMetrics\n        }\n        if(params.processIds) this.processIds = params.processIds\n        if(params.clusterIds) this.clusterIds = params.clusterIds\n        if(params.clusterColors) this.clusterColors = params.clusterColors.map(c => 'rgb(' + c.join(',') + ')')\n        this.update()\n      }\n\n    },\n    update () {\n      this.$refs.container.visualize({\n        data: this.data,\n        measure: 'sum',\n        timeDomain: this.timeDomain,\n        metrics: this.metrics,\n        timeIntervals: this.timeIntervals,\n        processIds: this.processIds,\n        clusterIds: this.clusterIds,\n        clusterColors: this.clusterColors\n      })\n    },\n\n    updateMetrics (metrics) {\n      this.metrics = metrics\n      this.update()\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/CommPanels.js","<template>\n  <div id=\"RossVisHome\">\n    <p><router-link to=\"/timenet\">TimeSeries + Communication Analysis</router-link></p>\n    <p><router-link to=\"/dimtime\">Dimensionality + TimeSeries Analysis</router-link></p>\n    <p><router-link to=\"/dimnet\">Dimensionality + Communication Analysis</router-link></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HomePage'\n}\n</script>\n\n<style>\n#RossVisHome {\n  margin: 5em;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/HomePage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"RossVisHome\"}},[_c('p',[_c('router-link',{attrs:{\"to\":\"/timenet\"}},[_vm._v(\"TimeSeries + Communication Analysis\")])],1),_vm._v(\" \"),_c('p',[_c('router-link',{attrs:{\"to\":\"/dimtime\"}},[_vm._v(\"Dimensionality + TimeSeries Analysis\")])],1),_vm._v(\" \"),_c('p',[_c('router-link',{attrs:{\"to\":\"/dimnet\"}},[_vm._v(\"Dimensionality + Communication Analysis\")])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-27cb0925\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HomePage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-27cb0925\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HomePage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomePage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-27cb0925\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HomePage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HomePage.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Vuetify from 'vuetify'\n\nVue.use(Router)\nVue.use(Vuetify)\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\n\nimport TimeNet from './components/TimeNet'\nimport DimNet from './components/DimNet'\nimport DimTime from './components/DimTime'\nimport CommPanels from './components/CommPanels'\nimport HomePage from './components/HomePage'\n\nexport default new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'HomePage',\n      component: HomePage\n    },\n    {\n      path: '/dimtime',\n      name: 'DimTime',\n      component: DimTime\n    },\n    {\n      path: '/timenet',\n      name: 'TimeNet',\n      component: TimeNet\n    },\n    {\n      path: '/dimnet',\n      name: 'DimNet',\n      component: DimNet\n    },\n    {\n      path: '/communications',\n      name: 'Communications',\n      component: CommPanels\n    }  \n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","const derive = require('./derive');\nconst queries = require('./query');\nconst aggregate = require('./aggregate');\nconst match = require('./match');\n\nmodule.exports = function pipeline (data){\n    var queue = [],\n        cache = {},\n        opt = {},\n        workers = [],\n        completed = 0,\n        result = [],\n        callback = function() {};\n\n    if(Array.isArray(data)) {\n        result = data;\n    }\n\n    opt.derive = derive;\n    opt.match = match;\n    opt.aggregate = aggregate;\n\n    Object.keys(queries).forEach(function(f) {\n        opt[f] = queries[f];\n    });\n\n    opt.cache = function(data, tag){\n        cache[tag] = pipeline.result();\n    };\n\n    opt.map = function(f){\n        result = data.map(f);\n        return pipeline;\n    };\n\n    var merge = {\n        aggregate: function (lastJob) {\n            var mergeSpec = {};\n            for(var key in lastJob.aggregate) {\n                var optSpec = lastJob.aggregate[key];\n                if(typeof optSpec == 'object')\n                    mergeSpec[key] = Object.keys(optSpec)[0];\n                else\n                    mergeSpec[key] = optSpec;\n            }\n            return opt.aggregate(finalResult, mergeSpec);\n        }\n    }\n\n    var finalResult = [];\n\n    function mergeResult(workerResult) {\n        var rl = finalResult.length,\n            wl = workerResult.length;\n        for(var i = 0; i < wl; i++) {\n            finalResult[rl+i] = workerResult[i];\n        }\n        completed += 1;\n\n        if(completed == workers.length) {\n            var lastJob = queue[queue.length-1],\n                lastJobOpt = Object.keys(lastJob)[0];\n            if( lastJobOpt == 'aggregate') {\n                finalResult = merge.aggregate(lastJob);\n            }\n            callback(finalResult);\n        }\n    }\n\n    var pipeline = {};\n\n    // pipeline.opt = opt;\n    Object.keys(opt).forEach(function(o){\n        pipeline[o] = function(spec) {\n            var task = {};\n            task[o] = spec;\n            queue.push(task);\n            return pipeline;\n        };\n    })\n\n    pipeline.then = function(_callback) {\n        callback = _callback;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.execute = function(data) {\n        if(Array.isArray(data)) result = data;\n        queue.forEach(function(q){\n            var f = Object.keys(q)[0];\n            result = opt[f](result, q[f]);\n        });\n        return result;\n    }\n\n    pipeline.oncomplete = pipeline.then;\n\n    pipeline.result = function() {\n        return result;\n    };\n\n    pipeline.data = function(data) {\n        result = data;\n        return pipeline\n    }\n\n    pipeline.queue = function() {\n        return queue;\n    }\n\n    pipeline.runSpec = function(specs) {\n        specs.forEach(function(spec){\n            let opt = Object.keys(spec)[0];\n            pipeline[opt.replace('$', '')](spec[opt])\n        })\n        return pipeline.execute();\n    }\n\n    return pipeline;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/pipeline.js\n// module id = OZ8g\n// module chunks = 1","import * as ctypes from './ctypes';\n\nexport function seq(dtype, start, end, interval) {\n    var step = interval || 1,\n        size = (end - start) / step + 1,\n        buf;\n\n    buf = new ctypes[dtype](size);\n    for (var i = 0; i < size; i++) {\n        buf[i] = start + i * step;\n    }\n    return buf;\n}\n\nexport let seqInt = seq.bind(null, \"int\");\nexport let seqFloat = seq.bind(null, \"float\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/utils.js\n// module id = null\n// module chunks = ","import {seqFloat} from './utils';\nimport {unique} from './arrays';\nconst vecId = ['x', 'y', 'z'];\nexport default function($p, dataProps) {\n    let data = dataProps || [];\n    $p.indexes = data.indexes || [];\n    $p.categoryIndex = data.strValues || {};\n    $p.strValues = data.strValues || {};\n    $p.strLists = data.strLists || {};\n    $p.dkeys =  data.keys || [];\n    $p.dtypes =  data.dtypes || data.types || [];\n    $p.intervals =  data.intervals || {};\n    $p.uniqueValues = data.uniqueValues;\n    $p.dataSchema = data.struct;\n\n    let dkeys = $p.dkeys;\n    let dtypes = $p.dtypes;\n    let stats =  data.stats || null;\n    \n    if (Number.isInteger(data.size)) {\n        $p.dataSize = data.size;\n    } else if (Array.isArray(data)) {\n        $p.dataSize = Math.max(...data.map(d => d.length));\n    }\n\n    let rowSize = Math.min($p.dataSize, $p.rowSize);\n    let colSize = Math.ceil($p.dataSize / rowSize);\n\n    $p.dataDimension = [rowSize, colSize];\n    $p.resultDimension = [rowSize, colSize];\n    $p.fields = $p.indexes.concat(dkeys.filter(function(k) {\n        return $p.indexes.indexOf(k) === -1;\n    }));\n    $p.fieldWidths = new Array($p.fields.length).concat(new Array($p.deriveMax).fill(1));\n    $p.fieldCount = $p.fields.length - $p.indexes.length;\n   \n    function getDataWidth(fid, range) {\n        var range = Math.abs(range[1] - range[0]);\n        if (dtypes[fid] == \"index\" || dtypes[fid] == \"int\" || dtypes[fid] == \"string\") {\n            return range + 1;\n        } else if (dtypes[fid] == \"histogram\") {\n            return range + 1;\n        } else if ([\"nominal\", \"ordinal\", \"categorical\"].indexOf(dtypes[fid]) > -1) {\n            return data.TLB.length;\n        } else if (dtypes[fid] in [\"float\", \"double\", \"numeric\"]) {\n            return 10;\n        } else {\n            return range + 1;\n        }\n    }\n    $p.fields.forEach(function(field) {\n        var min = stats[field].min,\n            max = stats[field].max,\n            fi = dkeys.indexOf(field);\n        $p.fieldWidths[fi] = getDataWidth(fi, [min, max]);\n    });\n    $p.getDataWidth = getDataWidth;\n    $p.deriveDomains = new Array($p.deriveMax).fill([0, 1]);\n    $p.deriveWidths = new Array($p.deriveMax).fill(1);\n    $p.deriveFieldCount = 0;\n\n    $p.getFieldId = function (fieldName) {\n        let fieldId = $p.fields.indexOf(fieldName);\n        if($p.indexes.length > 0 && fieldId >= $p.indexes.length) {\n            fieldId -= $p.indexes.length; \n        }\n        return fieldId; \n    }\n\n    if ($p.indexes.length === 0) {\n        $p.attribute(\"aDataIdx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataIdy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n        $p.attribute(\"aDataValx\", \"float\", seqFloat(0, $p.dataDimension[0] - 1));\n        $p.attribute(\"aDataValy\", \"float\", seqFloat(0, $p.dataDimension[1] - 1));\n    } else {\n        $p.indexes.forEach(function(id, i) {\n            let indexAttrData = unique(data[id]).sort( (a, b) => b - a );\n            $p.attribute(\"aDataVal\" + vecId[i], \"float\", new Float32Array(indexAttrData));\n            $p.attribute(\"aDataId\" + vecId[i], \"float\", seqFloat(0, indexAttrData.length - 1));\n            $p.fieldWidths[i] = indexAttrData.length;\n            $p.dataDimension[i] = indexAttrData.length;\n        });\n    }\n\n    $p.attribute(\"aDataItemVal0\", \"float\", null);\n    $p.attribute(\"aDataItemVal1\", \"float\", null);\n    $p.attribute(\"aDataItemId\", \"float\", new Float32Array($p.dataSize).map((d,i)=>i));\n    $p.attribute(\"aDataFieldId\", \"vec2\", new Float32Array($p.fields.length * 2).map((d,i)=>i));\n    $p.attribute(\"aVertexId\", \"float\", [0, 1, 2, 3, 4, 5]);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n\n    $p.attribute(\n        \"_square\",\n        \"vec2\",\n        new Float32Array([\n            -1.0, -1.0, 1.0, -1.0, \n            -1.0, 1.0, -1.0, 1.0,\n            1.0, -1.0, 1.0, 1.0\n        ])\n    );\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 1);\n\n    //TODO: get data statistics using the GPU\n    if(stats !== null) {\n        $p.fieldDomains = $p.fields.map(function(k, i) {\n            return [stats[k].min, stats[k].max];\n        }).concat(new Array($p.deriveMax).fill([0, 1]));\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fieldDomains);\n    } else {\n        $p.uniform(\"uFieldDomains\", \"vec2\",  $p.fields.map(f => [0, 1]));\n    }\n\n    let filterControls = new Array($p.fieldCount).fill(0);\n    //setup all attribute, uniform, texture, varying needed by all the shaders\n    $p.uniform(\"uDataSize\",    \"float\", $p.dataSize);\n    $p.uniform(\"uDataDim\",     \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uResultDim\",   \"vec2\",  $p.dataDimension);\n    $p.uniform(\"uIndexCount\",  \"int\",   $p.indexes.length);\n    $p.uniform(\"uFieldWidths\", \"float\", $p.fieldWidths);\n    $p.uniform(\"uFieldCount\",  \"int\",   $p.fieldCount);\n    $p.uniform(\"uFieldId\",     \"int\",   0);\n    $p.uniform(\"uFilterFlag\",  \"int\",   0);\n    $p.uniform(\"uFilterControls\",\"int\", filterControls)\n    $p.uniform(\"uVisControls\",\"int\", filterControls);\n    $p.uniform(\"uFilterRanges\",\"vec2\", $p.fieldDomains);\n    $p.uniform(\"uVisRanges\",\"vec2\", $p.fieldDomains);\n    // $p.uniform(\"uGroupFields\", \"int\",   [0, -1]);\n    $p.uniform(\"uDataInput\",   \"sampler2D\");\n    $p.uniform(\"uDeriveCount\", \"int\", $p.deriveMax);\n    // $p.uniform(\"uDeriveDomains\", \"vec2\", $p.deriveDomains);\n    // $p.uniform(\"uDeriveWidths\", \"float\", $p.deriveWidths);\n    $p.uniform(\"uFilterLevel\", \"float\", 0.1)\n    $p.uniform('uVisLevel',    \"float\", 0.1)\n\n    $p.varying(\"vResult\", \"float\");\n    $p.varying(\"vDiscardData\", \"float\");\n    $p.texture(\n        \"tData\",\n        \"float\",\n        new Float32Array($p.dataDimension[0] * $p.dataDimension[1] * $p.fieldCount), [$p.dataDimension[0], $p.dataDimension[1] * $p.fieldCount],\n        \"alpha\"\n    );\n    $p.framebuffer(\"fFilterResults\", \"unsigned_byte\", $p.dataDimension);\n    $p.framebuffer(\"fGroupResults\", \"float\", [1024, 1]);\n    $p.framebuffer(\"fDerivedValues\", \"float\", [$p.dataDimension[0], $p.dataDimension[1] * $p.deriveMax]);\n    $p.framebuffer(\"fStats\", \"float\", [2, $p.fieldCount]);\n    $p.parameter({\n        fieldCount: $p.fields.length - $p.indexes.length,\n        indexCount: $p.indexes.length\n    });\n\n    $p.fields.slice($p.indexes.length).forEach(function(attr, ai) {\n        let buf = new Float32Array($p.dataDimension[0] * $p.dataDimension[1]);\n        for (let i = 0, l = data[attr].length; i < l; i++) {\n            buf[i] = data[attr][i];\n        }\n\n        $p.texture.tData.update(\n            buf, [0, $p.dataDimension[1] * ai], $p.dataDimension\n        );\n    });\n\n    // $p.texture.tData.sampler = $p.uniform.uDataInput;\n    $p.uniform.uDataInput = $p.texture.tData;\n\n    function getFieldWidth({fid = 'int'}) {\n        return this.uFieldWidths[fid];\n    }\n\n    function getFieldDomain({fid = 'int'}) {\n        return this.uFieldDomains[fid];\n    }\n\n    function getData({fid = 'int', r = 'float', s = 'float'}) {\n        var t, value;\n        if (fid >= this.uFieldCount + this.uIndexCount) {\n            t = (float(fid - this.uFieldCount - this.uIndexCount) + s) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(r, t)).a;\n        } else {\n            if (this.uIndexCount > 0 && fid == 0) value = this.aDataValx;\n            else if (this.uIndexCount > 1 && fid == 1) value = this.aDataValy;\n            else {\n                t = (float(fid - this.uIndexCount) + s) / float(this.uFieldCount);\n                value = texture2D(this.uDataInput, vec2(r, t)).a;\n            }\n        }\n        return value;\n    }\n\n    function getNonIndexedData({fieldId = 'int', addrX = 'float', addrY = 'float'}) {\n        var offsetY, value;\n        if (fieldId >= this.uFieldCount + this.uIndexCount) {\n            offsetY = (float(fieldId - this.uFieldCount - this.uIndexCount) + addrY) /\n                float(this.uDeriveCount);\n            value = texture2D(this.fDerivedValues, vec2(addrX, offsetY)).a;\n        } else {\n            offsetY = (float(fieldId - this.uIndexCount) + addrY) / float(this.uFieldCount);\n            value = texture2D(this.uDataInput, vec2(addrX, offsetY)).a;\n        }\n        return value;\n    }\n\n    $p.subroutine(\"getFieldWidth\", \"float\", getFieldWidth);\n    $p.subroutine(\"getFieldDomain\", \"vec2\", getFieldDomain);\n    $p.subroutine(\"getData\", \"float\", getData);\n    $p.subroutine(\"getNonIndexedData\", \"float\", getNonIndexedData);\n\n    var gl = $p.ctx;\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/allocate.js\n// module id = null\n// module chunks = ","import * as ajax from './ajax';\nimport cstore from '../cstore';\nimport parse from './parse';\n\nconst INPUT_TYPES = [\n    'json',\n    'csv',\n    'text',\n    'RowArrays',\n    'ColArrays',\n    'cstore',\n];\n\nconst INPUT_METHODS = ['memory', 'http', 'websocket', 'file'];\n\nexport default function input({\n    type = 'cstore',\n    method = 'memory',\n    delimiter = ',',\n    size,\n    schema,\n    source,\n    onready,\n    uniqueKeys = []\n}) {\n    if(INPUT_TYPES.indexOf(type) === -1) {\n        throw Error('Invalid input type ', type)\n    }\n\n    if(INPUT_METHODS.indexOf(method) === -1) {\n        throw Error('Unknown method ', method)\n    }\n\n    let cache;\n\n    function createIndexes() {\n        uniqueKeys.forEach(function(uk){\n            cache.index(uk);\n        })\n    }\n\n    let dataHandlers = {\n        json: function(data) {\n            cache = cstore({schema, size})\n            cache.import((method == 'websocket') ? JSON.parse(data) : data);\n            createIndexes();\n            return cache.data();\n        },\n        csv: function(text) {\n            let data = parse(text, delimiter);\n            let fields = data.shift();\n            cache = cstore({keys: fields, types: fields.map(() => 'float')})\n            cache.addRows(data);\n            createIndexes();\n            return cache.data();\n        },\n        cstore: function() {\n            if(Number.isInteger(source.size) && Array.isArray(source.types)) {\n                return source;\n            }\n        }\n    }\n\n    dataHandlers.text = dataHandlers.csv;\n\n    let response = function(data) {\n        return new Promise(function(resolve, reject) {\n            if(typeof(dataHandlers[type]) === 'function') {\n                resolve(dataHandlers[type](data));\n            } else {\n                reject(Error('No handler for data type ', type));\n            }\n        })\n    }\n\n    if(method === 'http') {\n        return ajax.get({url: source, dataType: type}).then(response);\n    } else if (method == 'websocket') {\n        return new Promise(function(resolve, reject) {\n            var socket = new WebSocket(source);\n            socket.onopen = function() {\n                if(typeof(onready) === 'function') onready(socket)\n            }\n            socket.onmessage = function(event) {\n                resolve(dataHandlers[type](event.data));\n            }\n            socket.onerror = function(err) {\n                reject(err);\n            }\n        });\n    } else {\n        return response(source);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/io/input.js\n// module id = null\n// module chunks = ","export default function($p) {\n\n    let output = {};\n    \n    output.result = function({format = 'row', outputTag = 'fGroupResults'}) {\n        let objectArray = new Array();\n        let match = null;\n        if($p.uniform.uFilterFlag.data == 1){\n            match = $p.getMatchBuffer()\n        }\n        // $p.setInput(outputTag)\n        // console.log($p.extraDimension)\n        for(let edi = 0; edi < $p.extraDimension; edi++) { \n            let buf = $p.getResultBuffer({outputTag, offset: [edi * $p.resultDimension[0], 0]});\n            let res = {};\n            let offset = 0;\n            let rs = 0;\n            if(typeof buf.subarray !== 'function') return buf;\n            if($p.indexes.length > 0) {\n                if ($p.resultDimension[0] > 1) {\n                    res[$p.fields[rs]] = $p.attribute.aDataValx.data;\n                    rs++;\n                }\n                if ($p.resultDimension[1] > 1) {\n                    var bx = $p.attribute.aDataValx.data;\n                    var by = $p.attribute.aDataValy.data;\n                    var ax = new Array($p.resultDimension[0] * $p.resultDimension[1]);\n                    var ay = new Array($p.resultDimension[0] * $p.resultDimension[1]);\n\n                    for (var y = 0; y < $p.resultDimension[1]; y++) {\n                        for (var x = 0; x < $p.resultDimension[0]; x++) {\n                            ax[y * $p.resultDimension[0] + x] = bx[x];\n                            ay[y * $p.resultDimension[0] + x] = by[y]\n                        }\n                    }\n                    res[$p.fields[0]] = ax;\n                    res[$p.fields[rs]] = ay;\n                    rs++;\n                }\n            }\n \n            var arraySize = $p.resultDimension[0] * $p.resultDimension[1];\n            let fields = $p.fields.filter( f => f !== $p.indexes[2]);\n            for (var i = rs; i < fields.length; i++) {\n                res[fields[i]] = buf.subarray(offset, offset + arraySize);\n                offset += arraySize;\n            };\n\n            for (var i = 0; i < arraySize; i++) {\n                if(match !== null && match[i] == 0) continue\n    \n                var obj = (format == 'array') ? new Array(fields.length) : {};\n                if($p.extraDimension > 0 && $p.indexes.length === 3) {\n                    let fieldName = $p.indexes[2];\n                    obj[fieldName] = ($p.strLists.hasOwnProperty(fieldName)) ?  $p.strLists[fieldName][edi] : edi + 1;\n                } \n                fields.forEach(function(f, fi) {\n                    let kid = $p.dkeys.indexOf(f);\n                    let dtype = $p.dtypes[kid];\n                    let key = (format == 'array') ? fi : f;\n\n                    if (dtype == 'string' && $p.strLists.hasOwnProperty(f)) {\n                        obj[key] = $p.strLists[f][res[f][i]];\n                    } else if ($p.intervals.hasOwnProperty(f) && $p.intervals[f].dtype == 'histogram') {\n                        obj[key] = $p.intervals[f].min + res[f][i] * $p.intervals[f].interval;\n                    } else if ($p.uniqueValues.hasOwnProperty(f)) {\n                        obj[key] = $p.uniqueValues[f][res[f][i]];\n                    } else {\n                        obj[key] = res[f][i];\n                    }\n                });\n                objectArray.push(obj);\n            }\n        }\n        return objectArray;\n\n    }\n\n    output.readPixels = function({\n        offset = [0, 0],\n        resultSize =  $p.dataDimension[0]* $p.dataDimension[1],\n        rowSize = Math.min(resultSize, $p.dataDimension[0]),\n        colSize = Math.ceil(resultSize / $p.dataDimension[0])\n    }) {\n        let result = new Uint8Array(rowSize * colSize * 4);\n        $p.bindFramebuffer(null);\n        $p.ctx.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, result);\n        return result.filter(function(d, i){ return i%4===3;} );\n    }\n    \n    return output;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/io/output.js\n// module id = null\n// module chunks = ","import FlexGL from '../flexgl';\n\nexport default function init({\n    context = null,\n    container = document.body,\n    viewport =  [800, 450],\n    padding = {left:0, right: 0,top: 0, bottom: 0},\n    attributes = {},\n    views\n}){\n    let $p = context;\n    let defaultLayout = [\n        {\n            width: viewport[0],\n            height: viewport[1],\n            // padding: {left: 30, right: 30, top: 30, bottom: 30},\n            offset: [0, 0]\n        }\n    ];\n    if ($p === null) {\n        $p = new FlexGL({\n            container: container,\n            width: viewport[0],\n            height: viewport[1],\n            padding: {left:0, right: 0,top: 0, bottom: 0},\n            attributes: attributes\n        });\n    }\n    $p.container = container;\n    $p.padding = padding;\n    $p.viewport = viewport;\n    $p.views = views || defaultLayout;\n    return $p;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/initialize.js\n// module id = null\n// module chunks = ","export default function brush(arg){\n\n    var option = arg || {},\n        container = option.container || this.svg[0],\n        width = option.width || this.width,\n        height = option.height || this.height,\n        x = function(s) {return s},\n        y = function(s) {return s},\n        base = option.base || null,\n        selectX = option.x || false,\n        selectY = option.y || false,\n        border = option.border || \"#FFF\",\n        color = option.color || \"#111\",\n        brush = option.brush || function() {},\n        brushstart = option.brushstart || function() {},\n        brushend = option.brushend || function() {};\n\n    if(typeof(selectX) === \"function\") {\n        x = selectX;\n        selectX = true;\n    }\n    if(typeof(selectY) === \"function\") {\n        y = selectY;\n        selectY = true;\n    }\n    if(base === null){\n        base = container.append(\"g\").attr(\"class\", \"selector\");\n    } else {\n        base = container;\n    };\n\n    base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill-opacity\", 0)\n        .attr(\"stroke\", \"none\")\n        .css(\"cursor\", \"crosshair\");\n\n    var selector = base.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", 0)\n        .attr(\"height\", 0)\n        .attr(\"fill-opacity\", 0.1)\n        .css(\"fill\", color)\n        .css(\"stroke\", border)\n        .css(\"cursor\", \"move\");\n\n    var sx, sy,\n        dx, dy,\n        bx, by,\n        selection = {},\n        intStart = false,\n        drag = false;\n\n    base.svg.addEventListener(\"mousedown\", function(evt){\n        evt.preventDefault();\n        brushstart.call(this);\n        intStart = true;\n        sx = evt.clientX;\n        sy = evt.clientY;\n\n        var sp = selector.svg.getBoundingClientRect();\n        var box = base.svg.getBoundingClientRect();\n        var x0, y0, nw, nh;\n\n        if(sx>sp.left && sy>sp.top && sx<sp.left+sp.width && sy<sp.top+sp.height) {\n            drag = true;\n            bx = sp.left;\n            by = sp.top;\n        }\n\n        if(!drag){\n            x0 = selectX ? sx - box.left : 0;\n            y0 = selectY ? sy - box.top : 0;\n            selector.attr(\"x\", x0)\n                .attr(\"y\", y0)\n                .attr(\"width\", 0);\n        }\n\n        ondrag = function(evt){\n            if(intStart){\n                dx = evt.clientX - sx;\n                dy = evt.clientY - sy;\n                var selectorBox = selector.svg.getBoundingClientRect();\n                if(drag){\n\n                    var nx = bx + dx-box.left,\n                        ny = by + dy-box.top;\n\n                    if(bx+dx < box.left) nx = 0;\n                    if(bx+dx+selectorBox.width > box.right) nx = width - selectorBox.width ;\n                    if(by+dy < box.top) ny = 0;\n                    if(by+dy+selectorBox.height > box.bottom) ny = height - selectorBox.height;\n                    selector.attr(\"x\", nx).attr(\"y\", ny);\n                } else {\n                    if(evt.clientX < box.left) dx = box.left - sx;\n                    if(evt.clientX > box.right) dx = box.right - sx;\n                    if(evt.clientY > box.bottom) dy = box.bottom - sy;\n                    if(evt.clientY < box.top) dy = box.top - sy;\n\n                    x0 = selectX ? sx + dx - box.left: 0;\n                    y0 = selectY ? sy + dy - box.top : 0;\n                    nw = selectX ? Math.abs(dx) : width;\n                    nh = selectY ? Math.abs(dy) : height;\n\n                    if(dx<0 && dy>=0) selector.attr(\"x\", x0);\n                    if(dy<0 && dx>=0) selector.attr(\"y\", y0);\n                    if(dx<0 && dy<0) selector.attr(\"x\", x0).attr(\"y\", y0);\n                    selector.attr(\"width\", nw).attr(\"height\", nh);\n                }\n                if(selectX) {\n                    selection.x = [ x(selectorBox.left - box.left ), x(selectorBox.right - box.left )];\n                }\n                if(selectY) {\n                    selection.y = [y(selectorBox.top - box.top), y(selectorBox.bottom - box.top)];\n                }\n                brush.call(this, selection);\n            }\n        };\n\n        window.addEventListener(\"mousemove\", ondrag, false);\n        window.addEventListener(\"mouseup\", function(evt){\n            if(intStart){\n                ondrag(evt);\n                intStart = false;\n                if(drag){\n                    drag = false;\n                }\n            }\n            brushend.call(this, selection);\n            window.removeEventListener(\"mousemove\", ondrag, false);\n        }, false);\n    });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/brush.js\n// module id = null\n// module chunks = ","\nimport Brush from './vis/brush';\nexport default function interact($p, options) {\n    var viewTags = options.view || [$p.views[0].id];\n\n    if(!Array.isArray(viewTags)) viewTags = [viewTags];\n\n    var actions = options.actions || options.events || [],\n        condition = options.condition || {},\n        facet = options.facet || false,\n        callback = options.callback || function() {};\n\n    if($p._update) return;\n\n    if(!condition.x && !condition.y) {\n        condition.x = condition.y = true;\n    }\n\n    viewTags.forEach(function(viewTag){\n        var vis = $p.views.filter(v=>v.id == viewTag)[0];\n        if(!Array.isArray(actions)) {\n            actions = [actions];\n        }\n\n        if(vis === undefined || !vis.hasOwnProperty('chart')) return;\n\n        var vmap = vis.vmap,\n            p = vis.padding || $p.padding,\n            w = vis.width - p.left - p.right,\n            h = vis.height - p.top - p.bottom;\n        \n        var interactor = vis.chart.svg.append(\"g\")\n            .attr(\"class\", \"selector\")\n\n        if(facet === 'rows') {\n            h = $p.viewport[1] - p.bottom;\n        } else if(facet === 'columns') {\n            w = $p.viewport[0] - p.right;\n        }\n\n        var rect = interactor.append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 0)\n          .attr(\"width\", w)\n          .attr(\"height\", h/2)\n          .attr(\"fill-opacity\", 0)\n          .attr(\"stroke\", \"none\");\n\n        var svg = interactor.svg,\n            box = rect.svg.getBoundingClientRect();\n\n        function getSelection(e) {\n            var dx = e.clientX - box.left;\n            var dy = e.clientY - box.top;\n            var selection = {};\n            if(vmap.x) {\n                selection[vmap.x] = [vis.chart.x.invert(dx)];\n            }\n            if(vmap.y) {\n                selection[vmap.y] = [vis.chart.y.invert(h - dy)];\n            }\n            return selection;\n        }\n\n        actions.forEach(function(action){\n            if(action == 'brush') {\n                svg.style.cursor = \"crosshair\";\n                var brushOptions = {\n                    container: interactor,\n                    width: w,\n                    height: h\n                };\n\n                if(!Array.isArray(vmap.x) && !Array.isArray(vmap.y)) {\n                    let updateEvent = (condition.lazy) ? 'brushend' : 'brush';\n                    brushOptions[updateEvent] = function(d) {\n                        var selection = {};\n                        if(vmap.x && d.x) selection[vmap.x] = d.x;\n                        if(vmap.y && d.y) {\n                            if (d.y[0] > d.y[1]) {\n                                selection[vmap.y] = d.y.reverse();\n                            } else {\n                                selection[vmap.y] = d.y;\n                            }\n                        }\n\n                        Object.keys(selection).forEach(k => {\n                            if ($p.uniqueValues.hasOwnProperty(k)) {\n                                let values = $p.uniqueValues[k]\n                                let start = Math.floor(selection[k][0]);\n                                let end = Math.floor(selection[k][1]);\n                                if(end === start) start -= 1;\n                                selection[k] = [values[start], values[end]];\n                            } \n                        })\n\n                        callback(selection);\n                    }\n                    if(condition.x && typeof(vis.chart.x.invert) == 'function')\n                        brushOptions.x = vis.chart.x.invert;\n\n                    if(condition.y && typeof(vis.chart.y.invert) == 'function') {\n                        brushOptions.y = (y) => { \n                            if(vmap.mark === 'rect') {\n                                return vis.chart.y.invert(h-y);\n                            }\n                            return vis.chart.y.invert(y);\n                        } \n                    }\n                    \n                    new Brush(brushOptions);\n                }\n\n                var dims = ['x', 'y'],\n                    selections = {};\n\n                dims.forEach(function(dim){\n                    if(Array.isArray(vmap[dim]) && Array.isArray(vis.chart[dim])){\n                        var axisDist = (dim == 'x') ? h : w,\n                            selectors = vis.chart.svg.append('g');\n\n                        axisDist =  axisDist / (vmap[dim].length-1);\n\n                        vmap[dim].forEach(function(d, i) {\n\n                            var axisSelect = selectors.append(\"g\");\n                            if(dim == 'x') {\n                                brushOptions.height = axisDist * 0.2;\n                                axisSelect.translate(0, axisDist * (i - 0.1));\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim];\n                                    callback(selections);\n                                }\n                            } else {\n                                brushOptions.width = axisDist * 0.2;\n                                axisSelect.translate(axisDist * (i - 0.1), 0);\n                                brushOptions.brush = function(range) {\n                                    selections[d] = range[dim].reverse();\n                                    callback(selections);\n                                }\n                            }\n                            brushOptions.container = axisSelect;\n                            brushOptions[dim] = vis.chart[dim][i].invert;\n\n                            new Brush(brushOptions);\n                        });\n                    }\n                })\n            } else if(action == 'zoom') {\n                vis.updateDomain = true;\n                let delta = {x: null, y: null};\n                let scale = 0.05;\n                svg.onmousewheel = function(e) {\n                    let dir = (e.deltaY > 0) ? 1 : -1;\n                    let selection = {};\n                    let proportion = {\n                        x: (e.clientX - box.left) / box.width,\n                        y: 1.0 - (e.clientY - box.top) / box.height\n                    }\n\n                    for (let dim of ['x', 'y']) {\n                        if(condition[dim]) {\n                            let attr = vis.vmap[dim];\n                            if(delta[dim] === null ){\n                                delta[dim] =  scale * (vis.domains[attr][1] - vis.domains[attr][0]);\n                            }\n      \n                            let domain = vis.domains[attr];\n                            let newDomain = [domain[0] - dir * delta[dim] * (proportion[dim]), domain[1] + dir * delta[dim] * (1-proportion[dim])];\n                            if(newDomain[1] - newDomain[0] > 1e-9){\n                                selection[attr] = newDomain;\n                                vis.domains[attr] = newDomain;\n                            } else {\n                                scale *= 0.5;\n                            }\n\n                        }\n                    }\n                    callback(selection);\n                }\n\n            } else if(action == 'pan') {\n                svg.style.cursor = 'move';\n                vis.updateDomain = true;\n                let selection = {};\n                svg.onmousedown = function(e) {\n                    let sx = e.clientX;\n                    let sy = e.clientY;\n                    svg.style.cursor = 'move';\n\n                    function onpan(e) {\n                        let delta = {\n                            x: -(e.clientX - sx) / box.width,\n                            y: (e.clientY - sy) / box.height\n                        }\n                        for (let dim of ['x', 'y']) {\n                            if(condition[dim]) {\n                                let attr = vis.vmap[dim];\n                                let domain = vis.domains[attr];\n                                let diff = delta[dim] * (domain[1] - domain[0]);\n                                let newDomain = [domain[0] + diff, domain[1] + diff];\n                                selection[attr] = newDomain;\n                                vis.domains[attr] = newDomain;\n                            }\n                        }\n                        sx = e.clientX;\n                        sy = e.clientY;\n                        callback(selection);\n                    }\n\n                    window.addEventListener(\"mousemove\", onpan, false);\n                    window.addEventListener(\"mouseup\", function(){\n                        svg.style.cursor = 'default';\n                        window.removeEventListener(\"mousemove\", onpan, false);\n                    }, false);\n\n                }\n\n            } else if(action == 'click') {\n                svg.onclick = function(e) {\n                    callback(getSelection(e));\n                }\n            } \n            \n            if(action == 'hover') {\n                svg.onmouseover = function(e) {\n                    callback(getSelection(e));\n                    svg.onmousemove = function(e) {\n                        callback(getSelection(e));\n                    }\n\n                    // svg.onmouseout = function(e) {\n                    //     updatePos(e);\n                    //     svg.style.cursor = 'default';\n                    //     svg.onmousemove = null;\n                    //     svg.onmouseover = null;\n                    // }\n                }\n            }\n        })\n    })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/interact.js\n// module id = null\n// module chunks = ","export default function ($p) {\n\n    let registers = {};\n    let control = {};\n\n    let serializeArray = function(arrayOfArray) {\n        return [].concat.apply([], arrayOfArray);\n    }\n\n    control.register = function(tag) {\n        registers[tag] = {\n            indexes: $p.indexes.slice(),\n            dataSize: $p.dataSize,\n            fields: $p.fields.slice(),\n            fieldCount: $p.fieldCount,\n            dataDim: $p.uniform.uDataDim.data.slice(),\n            fieldWidths: $p.fieldWidths.slice(),\n            fieldDomains: $p.fieldDomains.slice(),\n            deriveCount: $p.deriveCount,\n            filterFlag: $p.uniform.uFilterFlag.data,\n            filterControls: $p.uniform.uFilterControls.data.slice(),\n            dataInput: $p.uniform.uDataInput.data,\n            resultDim: $p.resultDimension.slice(),\n            attribute: {\n                aDataIdx: {\n                    ids: $p.attribute.aDataIdx.data,\n                    value: $p.attribute.aDataValx.data\n                },\n                aDataIdy: {\n                    ids: $p.attribute.aDataIdy.data,\n                    value: $p.attribute.aDataValy.data\n                },\n                aDataFieldId: $p.attribute.aDataFieldId.data,\n                aDataItemId: $p.attribute.aDataItemId.data\n            },\n            extraDim: $p.extraDimension\n        }\n        return control;\n    }\n\n    control.updateRegister = function(tag, props) {\n        if(registers.hasOwnProperty(tag)) {\n            Object.keys(props).forEach(k => {\n                registers[tag][k] = props[k];\n            })\n        }\n        return control;\n    }\n    \n    control.resume = function(tag) {\n        if (!registers.hasOwnProperty(tag))\n            throw new Error('\"' + tag + '\" is not found in regesters.');\n    \n        var reg = registers[tag];\n        //resume CPU registers\n        $p.indexes = reg.indexes;\n        $p.dataSize = reg.dataSize;\n        $p.deriveCount = reg.deriveCount;\n        $p.fieldCount = reg.fieldCount;\n        $p.fields = reg.fields.slice();\n        $p.fieldWidths = reg.fieldWidths.slice();\n        $p.fieldDomains = reg.fieldDomains.slice();\n        $p.dataDimension = reg.dataDim.slice();\n        $p.resultDimension = reg.resultDim.slice();\n        $p.extraDimension = reg.extraDim;\n        //resume GPU Uniforms\n        $p.uniform.uFieldCount.data = $p.fieldCount;\n        $p.uniform.uDataSize.data = $p.dataSize;\n        $p.uniform.uDataDim.data = reg.dataDim;\n        $p.uniform.uIndexCount.data = reg.indexes.length;\n        $p.uniform.uFieldDomains.data = serializeArray(reg.fieldDomains);\n        $p.uniform.uFieldWidths.data = reg.fieldWidths;\n        $p.uniform.uFilterFlag.data = reg.filterFlag;\n        // $p.uniform.uFilterControls.data = reg.filterControls;\n        $p.uniform.uDataInput.data = reg.dataInput;\n    \n        //resume GPU Attribute Buffers\n        $p.attribute['aDataIdx'] = reg.attribute['aDataIdx'].ids;\n        $p.attribute['aDataIdy'] = reg.attribute['aDataIdy'].ids;\n        $p.attribute['aDataValx'] = reg.attribute['aDataIdx'].value;\n        $p.attribute['aDataValy'] = reg.attribute['aDataIdy'].value;\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataIdy'].location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValx'].location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataValy'].location, 1);\n    \n        $p.attribute['aDataFieldId'] = reg.attribute['aDataFieldId'];\n        $p.attribute['aDataItemId'] = reg.attribute['aDataItemId'];\n    \n        return control;\n    }\n\n    // control.head = function() {\n    //     control.resume('__init__');\n    //     return control;\n    // }\n\n    var branchID = 0;\n    control.branch = function(branches) {\n        branches.forEach(function(b){\n            var operations = Object.keys(b).map(function(o) {\n                var obj = {};\n                obj[o] = b[o];\n                return obj;\n            });\n            control.run(operations);\n            control.resume('_branch' + branchID);\n        })\n        branchID++;\n\n        return control;\n    }\n\n    return control;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/control.js\n// module id = null\n// module chunks = ","export default function pipeline($p) {    \n    let pipeline = {};\n    let async = false;\n    let optID = 0;\n    let queue = [];\n    \n    pipeline.addModule = function(mod) {\n        let newModule = mod($p)\n\n        Object.keys(newModule).forEach(name => {\n            if (typeof(newModule[name]) === 'function') {\n                pipeline[name] = function() {\n                    newModule[name].apply(null, arguments);\n                    return pipeline;\n                }\n            }\n        })\n        return pipeline;\n    }\n\n    pipeline.addToQueue = function (opt, arg) {\n        if(!$p._update && !$p._progress) {\n            let spec = {};\n            spec[opt] = arg;\n            queue.push(spec);\n            return optID++;\n        } else {\n            return -1;\n        }\n    }\n\n    pipeline.addOperation = function(name, operation, overwrite = false) {\n        if(!pipeline.hasOwnProperty(name) || overwrite) {\n            pipeline[name] = function(arg) {\n                if(!async) {\n                    pipeline.addToQueue(name, arg);\n                }\n                let getResult = operation(arg);\n                if(typeof(getResult) === 'function') {\n                    $p.getResult = getResult;\n                }\n                return pipeline;\n            }\n        }   \n    }\n\n    pipeline.clearQueue = function() {\n        queue = [];\n        return pipeline;\n    }\n\n    pipeline.run = function(jobs = queue) {\n        for (let q of jobs) {\n            let opt = Object.keys(q)[0];\n            if(typeof pipeline[opt] === 'function') {\n                pipeline[opt](q[opt]);\n            }\n        }\n        return pipeline;\n    }\n\n    pipeline.queue = function() {\n        return queue;\n    }\n\n    pipeline.async = function(isAsync) {\n        async = isAsync;\n    }\n\n    return pipeline;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/pipeline.js\n// module id = null\n// module chunks = ","export const Aggregate = {\n  vertexShader() {\n    gl_PointSize = 1.0;\n\n    var i, j;\n    var groupKeyValue;\n\n    i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n    j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n\n    if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n        this.vResult = 0.0;\n    } else {\n        if(this.uAggrOpt != 2.0) {\n            this.vResult = this.getData(this.uFieldId, i, j);\n        } else {\n            this.vResult = 1.0;\n        }\n    }\n\n    if (this.uFilterFlag == 1) {\n        if (texture2D(this.fFilterResults, vec2(i, j)).a < this.uVisLevel - 0.01) {\n            this.vResult = 0.0;\n        }\n    }\n\n    var pos = new Vec2();\n    for (var ii = 0; ii < 2; ii++) {\n        var gid = new Int();\n        gid = this.uGroupFields[ii];\n        if (gid != -1) {\n            if (this.uIndexCount > 0) {\n                if (gid == 0) {\n                    groupKeyValue = i;\n                } else if (gid == 1) {\n                    groupKeyValue = j;\n                }\n            }\n            if (this.uIndexCount == 0 || gid > 1) {\n                var d = new Vec2();\n                var w = this.getFieldWidth(gid);\n                var value = this.getData(gid, i, j);\n\n                d = this.getFieldDomain(gid);\n\n                if(this.uBinCount[ii] > 0) {\n                    value = max(ceil((value - d[0]) / this.uBinIntervals[ii]), 1.0);\n                    groupKeyValue = value / float(this.uBinCount[ii]);\n                } else {\n                    groupKeyValue = (value - d.x) / (d.y - d.x) * w / (w + 1.0);\n                    groupKeyValue += 0.5 / w;\n                }\n            }\n            pos[ii] = groupKeyValue * 2.0 - 1.0;\n        } else {\n            pos[ii] = 0.5;\n        }\n    }\n\n    if(this.uGroupFields[2] != -1) {\n        var keyValue = this.getData(this.uGroupFields[2], i, j);\n        if(keyValue != this.uExtraKeyValue) {\n            this.vResult = 0.0;\n        }\n    }\n\n    gl_Position = vec4(pos, 0.0, 1.0);\n  },\n\n  fragmentShader() {\n    if (this.vResult == 0.0) discard;\n    if (this.uAggrOpt == 2.0)\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    else\n        gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n  }\n}\n\nexport const GetStats = {\n  vertexShader() {\n    gl_Position = vec4(this._square, 0, 1);\n  },\n\n  fragmentShader() {\n    var x, y, res;\n    $vec4(value);\n\n    if (this.uAggrOpt > 3.0) {\n        x = (gl_FragCoord.x) / this.uResultDim.x;\n        y = (gl_FragCoord.y) / (this.uResultDim.y * float(this.uFieldCount));\n        value = texture2D(this.uDataInput, vec2(x, y));\n        res = value.a / value.b;\n    } else {\n        res = value.a;\n    }\n    gl_FragColor = vec4(0.0, 0.0, 0.0, res);\n  }\n}\n\nexport const FillValues = {\n  vertexShader() {\n    gl_Position = vec4(this._square, 0, 1);\n  },\n\n  fragmentShader() {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, this.uFillValue);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/gpgpu/Aggregation.gl.js\n// module id = null\n// module chunks = ","import {seqFloat} from '../utils';\nimport {Aggregate, GetStats, FillValues} from './gpgpu/Aggregation.gl';\n\nconst VEC_IDS = ['x', 'y', 'z'];\nconst METRICS = ['$min', '$max', '$count', '$sum', '$avg', '$var', '$std'];\n\nexport default function aggregate($p) {\n    let aggregate = {};\n\n    $p.uniform('uFillValue', 'float', 0.0);\n    $p.uniform('uBinIntervals', 'vec2', [0.0, 0.0]);\n    $p.uniform('uBinCount', 'ivec2', [0, 0]);\n    $p.uniform('uAggrOpt', 'float', 2.0);\n    $p.uniform(\"uGroupFields\", \"int\",   [0, -1, -1]);\n    $p.uniform(\"uExtraKeyValue\", \"float\",  0.0);\n    $p.extraDimension = 1;\n\n    $p.program(\n        'AggregateCompute',\n        $p.shader.vertex(Aggregate.vertexShader),\n        $p.shader.fragment(Aggregate.fragmentShader)\n    );\n\n    $p.program(\n        'GetAggrStats',\n        $p.shader.vertex(GetStats.vertexShader),\n        $p.shader.fragment(GetStats.fragmentShader)\n    );\n    $p.program(\n        'FillValues',\n        $p.shader.vertex(FillValues.vertexShader),\n        $p.shader.fragment(FillValues.fragmentShader)\n    );\n\n    var resultFieldCount,\n        getAvgValues = false,\n        getVarStd = false,\n        resultDomains;\n\n    function compute(opts, groupFieldIds, resultFieldIds, outputTag) {\n        resultFieldCount = resultFieldIds.length;\n        let gl = $p.program('FillValues');\n        $p.bindFramebuffer(outputTag);\n\n        if(!$p._progress) {\n            gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        gl.disable(gl.BLEND);\n        resultFieldIds.forEach(function(f, i) {\n            gl.viewport(0, i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n            var opt = METRICS.indexOf(opts[i]);\n            if (opt == 0) {\n                $p.uniform.uFillValue = Math.pow(2, 127);\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n            } else if(opt == 1) {\n                $p.uniform.uFillValue = -Math.pow(2, 128);\n                gl.drawArrays(gl.TRIANGLES, 0, 6);\n            }\n        });\n\n        gl = $p.program('AggregateCompute');\n      \n        $p.framebuffer.enableRead('fDerivedValues');\n        $p.framebuffer.enableRead('fFilterResults');\n\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        $p.uniform.uGroupFields = groupFieldIds;\n\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n        gl.blendEquation(gl.FUNC_ADD);\n        $p.uniform.uResultDim = $p.resultDimension;\n\n        let postComputeFieldIds = [];\n        \n        getAvgValues = false;\n        getVarStd = false;\n\n        for (var ii = 0; ii < $p.extraDimension; ii++) {\n            postComputeFieldIds = [];\n            resultFieldIds.forEach(function(f, i) {\n                var opt = METRICS.indexOf(opts[i]);\n                if (opt == -1) throw Error('unknowm operator for aggregation: ' + opts[i]);\n\n                if (opt > 3) {\n                    getAvgValues = true;\n                    $p.bindFramebuffer('fAggrStats');\n                    postComputeFieldIds.push(i);\n                } else {\n                    $p.bindFramebuffer(outputTag);\n                }\n\n                gl.viewport(ii * $p.resultDimension[0], i * $p.resultDimension[1], $p.resultDimension[0], $p.resultDimension[1]);\n                if (opt == 0) {\n                    gl.blendEquation(gl.MIN_EXT);\n                } else if (opt == 1) {\n                    gl.blendEquation(gl.MAX_EXT);\n                } else {\n                    gl.blendEquation(gl.FUNC_ADD);\n                }\n\n                $p.uniform.uFieldId = f;\n                $p.uniform.uAggrOpt = opt;\n                if(groupFieldIds[2] !== -1) {\n                    $p.uniform.uExtraKeyValue = seqFloat($p.fieldDomains[groupFieldIds[2]][0], $p.fieldDomains[groupFieldIds[2]][1])[ii];\n                }\n                \n                gl.ext.drawArraysInstancedANGLE(\n                    gl.POINTS, 0,\n                    $p.dataDimension[0],\n                    $p.dataDimension[1]\n                );\n            });\n        }\n        $p.uniform.uFieldCount.data = resultFieldIds.length;\n        if(getAvgValues) {\n            postCompute(opts, postComputeFieldIds, resultFieldIds, outputTag);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    function postCompute(opts, postComputeFieldIds, resultFieldIds, outputTag) {\n        $p.uniform.uDataInput.data = $p.framebuffer.fAggrStats.texture;\n        var gl = $p.program('GetAggrStats');\n        $p.bindFramebuffer(outputTag);\n        $p.uniform.uResultDim = [$p.resultDimension[0] * $p.extraDimension, $p.resultDimension[1]];\n        $p.framebuffer.enableRead('fAggrStats');\n        // gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n        \n        gl.viewport(0, 0, $p.resultDimension[0] * $p.extraDimension, $p.resultDimension[1] * resultFieldIds.length);\n        gl.disable(gl.BLEND);\n\n        postComputeFieldIds.forEach(function(f) {\n            $p.uniform.uAggrOpt = METRICS.indexOf(opts[f]);\n            $p.uniform.uFieldId = f;\n            gl.viewport(\n                0, \n                f * $p.resultDimension[1], \n                $p.resultDimension[0] * $p.extraDimension,\n                $p.resultDimension[1]\n            );\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        })\n    }\n\n    aggregate.execute = function(spec) {\n        let newFieldSpec = spec.$collect || spec.$reduce || null;\n        let groupFields = spec.$group || spec.group;\n        let groupFieldIds = [-1, -1, -1];\n        let outputTag = spec.out || 'fGroupResults';\n        if (!Array.isArray(groupFields)) groupFields = [groupFields];\n        if (groupFields.length >= 2) {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            groupFieldIds[1] = $p.fields.indexOf(groupFields[1]);\n            $p.resultDimension = [\n                $p.fieldWidths[groupFieldIds[0]],\n                $p.fieldWidths[groupFieldIds[1]]\n            ];\n            if(groupFields.length === 3) {\n                groupFieldIds[2] = $p.fields.indexOf(groupFields[2]);\n                $p.extraDimension = $p.fieldWidths[groupFieldIds[2]];\n            } else {\n                $p.extraDimension = 1\n            }\n        } else {\n            groupFieldIds[0] = $p.fields.indexOf(groupFields[0]);\n            $p.resultDimension = [$p.fieldWidths[groupFieldIds[0]], 1];\n        }\n\n        // For backward compatibility, allowing new fields specified without using the $collect or $reduce\n        if (newFieldSpec === null) {\n            newFieldSpec = {};\n            Object.keys(spec)\n            .filter(d => d != '$by' && d != '$group')\n            .forEach(function(d) {\n                newFieldSpec[d] = spec[d];\n            });\n        }\n\n        let newFieldNames = Object.keys(newFieldSpec);\n        let resultFields = newFieldNames.map(f => newFieldSpec[f][Object.keys(newFieldSpec[f])[0]]);\n        let resultFieldIds = resultFields.map( f => (f == '*') ? 0 : $p.fields.indexOf(f));\n        let operators = resultFields.map( (f,i) => { \n            return (typeof(newFieldSpec[newFieldNames[i]]) === 'object')\n                ? Object.keys(newFieldSpec[newFieldNames[i]])[0]\n                : newFieldSpec[newFieldNames[i]]\n        });\n        let twoPassFields = operators.filter(opt => METRICS.indexOf(opt) > 2 );\n\n        if (!$p._update && !$p._progress) {\n            $p.framebuffer(\n                outputTag,\n                'float', [$p.resultDimension[0] * $p.extraDimension, $p.resultDimension[1] * resultFieldIds.length]\n            );\n\n            if(twoPassFields.length > 0) {\n                $p.framebuffer(\n                    'fAggrStats',\n                    'float', [$p.resultDimension[0] * $p.extraDimension, $p.resultDimension[1] * resultFieldIds.length]\n                );\n            }\n        }\n        $p.bindFramebuffer(outputTag);\n\n        compute(operators, groupFieldIds, resultFieldIds, outputTag);\n\n        $p.getResult = aggregate.result;\n        $p.indexes = groupFields;\n        $p.dataDimension = $p.resultDimension;\n        $p.uniform.uDataInput.data = $p.framebuffer[outputTag].texture;\n\n        var oldFieldIds = groupFields.concat(resultFields).map( f => $p.fields.indexOf(f));\n\n        $p.fields = groupFields.concat(newFieldNames);\n        $p.uniform.uDataDim.data = $p.resultDimension;\n        $p.uniform.uIndexCount.data = $p.indexes.length;\n        $p.fieldCount = $p.fields.length - $p.indexes.length;\n        $p.uniform.uFieldCount.data = $p.fieldCount;\n\n        // $p.fieldWidths = $p.fieldWidths.concat($p.deriveWidths);\n        // $p.fieldDomains = $p.fieldDomains.concat($p.deriveDomains);\n       \n        let newFieldDomains = oldFieldIds.map(f => $p.fieldDomains[f]);\n        let newFieldWidths = oldFieldIds.map(f => $p.fieldWidths[f]);\n        \n        oldFieldIds.slice(0, groupFields.length).forEach((fid, fii) => {\n            if($p.uniform.uBinCount.data[fii] > 0) {\n                newFieldDomains[fii] = [0, $p.uniform.uBinCount.data[fii]-1];\n            }\n        })\n        $p.uniform.uBinCount.data = [0,0];\n\n        $p.fieldDomains = newFieldDomains;\n        $p.fieldWidths = newFieldWidths;\n       \n        $p.attribute.aDataItemId = seqFloat(0, $p.resultDimension[0] * $p.resultDimension[1] - 1);\n        $p.dataSize = $p.resultDimension[0] * $p.resultDimension[1];\n        $p.uniform.uDataSize.data = $p.dataSize;\n        $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        $p.uniform.uFilterFlag.data = 0;\n\n        $p.indexes.forEach(function(d, i) {\n            $p.attribute['aDataId' + VEC_IDS[i]] = seqFloat(0, $p.resultDimension[i]-1);\n            var interval = 1;\n            var ifid = $p.fields.indexOf(d);\n            // if ($p.intervals.hasOwnProperty(d)) interval = $p.intervals[d].interval;\n            $p.attribute['aDataVal' + VEC_IDS[i]] = seqFloat(\n                $p.fieldDomains[ifid][0],\n                $p.fieldDomains[ifid][1],\n                interval\n            );\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataId' + VEC_IDS[i]].location, i);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute['aDataVal' + VEC_IDS[i]].location, i);\n        });\n        if ($p.indexes.length == 1) {\n            $p.attribute.aDataIdy = new Float32Array(1);\n            $p.attribute.aDataValy = new Float32Array(1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        }\n        if (!$p._update) {\n            let resultFieldIds = resultFields.map( f => (f == '*') ? 0 : $p.fields.indexOf(f));\n            resultDomains = $p.extent(resultFieldIds, $p.dataDimension);\n        }\n        for (var ii = $p.indexes.length; ii < $p.indexes.length + resultFields.length; ii++) {\n            $p.fieldDomains[ii] = resultDomains[ii - $p.indexes.length];\n            $p.fieldWidths[ii] = resultDomains[ii - $p.indexes.length][1] - resultDomains[ii - $p.indexes.length][0];\n        }\n        $p.getResultBuffer = aggregate.result;\n        // console.log(aggregate.result({outputTag}))\n    }\n\n    aggregate.result = function(arg) {\n        let options = arg || {};\n        let outputTag =  arg.outputTag || 'fGroupResults';\n        let offset = options.offset || [0, 0];\n        let resultSize = options.size || $p.resultDimension[0] * $p.resultDimension[1];\n        let rowTotal = Math.min(resultSize, $p.resultDimension[0]);\n        let colTotal = Math.ceil(resultSize / $p.resultDimension[0]);\n        let result = new Float32Array(rowTotal * colTotal * 4 * resultFieldCount);\n        $p.bindFramebuffer(outputTag);\n        let gl = $p.program('AggregateCompute');\n        gl.readPixels(offset[0], offset[1], rowTotal, colTotal * resultFieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return result.filter((d, i) => i % 4 === 3);\n    }\n\n    return aggregate;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/aggregate.js\n// module id = null\n// module chunks = ","export default function cache($p) {\n    var cache = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        fieldCount =  $p.uniform.uFieldCount.data,\n        cacheTag;\n\n    var vs = $p.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs = $p.shader.fragment(function () {\n        var x, y;\n\n        x = (gl_FragCoord.x) / this.uDataDim.x;\n        y = (gl_FragCoord.y) / (this.uDataDim.y * float(this.uFieldCount));\n\n        gl_FragColor = texture2D(this.uDataInput, vec2(x, y));\n    });\n\n    $p.program(\"cache\", vs, fs);\n\n    cache.execute = function(tag) {\n        cacheTag = tag;\n        dataDimension = $p.uniform.uDataDim.data;\n        fieldCount = $p.uniform.uFieldCount.data;\n        $p.framebuffer(tag, \"float\", [dataDimension[0], dataDimension[1] * fieldCount]);\n        $p.bindFramebuffer(tag);\n        var gl = $p.program(\"cache\");\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1] * fieldCount);\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        $p.framebuffer.enableRead(tag);\n        $p.uniform.uDataInput = $p.framebuffer[tag].texture;\n    }\n\n    cache.result =  function() {\n        var gl = $p.ctx;\n        $p.bindFramebuffer(cacheTag);\n        dataDimension = $p.uniform.uDataDim.data;\n        var result = new Float32Array(dataDimension[0]*dataDimension[1]*4*fieldCount);\n        gl.readPixels(0, 0, dataDimension[0], dataDimension[1] * fieldCount, gl.RGBA, gl.FLOAT, result);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        result = result.filter(function(d, i){ return i%4===3;} );\n        return result;\n    }\n\n    return cache;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/cache.js\n// module id = null\n// module chunks = ","\n// Calculate the current day of the week as an integer\n//   now - Unix timestamp like that from time(NULL)\n//   tz_offset - Number of hours off from UTC; i.e. PST = -8\n//   Return value: Sunday=0, Monday=1, ... Saturday=6\n// int dayofweek(time_t now, int tz_offset) {\n// \t// Calculate number of seconds since midnight 1 Jan 1970 local time\n// \ttime_t localtime = now + (tz_offset * 60 * 60);\n// \t// Convert to number of days since 1 Jan 1970\n// \tint days_since_epoch = localtime / 86400;\n// \t// 1 Jan 1970 was a Thursday, so add 4 so Sunday is day 0, and mod 7\n// \tint day_of_week = (days_since_epoch + 4) % 7; \n\n// \treturn day_of_week;\n// }\n\n// function getDateTime(s) {\n//   let z = Math.floor(s / 86400) + 719468;\n//   let era = Math.floor(z >= 0 ? z : z - 146096) / 146097;\n//   let doe = Math.floor((z - era * 146097));\n//   let yoe = Math.floor((doe - doe / 1460 + doe / 36524 - doe / 146096) / 365);\n//   let year = Math.floor((yoe) + era * 400);\n//   let doy = Math.floor(doe - (365 * yoe + yoe / 4 - yoe / 100));\n//   let mp = Math.floor(( 5 * doy + 2) / 153);\n//   let day = Math.floor(doy - (153 * mp + 2) / 5 + 1);\n//   let month = Math.floor(mp + (mp < 10 ? 3 : -9));\n//   year += (month <= 2);\n//   return {year, month, day};\n// }\n\nfunction getDateTime(s) {\n  let second = s % 60\n  let minute = Math.floor(s / 60) % 60\n  let hour = Math.floor(s / 3600) % 24\n  let days = Math.floor(s / 3600 / 24) \n  let years = Math.floor(days / 365.25)\n  let year = 1970 + years;\n  let dayOfWeek = (days + 4) % 7\n\n  // let leapDays = 0\n  // for (var i = 1970; i < year; i++) {\n  //   if ((i % 4 === 0 && i % 100 !== 0) || (i % 400 == 0)) {\n  //     leapDays += 1;\n  //   }\n  // }\n  // days = days - (years * 365 + leapDays);\n  days = days - Math.ceil(years * 365.25);\n  let isLeapYear = ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0));\n  let month = 1\n  let daysInMonth\n  while (month <= 12) {\n    \n    if(month === 2) {\n      daysInMonth = 28 + isLeapYear;\n    } else {\n      daysInMonth = 30 + (month + (month < 7)) % 2\n    }\n\n    if (days > daysInMonth) {\n      days -= daysInMonth\n      month += 1\n    } else {\n      break;\n    }\n  }\n\n  return {year, month, days, hour, minute, second, dayOfWeek}\n}\n\n\nexport function getHour({ts = 'float'}) {\n  var hours = floor(ts / 3600.0);\n  return hours - (24.0 * floor(hours / 24.0)) + 1.0;\n}\n\nexport function getYear({ts = 'float'}) {\n  var days = floor(ts / 3600.0 / 24.0);\n  var years = floor(days / 365.25);\n  return 1970.0 + years;\n}\n\nexport function floatMod({a = \"float\", b = \"float\"}) {\n  return a - (b * floor(a / b));\n}\n\n// export function getMonth({ts = 'float'}) {\n//   var days = floor(ts / 3600.0 / 24.0);\n//   var years = floor(days / 365.25) + 1970.0;\n//   var months = floor(days / 30.5);\n//   return months - floor(months / 12.0);\n// }\n\nexport function getDayOfWeek({ts = 'float'}) {\n  var days = floor(ts / 3600.0 / 24.0) + 4.0;\n  return days - (7.0 * floor(days / 7.0)) + 1.0;\n} \n\nexport function getMonth({ts = 'float'}) {\n  var days = floor(ts / 3600.0 / 24.0);\n  var years = floor(days / 365.25);\n  days = days - ceil(years * 365.25);\n  var month = new int();\n  var daysInMonth;\n  var year = 1970.0 + years;\n  var isLeapYear = 0.0;\n  if( (year - (4.0 * floor(year/4.0)) == 0.0 \n    && year - (100.0 * floor(year/100.0)) != 0.0)\n    || (year - (100.0 * floor(year/400.0)) == 0.0)\n  ) {\n    isLeapYear = 1.0;\n  }\n  month = 1;\n  for (var i = 1; i<=12; i++) {\n    if(month == 2) {\n      daysInMonth = 28.0 + isLeapYear;\n    } else if( month == 4 || month == 6 || month == 9 || month == 11) {\n      daysInMonth = 30.0;\n    } else {\n      daysInMonth = 31.0;\n    }\n    if (days > daysInMonth) {\n      days -= daysInMonth;\n      month += 1;\n    }\n  }\n  return float(month);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/datetime.js\n// module id = null\n// module chunks = ","import {getHour, getDayOfWeek, getMonth, getYear} from './datetime'\n\nexport default function derive($p, spec) {\n\n    var derive = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        deriveMax = $p.uniform.uDeriveCount.data,\n        derivedFields = Object.keys(spec);\n\n    var fields = $p.fields;\n    if(derivedFields.length > $p.deriveMax) {\n        throw Error('Error: cannot derive more than ' + $p.deriveMax + ' new attributes');\n    }\n\n    $p.subroutine(\"hour\", \"float\", getHour);\n    $p.subroutine(\"month\", \"float\", getMonth);\n    $p.subroutine(\"year\", \"float\", getYear);\n    $p.subroutine(\"dayOfWeek\", \"float\", getDayOfWeek);\n\n    var marco = \"\\t\";\n\n    derivedFields.forEach(function(d, i){\n        var re = new RegExp(\"(\"+fields.join(\"|\")+\")\",\"g\");\n        // var formula = spec[d].replace(/@([\\w|\\d|_]+)/g, function(matched){\n        var formula = spec[d].replace(re, function(matched){\n            // console.log(matched);\n            var index = fields.indexOf(matched);\n            return 'this.getNonIndexedData ('  + index + ', pos.x, pos.y)';\n        });\n        marco += 'if (index == ' + i + ') return ' + formula + \"; \\n \\telse \";\n    });\n\n    marco = marco.replace(/\\$/g, 'this.') + \" return 0.0;\";\n\n    $p.uniform(\"uOptMode\", \"float\", 0)\n        .uniform(\"uDeriveId\", \"int\", 0)\n        .subroutine(\"getDerivedValue\", \"float\", new Function(\"$int_index\", \"$vec2_pos\", marco));\n\n    function vertexShader() {\n        gl_PointSize = 1.0;\n\n        var i, j;\n\n        i = (this.aDataIdx+0.5) / this.uDataDim.x;\n        j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n        this.vResult = this.getDerivedValue(this.uDeriveId, vec2(i, j));\n        if(this.uFilterFlag == 1) {\n            if(texture2D(this.fFilterResults, vec2(i, j)).a == 0.0)\n                this.vResult = 0.0;\n        }\n        var x, y;\n        if(this.uOptMode == 0.0){\n            x = 0.5;\n            y = 0.5;\n        } else {\n            x = i * 2.0 - 1.0;\n            y = j * 2.0 - 1.0;\n        }\n\n        gl_Position = vec4(x, y, 0.0, 1.0);\n    }\n\n    function fragmentShader() {\n        if(this.vResult == 0.0) discard;\n        if(this.uOptMode > 0.0 || this.vResult >= 0.0)\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        else\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n    }\n\n    var vs = $p.shader.vertex(vertexShader),\n        fs = $p.shader.fragment(fragmentShader),\n        gl = $p.createProgram(\"derive\", vs, fs);\n\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n    // gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n    function _execute() {\n\n        var gl = $p.program(\"derive\");\n        $p.framebuffer.enableRead(\"fFilterResults\");\n        $p.bindFramebuffer(\"fDerivedValues\");\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable( gl.BLEND );\n        gl.blendFunc( gl.ONE, gl.ONE );\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        \n        if($p.indexes.length > 0)\n            gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n       \n        if($p.indexes.length > 1)\n            gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        $p.uniform.uOptMode = 0.0;\n        // $p.uniform.uDeriveCount = derivedFields.length;\n        var deriveDomains = [];\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.viewport(0, 0, 1,  1);\n\n            var result = new Float32Array(8);\n\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, 0, 1,  1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            gl.readPixels(0, 0, 2, 1, gl.RGBA, gl.FLOAT, result);\n\n            var minValue = (result[4] < 0) ? result[5] : result[7],\n                maxValue = (result[2] > 0) ? result[3] : result[1];\n            deriveDomains[i] = [minValue, maxValue];\n\n            // deriveDomains[i] = [Math.min(min[0], min[3]), Math.max(max[0], max[3])];\n        });\n        gl.viewport(0, 0, dataDimension[0], dataDimension[1]*deriveMax);\n        gl.disable( gl.BLEND );\n        gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        $p.uniform.uOptMode = 1.0;\n\n        derivedFields.forEach(function(d, i){\n            $p.uniform.uDeriveId = i;\n            gl.viewport(0, dataDimension[1]*i, dataDimension[0], dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n        });\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return deriveDomains;\n    }\n\n    derive.execute = function(spec) {\n        var derivedFields = Object.keys(spec);\n        var newDerivedDomains = _execute();\n        if(!$p._update) {\n            newDerivedDomains.forEach(function(d, i) {\n                var fieldId = $p.fields.indexOf(derivedFields[i]);\n                if(fieldId === -1) {\n                    $p.fields.push(derivedFields[i]);\n                    fieldId = $p.fields.indexOf(derivedFields[i]);\n                    $p.deriveCount += 1;\n                }\n\n                $p.fieldDomains[fieldId] = d;\n                $p.fieldWidths[fieldId] = d[1] - d[0] + 1;\n                console.log(derivedFields[i], $p.fieldWidths[fieldId], d[1], d[0])\n            });\n            $p.uniform.uFieldDomains.value($p.fieldDomains);\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n    }\n\n    derive.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            fid = options.fieldId || options.deriveFieldId || 0,\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n        \n        $p.bindFramebuffer('DerivedValues');\n        var result = new Float32Array(rowSize * colSize * 4);\n        gl.readPixels(0, dataDimension[1]*fid, rowSize, colSize, gl.RGBA, gl.FLOAT, result);\n        return result.filter(function(d, i){ return i%4===3;} ); //return channel alpha in rgba\n    }\n\n    return derive;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/derive.js\n// module id = null\n// module chunks = ","\nconst smallest = -Math.pow(2, 128);\nexport default function extent($p) {\n\n    var vs = $p.shader.vertex(function() {\n        gl_PointSize = 1.0;\n        var i, j;\n        if (this.aDataIdy * this.uDataDim.x + this.aDataIdx >= this.uDataSize) {\n            this.vDiscardData = 1.0;\n        } else {\n            this.vDiscardData = 0.0;\n            i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n            j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n            this.vResult = this.getData(this.uFieldId, i, j);\n        }\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = $p.shader.fragment(function() {\n        if (this.vDiscardData == 1.0) discard;\n        if (this.vResult >= 0.0) {\n            gl_FragColor = vec4(0.0, 0.0, 1.0, this.vResult);\n        } else {\n            gl_FragColor = vec4(-1.0, this.vResult, 0.0, 0.0);\n        }\n    });\n\n    var gl = $p.program(\"stats\", vs, fs);\n\n    return function(fieldIds, dataDimension) {\n        if (!$p._update) {\n            $p.framebuffer(\"fStats\", \"float\", [2, fieldIds.length]);\n        }\n        var gl = $p.program(\"stats\");\n        $p.framebuffer.enableRead(\"fGroupResults\");\n\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n\n        $p.bindFramebuffer(\"fStats\");\n        gl.clearColor(smallest, smallest, smallest, smallest);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE);\n\n        var extents = new Array(fieldIds.length);\n\n        var idCount = $p.uniform.uIndexCount.data;\n        fieldIds.forEach(function(d, i) {\n            $p.uniform.uFieldId = i + idCount;\n            gl.viewport(0, i, 1, 1);\n            gl.blendEquation(gl.MAX_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n            // gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, max);\n\n            gl.viewport(1, i, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            gl.blendEquation(gl.MIN_EXT);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, dataDimension[0], dataDimension[1]);\n\n            // var extent = new Float32Array(8);\n            // gl.readPixels(0, i, 2, 1, gl.RGBA, gl.FLOAT, extent);\n            // console.log(extent);\n            // var ext = extent;\n            // var minValue = (ext[0] > 0) ? ext[1] : ext[7],\n            //     maxValue = (ext[2] > 0) ? ext[3] : ext[5];\n            //  extents[i] = [minValue, maxValue];\n        });\n        var extent = new Float32Array(8 * fieldIds.length);\n       \n        gl.readPixels(0, 0, 2, fieldIds.length, gl.RGBA, gl.FLOAT, extent);\n        fieldIds.forEach(function(d, i) {\n            var ext = extent.slice(i * 8, i * 8 + 8);\n            var minValue = (ext[4] < 0) ? ext[5] : ext[7],\n                maxValue = (ext[2] > 0) ? ext[3] : ext[1];\n            extents[i] = [minValue, maxValue];\n        });\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        return extents;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/extent.js\n// module id = null\n// module chunks = ","export const NumericalMatch = {\n  vertexShader() {\n    var i, j, k, value;\n    var filter = new Int(0);\n    var sel = new Int(0);\n    var visSelect = new Bool(false);\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n  \n    for(var f = 0; f < $(fieldCount) + $(indexCount); f++) {\n        if(this.uFilterControls[f] == 1 || this.uVisControls[f] == 1) {\n            value = this.getData(f, i, j);\n  \n            if(this.uFilterControls[f] == 1) {\n                if(value < this.uFilterRanges[f].x || value > this.uFilterRanges[f].y) {\n                    filter -= 1;\n                }\n            }\n            if(this.uVisControls[f] == 1) {\n                if(value < this.uVisRanges[f].x || value > this.uVisRanges[f].y) {\n                    sel -= 1;\n                }\n                visSelect = true;\n            }\n        }\n    }\n    this.vResult = 0.1;\n    if(filter < 0) {\n        this.vResult = 0.0;\n    } else {\n        if(visSelect)\n            this.vResult = (sel < 0) ? 0.1 : 0.2;\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n  },\n\n  fragmentShader() {\n    gl_FragColor = vec4(0., 0., 0., this.vResult);\n  }\n}\n\nexport const CategoricalMatch = {\n  vertexShader() {\n    var i, j, k, value;\n    i = (this.aDataIdx+0.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n    this.vResult = this.uFilterLevel - 0.1;\n    value = this.getData(this.uFieldId, i, j);\n    for(var l = 0; l < 100; l++){\n        if(l < this.uSelectCount) {\n            if(value == this.uInSelections[l]) {\n                this.vResult = this.uFilterLevel;\n            }\n        }\n    }\n    var x = i * 2.0 - 1.0;\n    var y = j * 2.0 - 1.0;\n    gl_PointSize = 1.0;\n    gl_Position = vec4(x, y, 0.0, 1.0);\n  },\n\n  fragmentShader() {\n    gl_FragColor = vec4(0., 0., 0., this.vResult);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/gpgpu/Match.gl.js\n// module id = null\n// module chunks = ","import {NumericalMatch, CategoricalMatch} from './gpgpu/Match.gl.js'\n\nexport default function match($p) {\n    const SELECT_MAX = 100;\n    var match = {},\n        dataDimension = $p.uniform.uDataDim.data,\n        fieldCount = $p.fields.length,\n        filterControls = new Array(fieldCount).fill(0),\n        filterRanges = $p.fieldDomains,\n        visControls = new Array(fieldCount).fill(0),\n        visRanges = $p.fieldDomains,\n        inSelections = new Array(SELECT_MAX);\n\n    $p.uniform('uInSelections', 'float', Float32Array.from(inSelections));\n    $p.uniform('uSelectMax', 'int', SELECT_MAX);\n    $p.uniform('uSelectCount', 'int', 0);\n\n    var filter = {\n        vs: $p.shader.vertex(NumericalMatch.vertexShader),\n        fs: $p.shader.fragment(NumericalMatch.fragmentShader)\n    };\n\n    var sel = {\n        vs: $p.shader.vertex(CategoricalMatch.vertexShader),\n        fs: $p.shader.fragment(CategoricalMatch.fragmentShader)\n    };\n\n    $p.program('filter', filter.vs, filter.fs);\n    $p.program('match', sel.vs, sel.fs);\n\n    match.control = function(ctrl) {\n        // filterControls = ctrl;\n    }\n\n    function _execute(spec){\n        var fields = $p.fields\n        var gl;\n        var matchFields = Object.keys(spec).filter(function(s){\n            return spec[s].hasOwnProperty('$in');\n        })\n        .concat(Object.keys($p.crossfilters).filter(function(s){\n            return $p.crossfilters[s].hasOwnProperty('$in');\n        }))\n\n        $p.bindFramebuffer('fFilterResults');\n       \n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        if(matchFields.length) {\n            gl = $p.program('match');\n            if($p.deriveCount > 0) {\n                $p.framebuffer.enableRead('fDerivedValues');\n            }\n\n            gl.viewport(0, 0, dataDimension[0], dataDimension[1]);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.clearColor( 1.0, 1.0, 1.0, 1.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MIN_EXT);\n\n            matchFields.forEach(function(k){\n                var fieldId = $p.fields.indexOf(k);\n                var inSelections = (spec.hasOwnProperty(k)) ? spec[k].$in :  $p.crossfilters[k].$in;\n                if($p.strValues.hasOwnProperty(k)) {\n                    inSelections = inSelections\n                        .slice(0, SELECT_MAX)\n                        .map(function(v) { return $p.strValues[k][v]; });\n                } else {\n                    inSelections = inSelections.slice(0, SELECT_MAX);\n                }\n                $p.uniform.uSelectCount = inSelections.length;\n                $p.uniform.uInSelections = Float32Array.from(inSelections);\n                $p.uniform.uFieldId = fieldId;\n\n                gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, $p.dataDimension[0], $p.dataDimension[1]);\n                // filterRanges[fieldId*2] = Math.min.apply(null, spec[k].$in);\n                // filterRanges[fieldId*2+1] = Math.max.apply(null, spec[k].$in);\n                filterRanges[fieldId] = [Math.min.apply(null, inSelections), Math.max.apply(null, inSelections)];\n            })\n        }\n\n        var filterSelections = Object.keys(spec).filter(function(s){\n            return !spec[s].hasOwnProperty('$in');\n        });\n\n        var viewSelections = Object.keys($p.crossfilters).filter(function(s){\n            return !$p.crossfilters[s].hasOwnProperty('$in'); \n        });\n     \n        if(filterSelections.length || viewSelections.length){\n            filterControls = new Array(fieldCount).fill(0);\n\n            filterSelections.forEach(function(k){\n                var fieldId = $p.fields.indexOf(k);\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if(spec[k].length < 2) spec[k][1] = spec[k][0];\n                filterControls[fieldId] = 1;\n                filterRanges[fieldId] = spec[k];\n                // filterRanges[fieldId*2] = spec[k][0];\n                // filterRanges[fieldId*2+1] = spec[k][1];\n            });\n\n            viewSelections.forEach(function(k){\n                \n                var fieldId = $p.fields.indexOf(k);\n                if(fieldId === -1) {\n                    console.log('Skipped: Matching on invalid data field ' + k);\n                    return;\n                }\n                if($p.crossfilters[k].length < 2) $p.crossfilters[k][1] = $p.crossfilters[k][0];\n                visControls[fieldId] = 1;\n                visRanges[fieldId] = $p.crossfilters[k];\n            });\n\n            $p.uniform.uFilterControls.data = filterControls;\n            $p.uniform.uFilterRanges.data = filterRanges;\n            $p.uniform.uVisControls.data = visControls;\n            $p.uniform.uVisRanges.data = visRanges;\n            gl = $p.program('filter');\n            if($p.deriveCount > 0) {\n                $p.framebuffer.enableRead('fDerivedValues');\n            }\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n            gl.disable(gl.BLEND);\n            // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.viewport(0, 0, $p.dataDimension[0], $p.dataDimension[1]);\n            gl.ext.drawArraysInstancedANGLE(gl.POINTS, 0, $p.dataDimension[0], $p.dataDimension[1]);\n        }\n        $p.ctx.bindFramebuffer($p.ctx.FRAMEBUFFER, null);\n        return filterRanges;\n    }\n\n    match.execute = function(spec) {\n        filterControls = new Array($p.fields.length).fill(0);\n        visControls = new Array($p.fields.length).fill(0);\n        var filterSpec = spec;\n\n        Object.keys($p.crossfilters).forEach(function(k, i) {\n            if($p.strValues.hasOwnProperty(k) && !$p.crossfilters[k].$in) {\n                let filterValues = $p.crossfilters[k];\n                if(filterValues.length > 1) {\n                    let startIndex = $p.strLists[k].indexOf($p.crossfilters[k][0]);\n                    let endIndex = $p.strLists[k].indexOf($p.crossfilters[k][1]);\n                    filterValues = $p.strLists[k].slice(startIndex, endIndex + 1);\n                }\n                $p.crossfilters[k] = {$in: filterValues};\n            }\n        });\n\n        Object.keys(filterSpec).forEach(function(k, i) {\n            if($p.strValues.hasOwnProperty(k) && !spec[k].$in) {\n                spec[k] = {$in: spec[k]};\n            }\n        });\n\n        $p.uniform.uFilterFlag = 1;\n        if(!$p._update) {\n           \n            $p.framebuffer('fFilterResults', 'unsigned_byte', $p.dataDimension);\n            filterRanges = $p.fieldDomains.slice();\n            visRanges = $p.fieldDomains.slice();\n        }\n        var newDomains = _execute(spec);\n\n        if(!$p._update){\n            newDomains.forEach(function(domain, fid) {\n                var d = domain;\n                // if($p.dtypes[fid] == 'int') d[1] -= 1;\n                $p.fieldDomains[fid] = d;\n                $p.fieldWidths[fid] = $p.getDataWidth(fid, d);\n            });\n\n            $p.uniform.uFieldDomains.value($p.fieldDomains);\n            $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        }\n        $p.getMatchBuffer = match.result;\n    }\n\n    match.result = function(arg) {\n        var options = arg || {},\n            offset = options.offset || [0, 0],\n            resultSize = options.size || $p.dataDimension[0]* $p.dataDimension[1],\n            rowSize = Math.min(resultSize, $p.dataDimension[0]),\n            colSize = Math.ceil(resultSize/$p.dataDimension[0]);\n\n        $p.bindFramebuffer('fFilterResults');\n\n        var gl = $p.ctx;\n        var bitmap = new Uint8Array(rowSize*colSize*4);\n        gl.readPixels(offset[0], offset[1], rowSize, colSize, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return  bitmap.filter((d, i) => i % 4 === 3);\n    }\n\n    return match;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ops/match.js\n// module id = null\n// module chunks = ","export const gradients = {\n    \"inferno\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#02010a\", \"#02020c\", \"#02020e\", \"#030210\", \"#040312\", \"#040314\", \"#050417\", \"#060419\", \"#07051b\", \"#08051d\", \"#09061f\", \"#0a0722\", \"#0b0724\", \"#0c0826\", \"#0d0829\", \"#0e092b\", \"#10092d\", \"#110a30\", \"#120a32\", \"#140b34\", \"#150b37\", \"#160b39\", \"#180c3c\", \"#190c3e\", \"#1b0c41\", \"#1c0c43\", \"#1e0c45\", \"#1f0c48\", \"#210c4a\", \"#230c4c\", \"#240c4f\", \"#260c51\", \"#280b53\", \"#290b55\", \"#2b0b57\", \"#2d0b59\", \"#2f0a5b\", \"#310a5c\", \"#320a5e\", \"#340a5f\", \"#360961\", \"#380962\", \"#390963\", \"#3b0964\", \"#3d0965\", \"#3e0966\", \"#400a67\", \"#420a68\", \"#440a68\", \"#450a69\", \"#470b6a\", \"#490b6a\", \"#4a0c6b\", \"#4c0c6b\", \"#4d0d6c\", \"#4f0d6c\", \"#510e6c\", \"#520e6d\", \"#540f6d\", \"#550f6d\", \"#57106e\", \"#59106e\", \"#5a116e\", \"#5c126e\", \"#5d126e\", \"#5f136e\", \"#61136e\", \"#62146e\", \"#64156e\", \"#65156e\", \"#67166e\", \"#69166e\", \"#6a176e\", \"#6c186e\", \"#6d186e\", \"#6f196e\", \"#71196e\", \"#721a6e\", \"#741a6e\", \"#751b6e\", \"#771c6d\", \"#781c6d\", \"#7a1d6d\", \"#7c1d6d\", \"#7d1e6d\", \"#7f1e6c\", \"#801f6c\", \"#82206c\", \"#84206b\", \"#85216b\", \"#87216b\", \"#88226a\", \"#8a226a\", \"#8c2369\", \"#8d2369\", \"#8f2469\", \"#902568\", \"#922568\", \"#932667\", \"#952667\", \"#972766\", \"#982766\", \"#9a2865\", \"#9b2964\", \"#9d2964\", \"#9f2a63\", \"#a02a63\", \"#a22b62\", \"#a32c61\", \"#a52c60\", \"#a62d60\", \"#a82e5f\", \"#a92e5e\", \"#ab2f5e\", \"#ad305d\", \"#ae305c\", \"#b0315b\", \"#b1325a\", \"#b3325a\", \"#b43359\", \"#b63458\", \"#b73557\", \"#b93556\", \"#ba3655\", \"#bc3754\", \"#bd3853\", \"#bf3952\", \"#c03a51\", \"#c13a50\", \"#c33b4f\", \"#c43c4e\", \"#c63d4d\", \"#c73e4c\", \"#c83f4b\", \"#ca404a\", \"#cb4149\", \"#cc4248\", \"#ce4347\", \"#cf4446\", \"#d04545\", \"#d24644\", \"#d34743\", \"#d44842\", \"#d54a41\", \"#d74b3f\", \"#d84c3e\", \"#d94d3d\", \"#da4e3c\", \"#db503b\", \"#dd513a\", \"#de5238\", \"#df5337\", \"#e05536\", \"#e15635\", \"#e25734\", \"#e35933\", \"#e45a31\", \"#e55c30\", \"#e65d2f\", \"#e75e2e\", \"#e8602d\", \"#e9612b\", \"#ea632a\", \"#eb6429\", \"#eb6628\", \"#ec6726\", \"#ed6925\", \"#ee6a24\", \"#ef6c23\", \"#ef6e21\", \"#f06f20\", \"#f1711f\", \"#f1731d\", \"#f2741c\", \"#f3761b\", \"#f37819\", \"#f47918\", \"#f57b17\", \"#f57d15\", \"#f67e14\", \"#f68013\", \"#f78212\", \"#f78410\", \"#f8850f\", \"#f8870e\", \"#f8890c\", \"#f98b0b\", \"#f98c0a\", \"#f98e09\", \"#fa9008\", \"#fa9207\", \"#fa9407\", \"#fb9606\", \"#fb9706\", \"#fb9906\", \"#fb9b06\", \"#fb9d07\", \"#fc9f07\", \"#fca108\", \"#fca309\", \"#fca50a\", \"#fca60c\", \"#fca80d\", \"#fcaa0f\", \"#fcac11\", \"#fcae12\", \"#fcb014\", \"#fcb216\", \"#fcb418\", \"#fbb61a\", \"#fbb81d\", \"#fbba1f\", \"#fbbc21\", \"#fbbe23\", \"#fac026\", \"#fac228\", \"#fac42a\", \"#fac62d\", \"#f9c72f\", \"#f9c932\", \"#f9cb35\", \"#f8cd37\", \"#f8cf3a\", \"#f7d13d\", \"#f7d340\", \"#f6d543\", \"#f6d746\", \"#f5d949\", \"#f5db4c\", \"#f4dd4f\", \"#f4df53\", \"#f4e156\", \"#f3e35a\", \"#f3e55d\", \"#f2e661\", \"#f2e865\", \"#f2ea69\", \"#f1ec6d\", \"#f1ed71\", \"#f1ef75\", \"#f1f179\", \"#f2f27d\", \"#f2f482\", \"#f3f586\", \"#f3f68a\", \"#f4f88e\", \"#f5f992\", \"#f6fa96\", \"#f8fb9a\", \"#f9fc9d\", \"#fafda1\", \"#fcffa4\"],\n    \"magma\": [\"#000004\", \"#010005\", \"#010106\", \"#010108\", \"#020109\", \"#02020b\", \"#02020d\", \"#03030f\", \"#030312\", \"#040414\", \"#050416\", \"#060518\", \"#06051a\", \"#07061c\", \"#08071e\", \"#090720\", \"#0a0822\", \"#0b0924\", \"#0c0926\", \"#0d0a29\", \"#0e0b2b\", \"#100b2d\", \"#110c2f\", \"#120d31\", \"#130d34\", \"#140e36\", \"#150e38\", \"#160f3b\", \"#180f3d\", \"#19103f\", \"#1a1042\", \"#1c1044\", \"#1d1147\", \"#1e1149\", \"#20114b\", \"#21114e\", \"#221150\", \"#241253\", \"#251255\", \"#271258\", \"#29115a\", \"#2a115c\", \"#2c115f\", \"#2d1161\", \"#2f1163\", \"#311165\", \"#331067\", \"#341069\", \"#36106b\", \"#38106c\", \"#390f6e\", \"#3b0f70\", \"#3d0f71\", \"#3f0f72\", \"#400f74\", \"#420f75\", \"#440f76\", \"#451077\", \"#471078\", \"#491078\", \"#4a1079\", \"#4c117a\", \"#4e117b\", \"#4f127b\", \"#51127c\", \"#52137c\", \"#54137d\", \"#56147d\", \"#57157e\", \"#59157e\", \"#5a167e\", \"#5c167f\", \"#5d177f\", \"#5f187f\", \"#601880\", \"#621980\", \"#641a80\", \"#651a80\", \"#671b80\", \"#681c81\", \"#6a1c81\", \"#6b1d81\", \"#6d1d81\", \"#6e1e81\", \"#701f81\", \"#721f81\", \"#732081\", \"#752181\", \"#762181\", \"#782281\", \"#792282\", \"#7b2382\", \"#7c2382\", \"#7e2482\", \"#802582\", \"#812581\", \"#832681\", \"#842681\", \"#862781\", \"#882781\", \"#892881\", \"#8b2981\", \"#8c2981\", \"#8e2a81\", \"#902a81\", \"#912b81\", \"#932b80\", \"#942c80\", \"#962c80\", \"#982d80\", \"#992d80\", \"#9b2e7f\", \"#9c2e7f\", \"#9e2f7f\", \"#a02f7f\", \"#a1307e\", \"#a3307e\", \"#a5317e\", \"#a6317d\", \"#a8327d\", \"#aa337d\", \"#ab337c\", \"#ad347c\", \"#ae347b\", \"#b0357b\", \"#b2357b\", \"#b3367a\", \"#b5367a\", \"#b73779\", \"#b83779\", \"#ba3878\", \"#bc3978\", \"#bd3977\", \"#bf3a77\", \"#c03a76\", \"#c23b75\", \"#c43c75\", \"#c53c74\", \"#c73d73\", \"#c83e73\", \"#ca3e72\", \"#cc3f71\", \"#cd4071\", \"#cf4070\", \"#d0416f\", \"#d2426f\", \"#d3436e\", \"#d5446d\", \"#d6456c\", \"#d8456c\", \"#d9466b\", \"#db476a\", \"#dc4869\", \"#de4968\", \"#df4a68\", \"#e04c67\", \"#e24d66\", \"#e34e65\", \"#e44f64\", \"#e55064\", \"#e75263\", \"#e85362\", \"#e95462\", \"#ea5661\", \"#eb5760\", \"#ec5860\", \"#ed5a5f\", \"#ee5b5e\", \"#ef5d5e\", \"#f05f5e\", \"#f1605d\", \"#f2625d\", \"#f2645c\", \"#f3655c\", \"#f4675c\", \"#f4695c\", \"#f56b5c\", \"#f66c5c\", \"#f66e5c\", \"#f7705c\", \"#f7725c\", \"#f8745c\", \"#f8765c\", \"#f9785d\", \"#f9795d\", \"#f97b5d\", \"#fa7d5e\", \"#fa7f5e\", \"#fa815f\", \"#fb835f\", \"#fb8560\", \"#fb8761\", \"#fc8961\", \"#fc8a62\", \"#fc8c63\", \"#fc8e64\", \"#fc9065\", \"#fd9266\", \"#fd9467\", \"#fd9668\", \"#fd9869\", \"#fd9a6a\", \"#fd9b6b\", \"#fe9d6c\", \"#fe9f6d\", \"#fea16e\", \"#fea36f\", \"#fea571\", \"#fea772\", \"#fea973\", \"#feaa74\", \"#feac76\", \"#feae77\", \"#feb078\", \"#feb27a\", \"#feb47b\", \"#feb67c\", \"#feb77e\", \"#feb97f\", \"#febb81\", \"#febd82\", \"#febf84\", \"#fec185\", \"#fec287\", \"#fec488\", \"#fec68a\", \"#fec88c\", \"#feca8d\", \"#fecc8f\", \"#fecd90\", \"#fecf92\", \"#fed194\", \"#fed395\", \"#fed597\", \"#fed799\", \"#fed89a\", \"#fdda9c\", \"#fddc9e\", \"#fddea0\", \"#fde0a1\", \"#fde2a3\", \"#fde3a5\", \"#fde5a7\", \"#fde7a9\", \"#fde9aa\", \"#fdebac\", \"#fcecae\", \"#fceeb0\", \"#fcf0b2\", \"#fcf2b4\", \"#fcf4b6\", \"#fcf6b8\", \"#fcf7b9\", \"#fcf9bb\", \"#fcfbbd\", \"#fcfdbf\"],\n    \"plasma\": [\"#0d0887\", \"#100788\", \"#130789\", \"#16078a\", \"#19068c\", \"#1b068d\", \"#1d068e\", \"#20068f\", \"#220690\", \"#240691\", \"#260591\", \"#280592\", \"#2a0593\", \"#2c0594\", \"#2e0595\", \"#2f0596\", \"#310597\", \"#330597\", \"#350498\", \"#370499\", \"#38049a\", \"#3a049a\", \"#3c049b\", \"#3e049c\", \"#3f049c\", \"#41049d\", \"#43039e\", \"#44039e\", \"#46039f\", \"#48039f\", \"#4903a0\", \"#4b03a1\", \"#4c02a1\", \"#4e02a2\", \"#5002a2\", \"#5102a3\", \"#5302a3\", \"#5502a4\", \"#5601a4\", \"#5801a4\", \"#5901a5\", \"#5b01a5\", \"#5c01a6\", \"#5e01a6\", \"#6001a6\", \"#6100a7\", \"#6300a7\", \"#6400a7\", \"#6600a7\", \"#6700a8\", \"#6900a8\", \"#6a00a8\", \"#6c00a8\", \"#6e00a8\", \"#6f00a8\", \"#7100a8\", \"#7201a8\", \"#7401a8\", \"#7501a8\", \"#7701a8\", \"#7801a8\", \"#7a02a8\", \"#7b02a8\", \"#7d03a8\", \"#7e03a8\", \"#8004a8\", \"#8104a7\", \"#8305a7\", \"#8405a7\", \"#8606a6\", \"#8707a6\", \"#8808a6\", \"#8a09a5\", \"#8b0aa5\", \"#8d0ba5\", \"#8e0ca4\", \"#8f0da4\", \"#910ea3\", \"#920fa3\", \"#9410a2\", \"#9511a1\", \"#9613a1\", \"#9814a0\", \"#99159f\", \"#9a169f\", \"#9c179e\", \"#9d189d\", \"#9e199d\", \"#a01a9c\", \"#a11b9b\", \"#a21d9a\", \"#a31e9a\", \"#a51f99\", \"#a62098\", \"#a72197\", \"#a82296\", \"#aa2395\", \"#ab2494\", \"#ac2694\", \"#ad2793\", \"#ae2892\", \"#b02991\", \"#b12a90\", \"#b22b8f\", \"#b32c8e\", \"#b42e8d\", \"#b52f8c\", \"#b6308b\", \"#b7318a\", \"#b83289\", \"#ba3388\", \"#bb3488\", \"#bc3587\", \"#bd3786\", \"#be3885\", \"#bf3984\", \"#c03a83\", \"#c13b82\", \"#c23c81\", \"#c33d80\", \"#c43e7f\", \"#c5407e\", \"#c6417d\", \"#c7427c\", \"#c8437b\", \"#c9447a\", \"#ca457a\", \"#cb4679\", \"#cc4778\", \"#cc4977\", \"#cd4a76\", \"#ce4b75\", \"#cf4c74\", \"#d04d73\", \"#d14e72\", \"#d24f71\", \"#d35171\", \"#d45270\", \"#d5536f\", \"#d5546e\", \"#d6556d\", \"#d7566c\", \"#d8576b\", \"#d9586a\", \"#da5a6a\", \"#da5b69\", \"#db5c68\", \"#dc5d67\", \"#dd5e66\", \"#de5f65\", \"#de6164\", \"#df6263\", \"#e06363\", \"#e16462\", \"#e26561\", \"#e26660\", \"#e3685f\", \"#e4695e\", \"#e56a5d\", \"#e56b5d\", \"#e66c5c\", \"#e76e5b\", \"#e76f5a\", \"#e87059\", \"#e97158\", \"#e97257\", \"#ea7457\", \"#eb7556\", \"#eb7655\", \"#ec7754\", \"#ed7953\", \"#ed7a52\", \"#ee7b51\", \"#ef7c51\", \"#ef7e50\", \"#f07f4f\", \"#f0804e\", \"#f1814d\", \"#f1834c\", \"#f2844b\", \"#f3854b\", \"#f3874a\", \"#f48849\", \"#f48948\", \"#f58b47\", \"#f58c46\", \"#f68d45\", \"#f68f44\", \"#f79044\", \"#f79143\", \"#f79342\", \"#f89441\", \"#f89540\", \"#f9973f\", \"#f9983e\", \"#f99a3e\", \"#fa9b3d\", \"#fa9c3c\", \"#fa9e3b\", \"#fb9f3a\", \"#fba139\", \"#fba238\", \"#fca338\", \"#fca537\", \"#fca636\", \"#fca835\", \"#fca934\", \"#fdab33\", \"#fdac33\", \"#fdae32\", \"#fdaf31\", \"#fdb130\", \"#fdb22f\", \"#fdb42f\", \"#fdb52e\", \"#feb72d\", \"#feb82c\", \"#feba2c\", \"#febb2b\", \"#febd2a\", \"#febe2a\", \"#fec029\", \"#fdc229\", \"#fdc328\", \"#fdc527\", \"#fdc627\", \"#fdc827\", \"#fdca26\", \"#fdcb26\", \"#fccd25\", \"#fcce25\", \"#fcd025\", \"#fcd225\", \"#fbd324\", \"#fbd524\", \"#fbd724\", \"#fad824\", \"#fada24\", \"#f9dc24\", \"#f9dd25\", \"#f8df25\", \"#f8e125\", \"#f7e225\", \"#f7e425\", \"#f6e626\", \"#f6e826\", \"#f5e926\", \"#f5eb27\", \"#f4ed27\", \"#f3ee27\", \"#f3f027\", \"#f2f227\", \"#f1f426\", \"#f1f525\", \"#f0f724\", \"#f0f921\"],\n    \"viridis\": [\"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/gradients.js\n// module id = null\n// module chunks = ","export const colorhex = {\n    \"aliceblue\": \"#f0f8ff\",\n    \"antiquewhite\": \"#faebd7\",\n    \"aqua\": \"#00ffff\",\n    \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\",\n    \"beige\": \"#f5f5dc\",\n    \"bisque\": \"#ffe4c4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\",\n    \"blueviolet\": \"#8a2be2\",\n    \"brown\": \"#a52a2a\",\n    \"burlywood\": \"#deb887\",\n    \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\",\n    \"chocolate\": \"#d2691e\",\n    \"coral\": \"#ff7f50\",\n    \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\",\n    \"crimson\": \"#dc143c\",\n    \"cyan\": \"#00ffff\",\n    \"darkblue\": \"#00008b\",\n    \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\",\n    \"darkgray\": \"#a9a9a9\",\n    \"darkgreen\": \"#006400\",\n    \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\",\n    \"darkolivegreen\": \"#556b2f\",\n    \"darkorange\": \"#ff8c00\",\n    \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\",\n    \"darksalmon\": \"#e9967a\",\n    \"darkseagreen\": \"#8fbc8f\",\n    \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\",\n    \"darkturquoise\": \"#00ced1\",\n    \"darkviolet\": \"#9400d3\",\n    \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\",\n    \"dimgray\": \"#696969\",\n    \"dodgerblue\": \"#1e90ff\",\n    \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\",\n    \"forestgreen\": \"#228b22\",\n    \"fuchsia\": \"#ff00ff\",\n    \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\",\n    \"gold\": \"#ffd700\",\n    \"goldenrod\": \"#daa520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\",\n    \"honeydew\": \"#f0fff0\",\n    \"hotpink\": \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\",\n    \"khaki\": \"#f0e68c\",\n    \"lavender\": \"#e6e6fa\",\n    \"lavenderblush\": \"#fff0f5\",\n    \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\",\n    \"lightblue\": \"#add8e6\",\n    \"lightcoral\": \"#f08080\",\n    \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\",\n    \"lightgrey\": \"#d3d3d3\",\n    \"lightgreen\": \"#90ee90\",\n    \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\",\n    \"lightseagreen\": \"#20b2aa\",\n    \"lightskyblue\": \"#87cefa\",\n    \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\",\n    \"lightyellow\": \"#ffffe0\",\n    \"lime\": \"#00ff00\",\n    \"limegreen\": \"#32cd32\",\n    \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66cdaa\",\n    \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\",\n    \"mediumpurple\": \"#9370d8\",\n    \"mediumseagreen\": \"#3cb371\",\n    \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\",\n    \"mediumturquoise\": \"#48d1cc\",\n    \"mediumvioletred\": \"#c71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\",\n    \"mistyrose\": \"#ffe4e1\",\n    \"moccasin\": \"#ffe4b5\",\n    \"navajowhite\": \"#ffdead\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6b8e23\",\n    \"orange\": \"#ffa500\",\n    \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\",\n    \"palegoldenrod\": \"#eee8aa\",\n    \"palegreen\": \"#98fb98\",\n    \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#d87093\",\n    \"papayawhip\": \"#ffefd5\",\n    \"peachpuff\": \"#ffdab9\",\n    \"peru\": \"#cd853f\",\n    \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\",\n    \"powderblue\": \"#b0e0e6\",\n    \"purple\": \"#800080\",\n    \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\",\n    \"royalblue\": \"#4169e1\",\n    \"saddlebrown\": \"#8b4513\",\n    \"salmon\": \"#fa8072\",\n    \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\",\n    \"seashell\": \"#fff5ee\",\n    \"sienna\": \"#a0522d\",\n    \"silver\": \"#c0c0c0\",\n    \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\",\n    \"slategray\": \"#708090\",\n    \"snow\": \"#fffafa\",\n    \"springgreen\": \"#00ff7f\",\n    \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#d8bfd8\",\n    \"tomato\": \"#ff6347\",\n    \"turquoise\": \"#40e0d0\",\n    \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\",\n    \"white\": \"#ffffff\",\n    \"whitesmoke\": \"#f5f5f5\",\n    \"yellow\": \"#ffff00\",\n    \"yellowgreen\": \"#9acd32\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/colorhex.js\n// module id = null\n// module chunks = ","import {gradients as colorSchemes} from './gradients';\nimport {colorhex} from './colorhex';\n\nconst colorResolution = 256;\nconst colorSetMax = 32;\nconst defaultColorScheme = colorSchemes['viridis'];\nconst defaultColorSet = [\n    \"steelblue\",\n    \"red\",\n    \"teal\",\n    \"orange\",\n    \"purple\"\n];\n\nlet gradient = defaultColorScheme;\nlet colorset = defaultColorSet;\n\nexport default function color($p) {\n    let colorManager = {};\n\n    $p.uniform('uColorMode',       'int',   0) // 0=categorical, 1=numeric\n        .uniform('uColorCount',    'int',   colorSetMax)\n        .uniform('uColorSet',      'vec3',  setColorTable(colorset))\n        // .uniform('uColorGradient', 'vec4', setColorScheme(gradient))\n        .texture('tColorGradient', 'float', setColorScheme(gradient),  [colorResolution, 1], 'rgba')\n        .subroutine('mapColorRGB', 'vec3',  mapColorRGB);\n\n    colorManager.updateScheme = function(newColors) {\n        if(typeof newColors == 'string' && colorSchemes.hasOwnProperty(newColors)) {\n            gradient = colorSchemes[newColors];\n        } else if(Array.isArray(newColors)) {\n            gradient = newColors;\n        }\n        let colorGradient = setColorScheme(gradient)\n        $p.texture.tColorGradient = colorGradient;\n        // $p.texture.update('tColorGradient', colorGradient, [0, 0]);\n    }\n\n    colorManager.updateTable = function(colors) {\n        colorset = colors;\n        $p.uniform.uColorSet.data = setColorTable(colors);\n    }\n\n    colorManager.colorTable = defaultColorSet.map(function(t){\n        return rgba2hex(t);\n    });\n\n    colorManager.getColors = function() {\n        if($p.uniform.uColorMode == 0) {\n            return colorset;\n        } else {\n            return gradient;\n        }\n    }\n\n    colorManager.updateColors = function(colors, colorMode) {\n        \n        colorManager.updateScheme(colors || defaultColorScheme);\n        colorManager.updateTable(colors || defaultColorSet);\n        if(Number.isInteger(colorMode)) {\n            $p.uniform.uColorMode.data = colorMode;\n        }\n    }\n\n    colorManager.rgb = rgb;\n    colorManager.rgba = rgba;\n\n    return colorManager;\n}\n\nfunction colorStrToHex(colorStr) {\n    if (typeof colorhex[colorStr.toLowerCase()] != 'undefined') {\n        return colorhex[colorStr.toLowerCase()];\n    } else {\n        return false;\n    }\n}\n\nfunction rgb(hexStr) {\n    var hex, r, g, b;\n\n    if(hexStr.slice(0,1) == '#') {\n        hex = hexStr.slice(1);\n    } else {\n        hex = colorStrToHex(hexStr).slice(1);\n    }\n\n    r = parseInt(hex.substring(0,2), 16) / 255;\n    g = parseInt(hex.substring(2,4), 16) / 255;\n    b = parseInt(hex.substring(4,6), 16) / 255;\n    return [r, g, b];\n}\n\nfunction rgba(hexStr, alpha = 1.0) {\n    let c = rgb(hexStr);\n    return [c[0], c[1], c[2], alpha];\n}\n\nfunction rgba2hex(c) {\n    var r = c[0],\n        g = c[1],\n        b = c[2],\n        a = 1;\n    if (r > 255 || g > 255 || b > 255 || a > 255) {\n        throw 'Invalid color component';\n    }\n    return (256 + r).toString(16).substr(1) +((1 << 24) + (g << 16) | (b << 8) | a).toString(16).substr(1);\n}\n\nfunction setColorScheme(colors) {\n    var cc = colors.length - 1,\n        step = (cc >= 0) ? colorResolution / (cc+1) : 1,\n        colorGradient = new Float32Array(colorResolution * 4);\n\n    colors.push(colors[cc]);\n    for(var i = 0; i < cc+1; i++) {\n        var c0 = rgba(colors[i]),\n            c1 = rgba(colors[i+1]),\n            offset = Math.floor(i * step)*4;\n\n        for(var x = 0; x < step; x++) {\n            var xi = x / (step);\n            colorGradient[offset+x*4]   = c0[0] + (c1[0] - c0[0]) * xi;\n            colorGradient[offset+x*4+1] = c0[1] + (c1[1] - c0[1]) * xi;\n            colorGradient[offset+x*4+2] = c0[2] + (c1[2] - c0[2]) * xi;\n            colorGradient[offset+x*4+3] = c0[3] + (c1[3] - c0[3]) * xi;\n        }\n    }\n    colors.pop();\n    return colorGradient;\n}\n\nfunction setColorTable(colors) {\n    let colorTable = new Float32Array(colorSetMax * 3);\n    colors.forEach(function(c, i){\n        let colorValue = rgb(c);\n        colorTable[i*3] = colorValue[0];\n        colorTable[i*3+1] = colorValue[1];\n        colorTable[i*3+2] = colorValue[2];\n    });\n    return colorTable;\n}\n\nfunction mapColorRGB({fieldId = 'int', value = 'float'}) {\n    var d = new Vec2();\n    var colorRGB = new Vec3();\n    var intValue = new Int();\n    if(fieldId == -1) {\n        colorRGB = this.uDefaultColor;\n    } else {\n        if(this.uColorMode == 1) {\n            colorRGB = texture2D(this.tColorGradient, vec2(value, 1.0)).rgb;\n        } else {\n            d = this.uVisDomains[fieldId];\n            intValue = int(value * (d.y - d.x));\n            if(intValue >= this.uColorCount) {\n                colorRGB = vec3(0.0, 0.0, 0.0);\n            } else {\n                colorRGB = this.uColorSet[intValue];\n            }\n        }\n    }\n    return colorRGB;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/color.js\n// module id = null\n// module chunks = ","import {seqFloat} from '../utils';\nexport default function reveal($p) {\n    $p.uniform('uRevealMode', 'int', 1)\n        .framebuffer(\"offScreenFBO\", \"float\", $p.viewport)\n        .framebuffer(\"visStats\", \"float\", [1, 1]);\n\n    var aViewX = new Float32Array($p.viewport[0]).map((d, i) => i);\n    var aViewY = new Float32Array($p.viewport[1]).map((d, i) => i);\n\n    $p.attribute(\"aViewX\", \"float\", aViewX);\n    $p.attribute(\"aViewY\", \"float\", aViewY);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n\n    var vs = $p.shader.vertex(function(){\n        var i, j;\n        i = (this.aViewX+0.5) / this.uViewDim.x;\n        j = (this.aViewY+0.5) / this.uViewDim.y;\n        this.vColorRGBA = texture2D(this.offScreenFBO, vec2(i, j));\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    });\n\n    var fs = $p.shader.fragment(function() {\n        gl_FragColor = this.vColorRGBA;\n    });\n\n    $p.program(\"post-processing\", vs, fs);\n\n    var vs2 = $p.shader.vertex(function () {\n         gl_Position = vec4(this._square, 0, 1);\n    });\n\n    var fs2 = $p.shader.fragment(function() {\n        var x, y, a;\n        var value = new Vec4();\n        x = (gl_FragCoord.x+0.5) / this.uViewDim.x;\n        y = (gl_FragCoord.y+0.5) / this.uViewDim.y;\n        value = texture2D(this.offScreenFBO, vec2(x, y));\n\n        if(value.a == 0.0) discard;\n        // a = pow(((value.a - this.uDefaultAlpha) / (this.uMaxRGBA.a -this.uDefaultAlpha)), 0.33) * 0.85 + 0.15;\n        a = pow((value.a / this.uMaxRGBA.a), 0.33) * 0.9 + 0.1;\n        // a = value.a / this.uMaxRGBA.a;\n\n        if(this.uRevealMode == 0) {\n            gl_FragColor = vec4(this.uDefaultColor*a, a);\n        } else {\n            gl_FragColor = vec4(texture2D(this.tColorGradient, vec2(1.-a, 1.0)).rgb*this.uDefaultAlpha, this.uDefaultAlpha);\n        }\n    });\n\n    $p.program(\"vis-render\", vs2, fs2);\n\n    let isFBOAllocatedFBO = false;\n\n    return function(options) {\n        var gl,\n            viewIndex = options.viewIndex,\n            viewDim = options.dim,\n            offset = options.offset || [0, 0],\n            padding = options.padding || {left: 0, right: 0, left: 0, right:0};\n\n        if(!$p._update) {\n\n            if(!isFBOAllocatedFBO) {\n                isFBOAllocatedFBO = true;\n                $p.framebuffer(\"visStats\", \"float\", [1, $p.views.length]);\n            }\n\n            let vOffset = [\n                offset[0] + padding.left,\n                $p.viewport[1] - viewDim[1] + padding.bottom - offset[1],\n            ]\n            let vDim = [\n                viewDim[0] - padding.left - padding.right,\n                viewDim[1] - padding.top - padding.bottom\n            ]\n\n            $p.attribute.aViewX = seqFloat(vOffset[0], vOffset[0] + vDim[0] - 1);\n            $p.attribute.aViewY = seqFloat(vOffset[1], vOffset[1] + vDim[1] - 1);\n            gl = $p.program(\"post-processing\");\n\n            $p.framebuffer.enableRead(\"offScreenFBO\");\n            $p.bindFramebuffer(\"visStats\");\n\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewX.location, 0);\n            $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aViewY.location, 1);\n            // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n            // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n            gl.enable( gl.BLEND );\n            gl.blendFunc( gl.ONE, gl.ONE );\n            gl.blendEquation(gl.MAX_EXT);\n            gl.viewport(0, viewIndex, 1, 1);\n            gl.ext.drawArraysInstancedANGLE(\n                gl.POINTS,\n                0,\n                vDim[0],\n                vDim[1]);\n\n            var max = new Float32Array(4);\n            gl.readPixels(0, viewIndex, 1, 1, gl.RGBA, gl.FLOAT, max);\n            // if(max[3] == 0) {\n            //     max[3] = Math.sqrt($p.dataSize) * Math.log2($p.dataSize);\n            // }\n            // console.log(offset, viewDim);\n            $p.views[viewIndex].maxRGBA = max;\n        }\n\n        $p.uniform.uMaxRGBA = $p.views[viewIndex].maxRGBA;\n\n        $p.bindFramebuffer(null);\n        gl = $p.program(\"vis-render\");\n        gl.ext.vertexAttribDivisorANGLE($p.attribute._square.location, 0);\n        $p.framebuffer.enableRead(\"offScreenFBO\");\n\n        gl.viewport(\n            offset[0] + padding.left,\n            // offset[1] + padding.bottom,\n            $p.viewport[1] - viewDim[1] + padding.bottom - offset[1],\n            viewDim[0] - padding.left - padding.right,\n            viewDim[1] - padding.top - padding.bottom\n        );\n        // gl.blendEquation(gl.FUNC_ADD);\n        gl.disable( gl.BLEND );\n        // gl.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        // gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/reveal.js\n// module id = null\n// module chunks = ","export const EncodingChannels = ['x', 'y', 'color', 'opacity', 'width', 'height', 'size']\n\nexport function encode($p, vmap, colorManager) {\n    let opacity = vmap.opacity || vmap.alpha;\n    let vmapIndex = new Int32Array(EncodingChannels.length);\n    let scaleExponents = new Float32Array(EncodingChannels.length).fill(1.0);\n    \n    EncodingChannels.forEach((channel, channelIndex) => {\n        let encoding = vmap[channel];\n        if (typeof(encoding) == 'object' && encoding.hasOwnProperty('field')) {\n            if(encoding.exponent !== 1.0) {\n                scaleExponents[channelIndex] = encoding.exponent;\n            }\n            encoding = vmap[channel].field;\n        }\n        vmapIndex[channelIndex] = $p.fields.indexOf(encoding);\n    })\n    $p.uniform.uVisualEncodings.data = vmapIndex;\n    $p.uniform.uScaleExponents.data = scaleExponents;\n    $p.uniform.uDefaultAlpha.data = 1.0;\n    if(vmapIndex[2] === -1) {\n        if (typeof(vmap.color) === 'string'){\n            if(vmap.color === 'auto') {\n                $p.revealDensity = true;\n                $p.uniform.uRevealMode.data = 1;\n            } else {\n                $p.uniform.uDefaultColor.data = colorManager.rgb(vmap.color);\n            }\n        } else {\n            if(typeof(vmap.size) == 'number') {\n                $p.uniform.uMarkSize.data = vmap.size;\n            }\n        }\n    } else {\n        if($p.strLists.hasOwnProperty(vmap.color)) {\n            $p.uniform.uColorMode.data = 0;\n        } else {\n            $p.uniform.uColorMode.data = 1;\n        }\n    }\n\n    if(typeof(opacity) === 'number') {\n        $p.uniform.uDefaultAlpha.data = opacity;\n    } else if(vmapIndex[3] === -1 &&\n        typeof(opacity) == 'string' &&\n        opacity == 'auto'\n    ) {\n        $p.revealDensity = true;\n        $p.uniform.uRevealMode.data = 0;\n        // $p.uniform.uDefaultAlpha.data = 1.0;\n    }\n\n    if(vmapIndex[6] === -1 && typeof(vmap.size) == 'number') {\n        $p.uniform.uMarkSize.data = vmap.size;\n    }\n\n    let viewSetting = {scale: {}, histogram: {}};\n    let isRect = (['rect', 'bar'].indexOf(vmap.mark) !== -1);\n    let markSpace = [0, 0];\n    let isXYCategorical = [0, 0];\n    if(vmapIndex[0] > -1) {\n        let len = $p.fieldWidths[vmapIndex[0]];\n        let ext = $p.fieldDomains[vmapIndex[0]];\n        if($p.strLists.hasOwnProperty(vmap.x)){\n            viewSetting.scale.x = 'categorical';\n            viewSetting.domainX = new Array(len).fill(0).map(\n                (d,i) => $p.strLists[vmap.x][i]\n            );\n            isXYCategorical[0] = 1;\n         } else if (isRect) {\n            viewSetting.scale.x = 'ordinal';\n            viewSetting.domainX = new Array(len).fill(0).map((d,i) => ext[0] + i);\n         }\n         markSpace[0] = 0.02;\n\n    }\n    if(vmapIndex[1] > -1) {\n        let len = $p.fieldWidths[vmapIndex[1]];\n        let ext = $p.fieldDomains[vmapIndex[1]];\n\n        if($p.strLists.hasOwnProperty(vmap.y)){\n            viewSetting.scale.y = 'categorical';\n            viewSetting.domainY = new Array(len).fill(0).map(\n                (d,i)=>$p.strLists[vmap.y][i]\n            );\n            isXYCategorical[1] = 1;\n        } else if (isRect) {\n            viewSetting.scale.y = 'ordinal';\n            viewSetting.domainY = new Array(len).fill(0).map((d,i)=>ext[0] + i);\n        }\n        markSpace[1] = 0.1;\n    }\n\n    if(vmapIndex[0] > -1 && vmapIndex[1] > -1) {\n        markSpace = [0, 0];\n    }\n    let dims = ['x', 'y'];\n    for(let dim of dims) {\n        if($p.histograms.indexOf(vmap[dim]) !== -1) {\n            let histMin = $p.intervals[vmap[dim]].min;\n            let histMax = $p.intervals[vmap[dim]].max;\n            let histIntv = $p.intervals[vmap[dim]].interval;\n            let histBin = (histMax - histMin) / histIntv + 1;\n            let d = (dim == 'x') ? 'domainX' : 'domainY';\n            viewSetting.histogram[dim] = true;\n            viewSetting[d] = new Array(histBin).fill(histMin).map((h, i) => h + i*histIntv);\n            // markSpace[dims.indexOf(dim)] = 0.01;\n        }\n    }\n    $p.uniform.uMarkSpace.data = markSpace;\n    $p.uniform.uIsXYCategorical.data = isXYCategorical;\n\n    if(!$p._update) {\n        if(!vmap.width && vmap.x) {\n            $p.uniform.uDefaultWidth.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.x)]);\n        } else if(vmapIndex[4] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultWidth.data = vmap.width / width;\n        }\n\n        if(!vmap.height && vmap.y) {\n            $p.uniform.uDefaultHeight.data = 1.0 / ($p.fieldWidths[$p.fields.indexOf(vmap.y)]);\n        } else if(vmapIndex[5] === -1 && typeof(vmap.width) == 'number') {\n            $p.uniform.uDefaultHeight.data = vmap.height / height;\n        }\n    }\n    return viewSetting;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/encode.js\n// module id = null\n// module chunks = ","export default function ($p, vmap, viewIndex, domains) {\n  let chart = $p.views[viewIndex];\n  let width = chart.width;\n  let height = chart.height;\n  let padding = chart.padding;\n\n  $p.extensions.forEach((ext) => {\n    if (ext.condition.call(null, vmap)) {\n      let dataDomains = {};\n      Object.keys(domains).forEach(f => {\n        if ($p.uniqueValues.hasOwnProperty(f)) {\n          let last = $p.uniqueValues[f].length - 1;\n          dataDomains[f] = [$p.uniqueValues[f][0], $p.uniqueValues[f][last]];\n        } else {\n          dataDomains[f] = domains[f];\n        }\n      })\n\n      $p.skipRender = ext.skipDefault;\n      let data = {\n        json: null,\n        array: null,\n        texture: null,\n        vmap: vmap,\n        fields: $p.fields,\n        schema: $p.dataSchema,\n        domains: dataDomains\n      };\n\n      let view = Object.assign({}, chart);\n      view.width = width - padding.left - padding.right;\n      view.height = height - padding.top - padding.bottom;\n      view.encodings = vmap;\n      view.svg = chart.chart.svg.svg;\n      view.canvas = $p.canvas;\n\n      if (ext.exportData) {\n        data.json = $p.exportResult({format: 'row', outputTag: vmap.in});\n      }\n\n      if (typeof ext.onready === 'function') {\n        ext.onready.call($p, data, view);\n      }\n\n      let execution = (ext.type == 'class')\n        ? function (data, view) {\n          chart.plot = new ext.function(data, view)\n          return chart.plot;\n        } \n        : ext.function;\n\n      if (ext.restartOnUpdate) {\n        execution.call(ext, data, view);\n      } else {\n        if (!$p._update) {\n          execution.call(ext, data, view);\n        }\n      }\n    }\n  })\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/extend.js\n// module id = null\n// module chunks = ","export default {\n    visMap({\n        channelId = 'int',\n        addrX = 'float',\n        addrY = 'float',\n        indexedValue0 = 'float',\n        indexedValue1 = 'float',\n        defaultValue = 'float'\n    }) {\n        var value;\n        var d = new Vec2();\n        var fieldId = new Int();\n        fieldId = this.uVisualEncodings[channelId];\n        if (fieldId > -1) {\n            if (fieldId >= this.uIndexCount) {\n                value = this.getNonIndexedData(fieldId, addrX, addrY);\n            } else if (fieldId < this.uIndexCount) {\n                value = (fieldId == 0) ? indexedValue0 : indexedValue1;\n            }\n            d = this.uVisDomains[fieldId];\n            value = (value - d.x) / (d.y - d.x);\n            if (this.uScaleExponents[channelId] != 0.0) {\n                value = pow(value, this.uScaleExponents[channelId]);\n            }\n\n            if (this.uGeoProjection == 1) {\n                value = log(tan((value / 90.0 + 1.0) * 3.14159 / 4.0)) * 180.0 / 3.14159;\n            }\n        } else {\n            value = defaultValue;\n        }\n\n        return value;\n    },\n\n    getEncodingByFieldId({\n        fieldId = 'int',\n        addrX = 'float',\n        addrY = 'float'\n    }) {\n        var value;\n        if (fieldId >= this.uIndexCount) {\n            value = this.getNonIndexedData(fieldId, addrX, addrY);\n        } else if (fieldId < this.uIndexCount) {\n            value = (fieldId == 0) ? addrX : addrY;\n        }\n        var d = new Vec2();\n        d = this.uVisDomains[fieldId];\n        value = (value - d.x) / (d.y - d.x);\n        return value;\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/shaders/interpolate.gl.js\n// module id = null\n// module chunks = ","function setAttr(elem, attr) {\n    for( var key in attr ){\n        var value = attr[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.setAttribute(key, value);\n    }\n}\n\nfunction setStyle(elem, style) {\n    for( var key in style ){\n        var value = style[key],\n            c = key.match(/[A-Z]/);\n        if(c !== null) key = key.replace(c[0], \"-\"+c[0].toLowerCase())\n        elem.style[key] = value;\n    }\n}\n\nexport default function Svg(arg){\n\n    var self = (this instanceof Svg) ? this: {},\n        option = arg || {},\n        type = option.type || 'svg',\n        svgNS = 'http://www.w3.org/2000/svg',\n        svg = document.createElementNS(svgNS, type),\n        width = option.width || 400,\n        height = option.height || 300,\n        parent = option.parent || option.container || this.parent,\n        attr = option.attr || {},\n        style = option.style || {},\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0};\n\n    if(type === 'svg') {\n        var defaultAttr = {\n            width   : width + padding.left + padding.right,\n            height  : height + padding.top + padding.bottom,\n            viewBox : [0, 0, width + padding.left + padding.right , height + padding.top + padding.bottom].join(' '),\n            preserveAspectRatio: 'none'\n        };\n        setAttr(svg, defaultAttr);\n    }\n\n    self.innerWidth = function() {\n        return width;\n    }\n\n    self.innerHeight = function() {\n        return height;\n    }\n\n    self.padding = function() {\n        return padding;\n    }\n\n    if(style) setStyle(svg, style);\n    if(attr) setAttr(svg, attr);\n\n    if(parent) {\n        parent = (typeof parent == \"string\") ? document.getElementById(parent) : parent;\n        parent.appendChild(svg);\n    }\n\n    self.svg = svg;\n    self.parent = parent;\n\n    self.node = () => svg;\n\n    if(self instanceof Svg) {\n        publicMethods(Svg.prototype);\n    } else {\n        publicMethods(self);\n    }\n\n    return self;\n};\n\nfunction publicMethods(context) {\n    context.append = function(type, attr, style) {\n        var options = {};\n        options.parent = this.svg;\n        options.type = type;\n        options.attr = attr;\n        options.style = style;\n        return new Svg(options);\n    };\n\n    context.remove = function() {\n        if(this.svg && this.svg.parentNode === this.parent){\n            this.parent.removeChild(this.svg);\n        }\n    };\n\n    context.attr = function(a, v) {\n        if(typeof(a) == \"object\")\n            setAttr(this.svg, a);\n        else\n            this.svg.setAttribute(a, v);\n\n        return this;\n    }\n\n    context.Attr =  function(a, v) {\n        setAttr(this.svg, a);\n        return this;\n    }\n\n    context.Style =  function(a, v) {\n        setStyle(this.svg, a);\n        return this;\n    }\n\n    context.style = function(a, v) {\n        if(typeof(a) == \"object\")\n            setStyle(this.svg, a);\n        else\n            this.svg.style[a] = v;\n\n        return this;\n    }\n\n    context.css = context.style;\n\n    context.text = function(str){\n        this.svg.appendChild(document.createTextNode(str));\n        return this;\n    };\n\n    context.translate = function(x, y) {\n        var p = this.svg.getAttribute(\"transform\") || \"\";\n        this.svg.setAttribute(\"transform\", p + \"translate(\" + [x,y].join(\",\") + \") \");\n        return this;\n    };\n\n    context.on = function(event, callback) {\n        this.svg.addEventListner(event, callback);\n        return this;\n    }\n\n    return context;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/svg.js\n// module id = null\n// module chunks = ","export default function scale(arg) {\n    var option = arg || {},\n        align = option.align || 'center',\n        type = option.type || 'linear',\n        domain = option.domain || [0,1],\n        margin = option.margin || 0,\n        exponent = option.exponent || 1,\n        range = option.range || [0,1];\n\n    function getInterpolateFunction() {\n        //intercepts and slopes for domain and range\n        var d0 = -domain[0] / (domain[1] - domain[0]),\n            d1 = 1 / (domain[1] - domain[0]),\n            r0 = range[0],\n            r1 = range[1] - range[0];\n\n        if(type == \"linear\") {\n            return function(v) { return r0 + (d0 + v * d1) * r1 };\n        } else if(type == \"power\") {\n            d0 = -Math.pow(-d0, exponent);\n            d1 = Math.pow(d1, exponent);\n            return function(v) { return r0 + (d0 + Math.pow(v, exponent) * d1) * r1 };\n        } else if (type == \"log\") {\n            exponent = option.exponent || 10;\n            d0 = -(Math.log(-d0) / Math.log(exponent));\n            d1 = (Math.log(d1) / Math.log(exponent));\n\n            return function(v) { return r0 + (d0 + Math.log(v) / Math.log(exponent) * d1) * r1 };\n\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            return function(v) {\n                if(align == 'outer')\n                    return r0 + (domain.indexOf(v)+0.5) / (domain.length-1) * r1;\n                else\n                    return r0 + (domain.indexOf(v)+0.5) / domain.length * r1;\n            };\n        } else {\n            return function(v) { return v };\n        }\n    }\n\n    var scale = getInterpolateFunction();\n\n    scale.interval = function(ticks) {\n        if (type == \"ordinal\" || type == \"categorical\") {\n            return (1 / domain.length * Math.abs(range[1] - range[0]));\n        } else {\n            var s = Math.pow(10, Math.floor(Math.log10(Math.abs(range[1] - range[0])))-1);\n            return Math.floor( Math.abs(range[1] - range[0]) / (ticks * s) )  * s;\n        }\n    };\n\n    scale.domainLength = function() {\n        if(type == \"linear\")\n            return Math.abs(domain[1] - domain[0]);\n        else if(type == \"ordinal\" || type == \"categorical\")\n            return domain.length;\n    };\n\n    scale.rangeLength = function() {\n        return Math.abs(range[1] - range[0]);\n    };\n\n    scale.invert = function(r) {\n        if(type == \"linear\") {\n            return domain[0] + (r - range[0]) / (range[1] - range[0]) * (domain[1] - domain[0]);\n        } else if(type == \"ordinal\" || type == \"categorical\") {\n            var intv = intv = r / scale.rangeLength();\n            return domain[Math.min(Math.floor(intv * (domain.length)), domain.length-1)];\n        }\n    }\n\n    scale.domain = function() {\n        return domain;\n    }\n\n    return scale;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/scale.js\n// module id = null\n// module chunks = ","import Scale from './scale';\n\nexport default function axis(arg) {\n\n    var option = arg || {},\n        svg = option.container || option.parent,\n        dim = option.dim || \"x\",\n        color = option.color || \"#000\",\n        position = option.position || 0,\n        align = option.align || \"\",\n        scale = option.scale || \"linear\",\n        exponent = option.exponent || 1,\n        metric = option.metric || null,\n        domain = option.domain || [0, 1],\n        width = option.width || svg.innerWidth(),\n        height = option.height || svg.innerHeight(),\n        padding = option.padding || svg.padding() || {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        },\n        range = option.range || (dim == \"x\") ? [0, width] : [height, 0],\n        styles = {\n            stroke: color,\n            'stroke-width': 1\n        },\n        ticks = option.ticks,\n        tickLength = option.tickLength || 6,\n        tickPosition = option.tickPosition || [0, 0],\n        tickInterval = option.tickInterval || \"auto\",\n        tickAlign = option.tickAlign || \"center\",\n        skipLast = option.skipLast || false,\n        tickFormat = option.tickFormat || null,\n        grid = option.grid,\n        format = option.format || function (_) {return _;},\n        visable = option.visable || true,\n        domainIntervals,\n        labelPos = null,\n        labelAngle = option.labelAngle || 0,\n        X = [],\n        Y = [];\n\n    if (typeof (ticks) != \"number\") {\n        ticks = (dim == \"x\") ? Math.ceil(width / 50) : Math.ceil(height / 50);\n    }\n    var tickLabelAlign = option.tickLabelAlign || \"end\";\n    switch (align) {\n        case \"left\" || \"center\":\n            labelPos = option.labelPos || {\n                x: -tickLength / 2,\n                y: -5\n            };\n            tickLabelAlign = option.tickLabelAlign || \"end\";\n            break;\n        case \"right\":\n            labelPos = {\n                x: tickLength,\n                y: -5\n            };\n            tickLabelAlign = option.tickLabelAlign || \"start\";\n            if (!tickPosition) tickPosition = [tickLength / 2, 0];\n            break;\n        case \"top\":\n            labelPos = {\n                x: 0,\n                y: 0\n            };\n            tickLabelAlign = \"middle\";\n            if (!tickPosition) tickPosition = [0, -tickLength];\n            break;\n        case \"bottom\" || \"middle\":\n            labelPos = option.labelPos || {\n                x: 0,\n                y: -tickLength * 3\n            };\n            tickLabelAlign = option.tickLabelAlign || \"middle\";\n            break;\n        default:\n            labelPos = option.labelPos || option.labelPosition || {\n                x: 0,\n                y: 0\n            };\n            break;\n    }\n\n    function getTickInterval() {\n        var vDomain = Math.abs(domain[1] - domain[0]),\n            intv = vDomain / ticks,\n            pow = Math.ceil(Math.log10(intv)),\n            intv = intv / Math.pow(10, pow);\n\n        if (intv > 0.2 && intv <= 0.25) {\n            intv = 0.25;\n        } else if (intv > 0.7 && intv <= 0.75) {\n            intv = 0.75;\n        } else {\n            intv = Math.ceil(intv * 10) / 10;\n        }\n        return intv * Math.pow(10, pow);\n    }\n\n    if (scale == \"categorical\" || scale == \"ordinal\") {\n        domainIntervals = function () {\n            if(domain.length > 20) {\n                var dstep = Math.floor(domain.length / 20);\n                return domain.filter( (d,di) => di % dstep === 0)\n            }\n            return domain;\n        };\n    } else {\n        var intv;\n\n        if (tickInterval == \"auto\") {\n            intv = getTickInterval();\n\n        } else {\n            if (typeof (tickInterval) == \"number\") {\n                intv = tickInterval;\n            } else {\n                // intv = Math.abs(domain[1] - domain[0]) / ticks;\n                intv = getTickInterval();\n                domain[0] = intv * Math.floor(domain[0] / intv);\n                domain[1] = intv * Math.ceil(domain[1] / intv);\n            }\n        }\n\n        domainIntervals = function () {\n            var di = [];\n\n            if (domain[0] > domain[1]) {\n                domain[0] += intv;\n                for (var i = domain[0]; i > domain[1]; i = i - intv)\n                    di.push(i);\n            } else {\n                for (var i = domain[0]; i < domain[1]; i = i + intv)\n                    di.push(i);\n            }\n\n            if (di[di.length - 1] != domain[1] && !isNaN(domain[1]) && !skipLast) {\n\n                if ((domain[1] - di[di.length - 1]) < 0.4 * intv)\n                    di[di.length - 1] = domain[1];\n                else\n                    di.push(domain[1]);\n            }\n            return di;\n        }\n    }\n\n    if (metric === null) {\n\n        var scaleOptions = {\n            align: tickAlign,\n            type: scale,\n            domain: domain,\n            range: range\n        };\n\n        if (scale == \"power\") {\n            scaleOptions.exponent = exponent;\n        }\n\n        metric = Scale(scaleOptions)\n    } else {\n        domain = metric.domain();\n    }\n\n    var axis = svg.append(\"g\");\n\n    if (dim == 'x') {\n        if (!position && align) {\n            position = [0, height / 2, height];\n            position = position[[\"top\", \"middle\", \"bottom\"].indexOf(align)];\n        }\n        Y[0] = Y[1] = position;\n        X[0] = 0;\n        X[1] = Math.abs(range[1] - range[0]);\n    } else {\n        if (!position && align) {\n            position = [0, width / 2, width];\n            position = position[[\"left\", \"center\", \"right\"].indexOf(align)];\n        }\n        X[0] = X[1] = position;\n        Y[0] = 0;\n        Y[1] = Math.abs(range[1] - range[0]);\n    }\n\n    metric.show = metric.axis = function () {\n        axis.append(\"g\")\n            .append(\"line\")\n            .Attr({\n                x1: X[0],\n                x2: X[1],\n                y1: Y[0],\n                y2: Y[1]\n            })\n            .Style(styles);\n\n        var di = domainIntervals();\n\n        for (var i = 0; i < di.length; i++) {\n            var x1, x2, y1, y2;\n            if (dim == 'x') {\n                x1 = x2 = metric(di[i]) + tickPosition[0];\n                y1 = position + tickPosition[1] + tickLength;\n                y2 = y1 - tickLength;\n            } else {\n                y1 = y2 = metric(di[i]) + tickPosition[1];\n                x1 = position + tickPosition[0];\n                x2 = x1 - tickLength;\n            }\n\n            var svgTicks = axis.append(\"g\");\n            svgTicks.append(\"line\", {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2,\n            }, styles);\n\n\n            // if (dim == 'x') tickLabelAlign = \"middle\";\n            // if (dim == 'x' && labelAngle) tickLabelAlign = \"end\";\n\n            var tickLabel = svgTicks.append(\"text\")\n                .Attr({\n                    x: x2 + labelPos.x,\n                    y: y2 - labelPos.y,\n                    class: \"p4-axis-label\",\n                    \"font-size\": \"0.9em\",\n                    textAnchor: tickLabelAlign\n                });\n            if (labelAngle) tickLabel.attr(\"transform\", \"rotate(\" + [labelAngle, (x2 + labelPos.x), (y2 - labelPos.y)].join(\",\") + \")\");\n\n            var labelText = (typeof (tickFormat) == \"function\") ? format(tickFormat(di[i])) : format(di[i]);\n            // tickLabel.appendChild( document.createTextNode(labelText) );\n            tickLabel.text(labelText);\n\n            if (grid) {\n                var gx1, gx2, gy1, gy2;\n                if (dim == 'x') {\n                    gx1 = gx2 = metric(di[i]);\n                    gy1 = 0;\n                    gy2 = height;\n                } else {\n                    gy1 = gy2 = metric(di[i]);\n                    gx1 = 0;\n                    gx2 = width;\n                }\n                axis.append(\"line\", {\n                    x1: gx1,\n                    x2: gx2,\n                    y1: gy1,\n                    y2: gy2,\n                    class: \"grid-lines\"\n                }, {\n                    \"stroke\": color,\n                    // \"stroke-width\": 0.5,\n                    \"stroke-opacity\": 0.15\n                });\n            }\n        }\n        axis.translate(padding.left, padding.top);\n        return axis;\n    };\n\n    metric.remove = function () {\n        axis.remove();\n    }\n\n    if (visable) {\n        metric.svg = metric.show();\n    }\n\n    return metric;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/axis.js\n// module id = null\n// module chunks = ","import {seq} from '../arrays';\n\nexport default function printformat(spec) {\n    return function(value){\n        if(typeof value !== \"number\") return value;\n        var ret,\n            convert,\n            numericSymbols = ['y', 'z', 'a', 'f', 'p', 'n', 'µ', 'm', '', 'k', 'M','G', 'T', 'P', 'E', 'Z', 'Y'],\n            n = seq(-24,24,3),\n            i = numericSymbols.length-1,\n            parts,\n            precision = spec.match(/\\d+/)[0] || 3,\n            number = Number(value),\n            exp,\n            suffix;\n\n        if(spec[spec.length-1] == 's')\n            precision--;\n\n        parts = number.toExponential(precision).toString().match(/^(-{0,1})(\\d+)\\.?(\\d*)[eE]([+-]?\\d+)$/);\n        exp = parseInt(parts[4]) || 0;\n\n        while (i--) {\n            if (exp >= n[i]) {\n                if(i==7 && (exp-n[i]) > 1) {\n                    // console.log(exp-n[i]);\n                    suffix = numericSymbols[i+1];\n                    exp -= n[i+1];\n                    break\n                } else {\n                    suffix = numericSymbols[i];\n                    exp -= n[i];\n                    break;\n                }\n            }\n        }\n        ret = parseFloat(parts[1] + parts[2] + '.' + (parts[3]||0) + 'e' + exp.toString());\n        return ret.toString() + suffix;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/format.js\n// module id = null\n// module chunks = ","import Svg from './svg';\nimport Axis from './axis';\nimport printformat from './format';\n\nconst defaultColors = ['white', 'steelblue'];\nconst defaultSize = 20;\nvar gradID = 0;\n\nexport default function color(arg){\n    var gradientID = gradID++;\n\n    var option = arg || {},\n        container = option.container || null,\n        width = option.width || null,\n        height = option.height || null,\n        pos = option.pos ||[0, 0],\n        dim = option.dim || 'x',\n        padding = option.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        vmap = option.vmap || {},\n        label = option.label || false,\n        colors = option.colors || defaultColors,\n        domain = option.domain || ['min', 'max'],\n        format = option.format || printformat('.3s');\n\n\n    if(colors.length < 2) colors = defaultColors;\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var legend = (container === null)\n        ? new Svg({width: width, height: height, padding: padding})\n        : container.append('g');\n\n    var gradDirection;\n    if(dim == 'x') {\n        gradDirection = {x1: 0, x2: 1, y1: 0, y2: 0};\n        if(height === null) height = defaultSize;\n    } else {\n        gradDirection = {x1: 0, x2: 0, y1: 0, y2: 1};\n        if(width === null) width = defaultSize;\n    }\n\n    function linearGradient(colors) {\n        var gradient = legend.append('defs')\n            .append('linearGradient')\n                .attr('id', 'gradlegend'+gradientID)\n                .attr(gradDirection);\n\n        colors.forEach(function(c, i){\n            gradient.append('stop')\n                .attr('offset', i / (colors.length-1) )\n                .attr('stop-color', colors[colors.length-i-1]);\n        });\n        return gradient;\n    }\n\n    var grad = linearGradient(colors);\n\n    var rect = legend.append('g');\n\n    var colorScale = rect.append('rect')\n        .attr('width', width-padding.left)\n        .attr('height', height)\n        .style('fill','url(#gradlegend' + gradientID + ')');\n\n    var domainLabel = legend.append('text');\n    if(label) {\n        label.append('text')\n            .attr('x', pos[0] - 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'end')\n            .text(printformat('2s')(domain[0]));\n\n        legend.append('text')\n            .attr('x', pos[0] + width - padding.left + 5)\n            .attr('y', pos[1] + height/2 + 5)\n            .style('fill', '#222')\n            .style('text-anchor', 'begin')\n            // .style('font-size', '.9em')\n            .text(printformat('2s')(domain[1]));\n    }\n\n    if(option.title) {\n        legend.append('g')\n          .append('text')\n            .attr('y', pos[1] - padding.top)\n            .attr('x', pos[0] + width/2)\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .text(option.title);\n    }\n\n    if(dim == 'x') {\n        new Axis({\n            dim: 'x',\n            domain: domain,\n            container: legend,\n            align: 'bottom',\n            ticks: Math.floor(width / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    } else {\n        new Axis({\n            dim: 'y',\n            domain: domain,\n            container: legend,\n            align: 'right',\n            ticks: Math.floor(height / 30),\n            height: height,\n            width: width,\n            labelPos: {x: 0, y: -20},\n            format: format,\n        });\n    }\n\n\n    // legend.appendChild(xAxis);\n\n    legend.translate(pos[0]+padding.left, pos[1]+padding.top);\n\n    // legend.update = function(newDomain, newColors) {\n    //\n    //     legend.removeChild(xAxis);\n    //     xAxis = new Axis({\n    //         dim: 'x',\n    //         domain: newDomain,\n    //         container: legend,\n    //         align: 'bottom',\n    //         ticks: 4,\n    //         // tickInterval: 10000000,\n    //         labelPos: {x: -5, y: -20},\n    //          padding: padding,\n    //         width: width-padding.left,\n    //         format: format,\n    //     }).show();\n    //\n    //     if(typeof(newColors) != 'undefined') {\n    //         grad.remove();\n    //         grad = linearGradient(newColors);\n    //         colorScale.css('fill','url(#gradlegend' + gradientID + ')');\n    //\n    //     }\n    //     // legend.appendChild(xAxis);\n    //\n    //     return legend;\n    // }\n\n    return legend;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/legend.js\n// module id = null\n// module chunks = ","import axis from './axis';\nimport format from './format';\nimport legend from './legend';\n\nexport default function chart(frontSvg, backSvg, arg) {\n    var options = arg || {},\n        plot = frontSvg.append('g'),\n        metavis = backSvg.append('g'),\n        width = options.width,\n        height = options.height,\n        top = options.top || 0,\n        left = options.left || 0,\n        vmap = options.vmap || {},\n        histogram =  options.histogram,\n        features = options.fields || [],\n        domain = options.domain,\n        strLists = options.strLists,\n        labels = plot.append('g'),\n        onclick = options.onclick || null,\n        onhover = options.onhover || null,\n        showLegend = options.legend,\n        tickOffset = options.axisOffset || [0, 0],\n        padding = options.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        marks = [],\n        frameBorder = options.frameBorder || false,\n        gridlines = options.gridlines || {x: false, y: false},\n        colors = options.colors;\n\n    var scale = options.scale || {x: 'linear', y: 'linear'},\n        domainX = options.domainX || domain[vmap.x] || domain[vmap.width],\n        domainY = options.domainY || domain[vmap.y] || domain[vmap.height];\n\n    width -= padding.left + padding.right;\n    height -= padding.top + padding.bottom;\n\n    var axisOption = {\n        x: {\n            container: metavis,\n            dim: \"x\",\n            width: width,\n            height: height,\n            domain: domainX,\n            scale:  scale.x,\n            align: \"bottom\",\n            // ticks: 15,\n            grid: gridlines.x,\n            format: format(\".3s\"),\n        },\n        y: {\n            container: metavis,\n            dim: \"y\",\n            domain: domainY,\n            scale: scale.y,\n            width: width,\n            height: height,\n            align: \"left\",\n            // labelPos: {x: -5, y: -5},\n            // ticks: 8,\n            grid: gridlines.y,\n            format: format(\".3s\"),\n        }\n    };\n\n    let colorLegend;\n    if(showLegend && features.indexOf(vmap.color) !== -1){\n        colorLegend = legend({\n            container: metavis,\n            width: 20,\n            height: 180,\n            dim: \"y\",\n            domain: domain[vmap.color],\n            pos: [width + padding.right/2, 0],\n            colors: colors\n        });\n    }\n\n    let x, y, xAxes = [], yAxes = [];\n\n    // For parallel coordinates\n    if(Array.isArray(vmap.x)) {\n        let axisDist = height / (vmap.x.length-1);\n\n        vmap.x.forEach(function(d, i) {\n            axisOption.x.position = i * axisDist + 1;\n            axisOption.x.domain = domain[d];\n            if(strLists.hasOwnProperty(d)){\n                axisOption.x.scale = 'ordinal';\n                axisOption.x.tickAlign = 'outer';\n                axisOption.x.domain = strLists[d].reverse();\n            }\n            let labelOffset = 20;\n            if(i === 0) {\n                axisOption.x.tickPosition = [0, -5];\n                axisOption.x.labelPos = {x: 0, y: 2};\n                labelOffset = 35;\n            } else {\n                axisOption.x.tickPosition = null;\n                axisOption.x.labelPos = null;\n            }\n            x = axis(axisOption.x);\n            xAxes[i] = x;\n\n            labels\n            .append(\"text\")\n              .attr(\"x\", 5 )\n              .attr(\"y\", i * axisDist - labelOffset)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    if(Array.isArray(vmap.y)) {\n        var axisDist = width / (vmap.y.length-1);\n\n        vmap.y.forEach(function(d, i) {\n            axisOption.y.position = i * axisDist;\n            axisOption.y.domain = domain[d];\n            if(strLists.hasOwnProperty(d)){\n                axisOption.y.scale = 'ordinal';\n                axisOption.y.tickAlign = 'outer';\n                axisOption.y.domain = strLists[d].reverse();\n            }\n            if(i == vmap.y.length-1) {\n                axisOption.y.tickPosition = [5, 0];\n                axisOption.y.tickLabelAlign = \"start\";\n                axisOption.y.labelPos = {x: 8, y: -5};\n\n            }\n            y = axis(axisOption.y);\n            yAxes[i] = y;\n\n            labels.append(\"text\")\n              .attr(\"y\", -padding.top + 10)\n              .attr(\"x\", i * axisDist)\n              .attr(\"dy\", \"1em\")\n              .css(\"text-anchor\", \"middle\")\n              .css(\"font-size\", \"1em\")\n              .text(d);\n        });\n    }\n\n    let histDomain = {\n        x: domainX, \n        y: domainY\n    };\n    for(let dim of ['x', 'y']) {\n        if(scale[dim] == 'ordinal' || scale[dim] == 'categorical') {\n            if(width / histDomain[dim].length < 10) {\n                axisOption[dim].ticks = histDomain[dim].length;\n            }\n            // while(width / axisOption[dim].ticks < 20) {\n            //     axisOption[dim].ticks *= 0.5;\n            // }\n        }\n\n        if(histogram[dim]) {\n            axisOption[dim].tickPosition = (dim == 'x') \n                ? [-width / (histDomain[dim].length-1) /2, 0]\n                : [0, height/ (histDomain[dim].length-1) /2]\n\n            axisOption[dim].scale = \"ordinal\";\n            axisOption[dim].tickAlign = \"outer\";\n            axisOption[dim].domain = histDomain[dim];\n            axisOption[dim].ticks = histDomain[dim].length;\n        }\n    }\n\n    if((vmap.x || vmap.width) && !Array.isArray(vmap.x)) x = axis(axisOption.x);\n    if((vmap.y || vmap.height) && !Array.isArray(vmap.y)) y = axis(axisOption.y);\n\n    if((vmap.hasOwnProperty('x') || vmap.hasOwnProperty('width')) && !Array.isArray(vmap.x)) {\n        let xAxisTitle = vmap.x || vmap.width;\n        // xAxisTitle = xAxisTitle.replace(/_/g, ' ');\n        // axisOption.x.grid = 1;\n        labels.append(\"g\")\n          .append(\"text\")\n            .attr(\"x\", width/2)\n            .attr(\"y\", height + padding.bottom/2 )\n            .attr(\"dy\", \"1em\")\n            .css(\"text-anchor\", \"middle\")\n            .css(\"font-size\", \"1.0em\")\n            .css(\"font-weight\", \"bold\")\n            .css(\" text-transform\", \"capitalize\")\n            .text(xAxisTitle);\n\n    }\n    if((vmap.hasOwnProperty('y') || vmap.hasOwnProperty('height')) && !Array.isArray(vmap.y)) {\n        let yAxisTitle = vmap.y || vmap.height;\n        // yAxisTitle = yAxisTitle.replace(/_/g, ' ');\n        // axisOption.y.grid = 1;\n        if(!Array.isArray(vmap.y)) {\n            labels.append(\"g\")\n              .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", -padding.left/1.25 )\n                .attr(\"x\", -height/2 )\n                .attr(\"dy\", \"1em\")\n                .css(\"text-anchor\", \"middle\")\n                .css(\"font-size\", \"1.0em\")\n                .css(\"font-weight\", \"bold\")\n                .css(\" text-transform\", \"capitalize\")\n                .text(yAxisTitle);\n        }\n    }\n    \n    if(frameBorder) {\n        plot.append(\"line\")\n            .attr('x1', 0)\n            .attr('x2', width)\n            .attr('y1', 0)\n            .attr('y2', 0)\n            .css('stroke', '#000')\n        plot.append(\"line\")\n            .attr('x1', width)\n            .attr('x2', width)\n            .attr('y1', 0)\n            .attr('y2', height)\n            .css('stroke', '#000')\n            .css('stroke-opacity', 0.5)\n    }\n\n    plot.translate(padding.left+left, padding.top+top);\n    metavis.translate(padding.left+left, padding.top+top);\n\n    let chartLayer = {};\n    chartLayer.updateAxisX =  function(newDomain) {\n        x.remove();\n        axisOption.x.domain = newDomain;\n        x = axis(axisOption.x)\n        return chartLayer;\n    }\n    chartLayer.updateAxisY =  function(newDomain) {\n        y.remove();\n        axisOption.y.domain = newDomain;\n        y = axis(axisOption.y)\n        return chartLayer;\n    }\n    chartLayer.removeAxis = function() {\n\n        if(yAxes.length) {\n            yAxes.forEach(function(yp) {\n                yp.remove();\n            })\n        } else if(xAxes.length) {\n            xAxes.forEach(function(xp) {\n                xp.remove();\n            })\n        } else {\n            x.remove();\n            y.remove();\n        }\n    }\n    chartLayer.removeLegend = function() {\n        if(showLegend) {\n            colorLegend.remove();\n        }\n    }\n    chartLayer.svg = plot;\n    chartLayer.x = Array.isArray(vmap.x) ? xAxes : x;\n    chartLayer.y = Array.isArray(vmap.y) ? yAxes : y;\n\n    return chartLayer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/chart.js\n// module id = null\n// module chunks = ","import Svg from './svg';\nimport chart from './chart';\n\nfunction assign(object, source) {\n    Object.keys(source).forEach(function(key) {\n        object[key] = source[key];\n    });\n}\nvar defaultProperties = {\n    width: 400,\n    height: 300,\n    padding: {left: 0, right: 0, top: 0, bottom: 0},\n}\n\nexport default function layout(arg){\n    \"use strict\";\n\n    /* Private */\n    var viz = this,\n        option = arg || {},\n        container = option.container || document.body,\n        style = option.style || null,\n        layers = [];\n\n    this.width = container.clientWidth || 400;\n    this.height = container.clientHeight || 300;\n\n    if(typeof container == 'string') container = document.getElementById(container);\n    assign(viz, defaultProperties);\n    assign(viz, option);\n\n    this.vmap = option.vmap;\n\n    this.width -= (this.padding.left + this.padding.right);\n    this.height -= (this.padding.top + this.padding.bottom);\n\n\n    /* Public */\n    this.data = option.data || [];\n    this.div = document.createElement(\"div\");\n    if(style !== null) {\n        Object.keys(style).forEach(function(prop){\n            viz.div.style[prop] = style[prop];\n        })\n    }\n\n    this.init = function(){\n        // container = (containerId == \"body\") ? document.body : document.getElementById(containerId);\n\n        this.div.className = option.className || \"p6-viz\";\n        this.div.style.position = 'relative';\n        this.resize(\n            this.width + this.padding.left + this.padding.right,\n            this.height + this.padding.top + this.padding.bottom\n        );\n\n        if(option.style) this.css(option.style);\n\n        container.appendChild(this.div);\n        this.viz();\n        return viz;\n    };\n\n    this.createSVG = function(arg) {\n        var arg = arg || {},\n            width = arg.width || this.width,\n            height = arg.height || this.height,\n            padding = arg.padding || this.padding;\n\n        return new Svg({\n            width: width,\n            height: height,\n            padding: padding,\n            style: {position: 'absolute'}\n        });\n    }\n\n    var canvas = option.canvas,\n        svg = this.createSVG(),\n        vmap = option.vmap,\n        chartPadding = this.padding || {left: 0, right: 0, top: 0, bottom: 0},\n        domain = option.domain || {x: [0, 1000], y: [0, 1]},\n        scales = option.scales || {x: 'linear', y: 'linear'};\n\n    var backSVG = this.createSVG(),\n        frontSVG = this.createSVG();\n\n    this.set = function(props) {\n        assign(viz, props);\n    };\n\n    this.addProperty = function(obj, prop) {\n        assign(obj, prop);\n        return obj;\n    }\n\n    this.viz = function() {\n        viz.div.appendChild(backSVG.svg);\n        viz.div.appendChild(canvas);\n        viz.div.appendChild(frontSVG.svg);\n        return viz;\n    };\n\n    this.render = this.viz;\n\n    this.css = function(style){\n        for(var key in style){\n            this.div.style[key] = style[key];\n        }\n        return this;\n    };\n\n    this.resize = function(w,h){\n        this.div.style.width = w + \"px\";\n        this.div.style.height = h + \"px\";\n    };\n\n    this.destroy = function() {\n        this._super.destroy();\n        container.removeChild(this.div);\n        div = null;\n    };\n\n    this.hide = function() {\n        this.div.style.display = 'none';\n    }\n\n    this.show = function() {\n        this.div.style.display = 'block';\n    }\n\n    this.innerWidth = function() {\n        return this.width;\n    }\n\n    this.innerHeight = function() {\n        return this.height;\n    }\n\n    this.addChart = function(options) {\n        return chart(frontSVG, backSVG, options)\n    };\n\n    this.exportImage = function(beforeExport) {\n        var imageCanvas = document.createElement(\"canvas\");\n        imageCanvas.width = this.width;\n        imageCanvas.height = this.height;\n        return new Promise(function(resolve, reject) {\n\n            var ctx = imageCanvas.getContext(\"2d\");\n            var svgString = new XMLSerializer().serializeToString(frontSVG.svg);\n\n            var DOMURL = self.URL || self.webkitURL || self;\n            var svgBlob = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\n            var svgURL = DOMURL.createObjectURL(svgBlob);\n\n            var canvasLayer = new Image();\n            var svgLayer = new Image();\n            canvasLayer.onload = function() {\n                ctx.drawImage(canvasLayer, 0, 0);\n                svgLayer.src = svgURL;\n                svgLayer.onload = function() {\n                    ctx.drawImage(svgLayer, 0, 0);\n                    var png = imageCanvas.toDataURL(\"image/png\");\n                    DOMURL.revokeObjectURL(png);\n                    resolve(png);\n                };\n            };\n\n            canvasLayer.onerror = function() {\n                reject(Error(\"Canvas Output Error!\"));\n            }\n\n            svgLayer.onerror = function() {\n                reject(Error(\"SVG Output Error!\"));\n            }\n            beforeExport();\n            canvasLayer.src = canvas.toDataURL(\"image/png\");\n        });\n\n    }\n\n    return viz.init();\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/layout.js\n// module id = null\n// module chunks = ","export default class Renderer {\n  constructor({context, name}) {\n    this.gl = context;\n    this.name = name;\n    this.gl.program(\n      name,\n      this.gl.shader.vertex(this.vertexShader),\n      this.gl.shader.fragment(this.fragmentShader)\n    )\n  }\n\n  vertexShader () {\n    gl_Position = vec4(this._square, 0, 1);\n  }\n\n  fragmentShader () {\n    if(this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01) {\n      gl_FragColor = this.vColorRGBA;\n    } else {\n      discard;\n    }\n  }\n\n  load () {\n    return this.gl.program(this.name);\n  }\n\n  render () {\n    let gl = this.gl.ctx;\n    gl.disable( gl.BLEND );\n    gl.drawArrays(primitive || gl.TRIANGLES, 0, 6);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/shaders/Renderer.gl.js\n// module id = null\n// module chunks = ","import Renderer from './Renderer.gl'\n\nexport default class Instanced extends Renderer{\n    constructor(arg) {\n        super(arg)        \n    }\n\n    vertexShader () {\n        var i, j, posX, posY, color, alpha, size;\n        var rgb = new Vec3();\n\n        i = (this.aDataIdx + 0.5) / this.uDataDim.x;\n        j = (this.aDataIdy + 0.5) / this.uDataDim.y;\n\n        if (this.uFilterFlag == 1) {\n            this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n        } else {\n            this.vResult = this.uVisLevel;\n        }\n\n        posX = this.visMap(0, i, j, this.aDataValx, this.aDataValy, 0.0);\n        posY = this.visMap(1, i, j, this.aDataValx, this.aDataValy, 0.0);\n        color = this.visMap(2, i, j, this.aDataValx, this.aDataValy, -1.0);\n        alpha = this.visMap(3, i, j, this.aDataValx, this.aDataValy, this.uDefaultAlpha);\n        size = this.visMap(6, i, j, this.aDataValx, this.aDataValy, 1.0);\n\n        if(this.uIsXYCategorical[0] == 1) {\n            var width = this.uFieldWidths[0];\n            posX = 0.5 / width + posX * (width - 1.0) / width;\n        }\n        if(this.uIsXYCategorical[1] == 1) {\n            var height = this.uFieldWidths[1];\n            posY = 0.5 / height + posY * (height - 1.0) / height;\n        }\n\n        posX = posX * 2.0 - 1.0;\n        posY = posY * 2.0 - 1.0;\n\n        rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n        gl_PointSize = size * this.uMarkSize;\n        this.vColorRGBA = vec4(rgb, alpha);\n        gl_Position = vec4(posX, posY, 0.0, 1.0);\n    }\n\n    fragmentShader() {\n        var valid = new Bool();\n        valid = this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01;\n        if (this.uVisMark == 1) {\n            var dist = length(gl_PointCoord.xy - vec2(0.5, 0.5));\n            if (dist > 0.5) discard;\n            var delta = 0.15;\n            var alpha = this.vColorRGBA.a - smoothstep(0.5 - delta, 0.5, dist);\n            if (valid) {\n                gl_FragColor = vec4(this.vColorRGBA.rgb * alpha, alpha);\n            } else {\n                discard;\n            }\n        } else {\n            if (valid) {\n                gl_FragColor = vec4(this.vColorRGBA.rgb * this.vColorRGBA.a, this.vColorRGBA.a);\n            } else {\n                discard;\n            }\n        }\n    }\n\n    render(primitive) {\n        let $p = this.gl;\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        $p.ctx.ext.drawArraysInstancedANGLE(primitive, 0, $p.dataDimension[0], $p.dataDimension[1]);\n\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/shaders/Instanced.gl.js\n// module id = null\n// module chunks = ","import Renderer from './Renderer.gl'\n\nexport default class Polygon extends Renderer{\n  constructor (arg) {\n    super(arg);\n  }\n\n  vertexShader () {\n    var i, j;\n    var rgb = new Vec3();\n    var posX, posY, color, alpha, width, height, size;\n    i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n    j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n\n    this.vResult = this.uVisLevel;\n\n    if (this.uFilterFlag == 1) {\n      this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n    }\n    var val0, val1;\n    val0 = this.aDataItemVal0;\n    val1 = this.aDataItemVal1;\n    posX = this.visMap(0, i, j, val0, val1, 0.0);\n    posY = this.visMap(1, i, j, val0, val1, 0.0);\n    color = this.visMap(2, i, j, val0, val1, -1.0);\n    alpha = this.visMap(3, i, j, val0, val1, this.uDefaultAlpha);\n    width = this.visMap(4, i, j, val0, val1, this.uDefaultWidth);\n    height = this.visMap(5, i, j, val0, val1, this.uDefaultHeight);\n    size = this.visMap(6, i, j, val0, val1, this.uMarkSize);\n    posX = posX * (this.uFieldWidths[this.uVisualEncodings[0]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[0]];\n    posY = posY * (this.uFieldWidths[this.uVisualEncodings[1]] - 1.0) / this.uFieldWidths[this.uVisualEncodings[1]];\n\n    width *= 1.0 - this.uMarkSpace.x * 2.0;\n    height *= 1.0 - this.uMarkSpace.y * 2.0;\n    posX += this.uMarkSpace.x * width;\n    posY += this.uMarkSpace.y * height;\n\n    if (this.aVertexId == 0.0 || this.aVertexId == 3.0) {\n      posX = posX * 2.0 - 1.0;\n      posY = posY * 2.0 - 1.0;\n    } else if (this.aVertexId == 1.0) {\n      posX = posX * 2.0 - 1.0;\n      posY = (posY + height) * 2.0 - 1.0;\n    } else if (this.aVertexId == 2.0 || this.aVertexId == 5.0) {\n      posX = (posX + width) * 2.0 - 1.0;\n      posY = (posY + height) * 2.0 - 1.0;\n    } else if (this.aVertexId == 4.0) {\n      posX = (posX + width) * 2.0 - 1.0;\n      posY = posY * 2.0 - 1.0;\n    } else {\n      posX = posX * 2.0 - 1.0;\n      posY = posY * 2.0 - 1.0;\n    }\n\n    rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n    this.vColorRGBA = vec4(rgb * alpha, alpha);\n    gl_Position = vec4(posX, posY, 0.0, 1.0);\n  }\n\n  fragmentShader() {\n    if (this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01)\n      gl_FragColor = this.vColorRGBA;\n    else\n      discard;\n  }\n\n  render() {\n    let $p = this.gl;\n    let primitive = $p.ctx.TRIANGLES;\n    let val0 = new Float32Array($p.dataSize);\n    let val1 = new Float32Array($p.dataSize);\n    for(var y = 0; y < $p.dataDimension[1]; y++) {\n      for(var x = 0; x < $p.dataDimension[0]; x++) {\n        val0[y*$p.dataDimension[0] + x] = $p.attribute.aDataValx.data[x];\n        val1[y*$p.dataDimension[0] + x] = $p.attribute.aDataValy.data[y];\n      }\n    }\n    $p.attribute.aDataItemVal0 = val0;\n    $p.attribute.aDataItemVal1 = val1;\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aVertexId.location, 0);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal0.location, 1);\n    $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemVal1.location, 1);\n    $p.ctx.ext.drawArraysInstancedANGLE(primitive, 0, 6, $p.dataSize);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/shaders/Polygon.gl.js\n// module id = null\n// module chunks = ","import Renderer from './Renderer.gl'\n\nexport default class Instanced extends Renderer{\n    constructor(arg) {\n        super(arg)        \n    }\n\n    vertexShader () {\n      var i, j;\n      var rgb = new Vec3();\n      var posX, posY, size, color, alpha;\n      gl_PointSize = this.uMarkSize;\n      i = (mod(this.aDataItemId, this.uDataDim.x) + 0.5) / this.uDataDim.x;\n      j = (floor(this.aDataItemId / this.uDataDim.x) + 0.5) / this.uDataDim.y;\n  \n      this.vResult = this.uVisLevel;\n      if(this.uFilterFlag == 1) {\n          this.vResult = texture2D(this.fFilterResults, vec2(i, j)).a;\n      }\n      if(this.uInterleaveX == 1) {\n          posX = this.aDataFieldId.y / float(this.uFeatureCount-1);\n          posY = this.getEncodingByFieldId(int(this.aDataFieldId.x), i, j);\n      } else {\n          posY = 1.0 - this.aDataFieldId.y / float(this.uFeatureCount-1);\n          posX = this.getEncodingByFieldId(int(this.aDataFieldId.x), i, j);\n      }\n      color = this.visMap(2, i, j, i, j, -1.0);\n      alpha = this.visMap(3, i, j, i, j, this.uDefaultAlpha);\n  \n      posX = posX * 2.0 - 1.0;\n      posY = posY * 2.0 - 1.0;\n  \n      rgb = this.mapColorRGB(this.uVisualEncodings[2], color);\n      this.vColorRGBA = vec4(rgb*alpha, alpha);\n      gl_Position = vec4(posX, posY, 0.0, 1.0);\n    }\n\n    updateInstancedAttribute(vm) {\n      let $p = this.gl;\n      if(Array.isArray(vm)){\n          let fv = new Float32Array(vm.length*2);\n          vm.forEach(function(f, i) {\n              fv[i*2] = $p.fields.indexOf(f);\n              fv[i*2+1] = i;\n          });\n          $p.attribute.aDataFieldId = fv;\n          $p.uniform.uFeatureCount = vm.length;\n      }\n    }\n\n    render(primitive) {\n      let $p = this.gl;\n      $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataFieldId.location, 0);\n      $p.ctx.ext.vertexAttribDivisorANGLE($p.attribute.aDataItemId.location, 1);\n      let count = $p.attribute.aDataFieldId.data.length / $p.attribute.aDataFieldId.size;\n      $p.ctx.ext.drawArraysInstancedANGLE(primitive, 0, count, $p.dataSize);\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/shaders/Interleaved.gl.js\n// module id = null\n// module chunks = ","import colors from './color';\nimport reveal from './reveal';\nimport {encode, EncodingChannels} from './encode';\nimport extend from './extend';\nimport interpolate from './shaders/interpolate.gl'\n\nimport Layout from './layout';\nimport Instanced from './shaders/Instanced.gl'\nimport Polygon from './shaders/Polygon.gl'\nimport Interleaved from './shaders/Interleaved.gl'\n\nconst userActions = ['click', 'hover', 'brush', 'zoom', 'pan'];\nconst visMarks = ['dot', 'circle', 'line', 'rect'];\n\nexport default function visualize($p) {\n\n    let colorManager = colors($p);\n    let chartPadding = $p.padding || {left: 0, right: 0, top: 0, bottom: 0};\n    let viewport = $p.viewport;\n\n    let vis = new Layout({\n        container: $p.container,\n        width: viewport[0] + chartPadding.left + chartPadding.right,\n        height: viewport[1] + chartPadding.top + chartPadding.bottom,\n        canvas: $p.canvas,\n        padding: chartPadding\n    });\n    \n    $p.uniform('uVisualEncodings',  'int',   new Array(EncodingChannels.length).fill(-1))\n        .uniform('uScaleExponents', 'float',   new Array(EncodingChannels.length).fill(1.0))\n        .uniform('uViewDim',        'vec2',  $p.viewport)\n        .uniform('uVisMark',        'int',   1)\n        .uniform('uInterleaveX',    'int',   0)\n        .uniform('uVisDomains',     'vec2',  $p.fieldDomains.map(d=>d.slice()))\n        .uniform('uVisScale',       'vec2',  [1.0, 1.0])\n        .uniform('uPosOffset',      'vec2',  [0.0, 0.0])\n        .uniform('uFeatureCount',   'int',   0)\n        .uniform('uMarkSize',       'float', 16.0)\n        .uniform('uMarkSpace',      'vec2',  [0.02, 0.02])\n        .uniform('uDefaultAlpha',   'float', 1.0)\n        .uniform('uDefaultWidth',   'float', 1.0 / $p.viewport[0])\n        .uniform('uDefaultHeight',  'float', 1.0 / $p.viewport[1])\n        .uniform('uMaxRGBA',        'vec4',  [0, 0, 0, 0])\n        .uniform('uDefaultColor',   'vec3',  [0.8, 0, 0])\n        .uniform('uGeoProjection',   'int',  0)\n        .uniform('uColorMode',      'int',   1)\n        .uniform('uIsXYCategorical','ivec2', [0, 0])\n        .varying('vColorRGBA',      'vec4'   );\n\n    let enhance = reveal($p);\n\n    $p.framebuffer('offScreenFBO', 'float', $p.viewport);\n    // $p.framebuffer('visStats', 'float', [1, 1]);\n    // $p.framebuffer(\"visStats\", \"float\", [$p.views.length, 1]);\n    // $p.framebuffer.enableRead('offScreenFBO');\n    $p.bindFramebuffer('offScreenFBO');\n    $p.ctx.clearColor( 1.0, 1.0, 1.0, 0.0 );\n    $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n    $p.bindFramebuffer(null);\n    $p.subroutine('visMap', 'float', interpolate.visMap);\n    $p.subroutine('getEncodingByFieldId', 'float', interpolate.getEncodingByFieldId);\n    \n    let renderers = {\n        instanced: new Instanced({context: $p, name: 'instanced'}),\n        polygon: new Polygon({context: $p, name: 'polygon'}),\n        interleave: new Interleaved({context: $p, name: 'interleave'})\n    }\n\n    return function(options) {\n        $p.revealDensity = false;\n        let renderer = 'instanced';\n        let vmap = options.vmap || {};\n        let mark = options.mark || vmap.mark || 'circle';\n        let viewIndex = options.viewIndex;\n\n        let visDomain = {};\n        let visDimension = vmap.viewport || [$p.views[viewIndex].width, $p.views[viewIndex].height] || viewport;\n        let width = visDimension[0];\n        let height =  visDimension[1];\n        let padding = vmap.padding || $p.views[viewIndex].padding || chartPadding;\n        let offset = vmap.offset || $p.views[viewIndex].offset || [0, 0];\n        let dimSetting = encode($p, vmap, colorManager);\n\n        let pv = $p.views[viewIndex];\n        let colorInfo = pv.color || vmap.color;\n    \n        let colorMode = 1;\n        let colorMap;\n        \n        let viewSetting = {\n            domain: visDomain,\n            fields: $p.fields,\n            vmap: vmap,\n            // onclick: interaction,\n            strLists: $p.strLists,\n            padding: padding,\n            left: offset[0],\n            top:  offset[1],\n            colors: colorManager.getColors(),\n        };\n\n        viewSetting = Object.assign(viewSetting, dimSetting);\n        viewSetting = Object.assign(viewSetting, $p.views[viewIndex]);\n\n        if(!$p._update){\n            $p.fields.forEach(function(f, i){\n                visDomain[f] = $p.fieldDomains[i].slice();\n            });\n            if(vmap.zero) {\n                if($p.fields.indexOf(vmap.width) > -1) {\n                    visDomain[vmap.width][0] = 0;\n                }\n                if($p.fields.indexOf(vmap.height) > -1) {\n                    visDomain[vmap.height][0] = 0;\n                }\n                if($p.fields.indexOf(vmap.y) > -1) {\n                    visDomain[vmap.y][0] = 0;\n                }\n            } \n\n            // pv.domains = Object.keys(visDomain).map(f=>visDomain[f]);\n            pv.domains = visDomain;\n            // $p.uniform.uVisDomains.data = pv.domains;\n            if(vmap.append !== true && pv.hasOwnProperty('chart')) {\n                pv.chart.svg.remove();\n                pv.chart.removeAxis();\n            }\n            pv.chart = vis.addChart(viewSetting);\n            pv.svg = pv.chart.svg.node();\n            if(typeof(colorInfo) === 'object') {\n                if(Array.isArray(colorInfo)) {\n                    colorMap = colorInfo;\n                } else {\n                    if(colorInfo.hasOwnProperty('interpolate')) {\n                        colorMode = (colorInfo.interpolate) ? 1 : 0;\n                    }\n                    colorMap = colorInfo.range || colorInfo.values; \n                }\n                \n            }\n            colorManager.updateColors(colorMap, colorMode);\n\n        } else {\n            // $p.uniform.uVisDomains.data = pv.domains;\n            if(pv.updateDomain === true) {\n                pv.chart.updateAxisX(pv.domains[vmap.x]);\n                pv.chart.updateAxisY(pv.domains[vmap.y]);\n            }\n        }\n        $p.uniform.uVisDomains.data = Object.keys(pv.domains).map(f=>pv.domains[f]);\n        $p.uniform.uVisMark.data = visMarks.indexOf(mark);\n        $p.uniform.uGeoProjection.data = (vmap.projection) ? 1 : 0;\n        //Check if need interleaving data attributes(e.g.,parallel coordinates)\n        if(Array.isArray(vmap.x) || Array.isArray(vmap.y)) {\n            renderer = 'interleave';\n            if(Array.isArray(vmap.x)){\n                // vmap.x = vmap.x.reverse();\n                $p.uniform.uInterleaveX = 0;\n            } else if(Array.isArray(vmap.y)) {\n                $p.uniform.uInterleaveX = 1;\n            }\n            renderers[renderer].updateInstancedAttribute(vmap.x);\n            renderers[renderer].updateInstancedAttribute(vmap.y);\n        } else if(vmap.mark && ['rect', 'bar'].indexOf(vmap.mark) !== -1) {\n            renderer = 'polygon';\n        }\n\n        let gl = renderers[renderer].load();\n        $p.framebuffer.enableRead('fFilterResults');\n        $p.framebuffer.enableRead('fDerivedValues');\n        $p.framebuffer.enableRead(vmap.in || 'fGroupResults');\n\n        if($p.revealDensity) {\n            $p.bindFramebuffer('offScreenFBO');\n            gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n            gl.blendFunc(gl.ONE, gl.ONE );\n        } else {\n            $p.bindFramebuffer(null);\n            // gl.clearColor( 1.0, 1.0, 1.0, 0.0 );\n            gl.blendFunc( gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n            // gl.blendFunc(gl.SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n        gl.viewport(\n            offset[0] + padding.left,\n            viewport[1] - height + padding.bottom - offset[1],\n            width - padding.left - padding.right,\n            height - padding.top - padding.bottom\n        );\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n\n        let primitive = gl.POINTS;\n\n        if(mark == 'line') {\n            primitive = gl.LINE_STRIP;\n            gl.lineWidth(vmap.size || 1.0);\n        }\n\n        extend($p, vmap, viewIndex, visDomain);\n\n        if(!$p.skipRender) {\n            renderers[renderer].render(primitive);\n        } else {\n            pv.chart.removeAxis();\n            if($p.fields.indexOf(vmap.color)!==-1) pv.chart.removeLegend();\n        }\n        $p.skipRender = false;\n        if($p.revealDensity) enhance({\n            viewIndex: viewIndex,\n            dim: [width, height],\n            offset: offset,\n            padding: padding\n        });\n        $p.bindFramebuffer(null);\n\n        if(!$p._update) {\n            let actions = Object.keys(vmap)\n                .filter(function(act){ return userActions.indexOf(act) !== -1});\n\n            actions.forEach(function(action) {\n                let response = {};\n                let viewId = vmap.id || $p.views[viewIndex].id;\n                response[viewId] = vmap[action];\n                let interactOptions = Object.assign({\n                    event: action,\n                    from: viewId,\n                    response: response,\n                }, vmap[action])\n                $p.interactions.push(interactOptions)\n            })\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/vis/visualize.js\n// module id = null\n// module chunks = ","import aggregate  from './ops/aggregate';\nimport cache      from './ops/cache';\nimport derive     from './ops/derive';\nimport extent     from './ops/extent';\nimport match      from './ops/match';\nimport visualize  from './vis/visualize';\n\nexport default {\n    aggregate,\n    cache,\n    derive,\n    extent,\n    match,\n    visualize\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/kernels.js\n// module id = null\n// module chunks = ","import aggregate  from './ops/aggregate';\nimport cache      from './ops/cache';\nimport derive     from './ops/derive';\nimport extent     from './ops/extent';\nimport match      from './ops/match';\nimport visualize  from './vis/visualize';\nimport reveal     from './vis/reveal';\n\nexport default function compile($p, fields, spec) {\n\n    // if(spec.hasOwnProperty('perceptual'))\n    //     operations.perceptual = kernels.perceptual($p);\n    //\n    // if(spec.hasOwnProperty('derive'))\n    //     operations.derive = kernels.derive($p, spec.derive);\n\n    return {\n        aggregate : aggregate($p),\n        cache     : cache($p),\n        match     : match($p, fields),\n        extent    : extent($p),\n        visualize : visualize($p)\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/compile.js\n// module id = null\n// module chunks = ","import programs from './kernels';\nimport compile from './compile';\nimport * as arrayOpt from './arrays';\n\nexport default function($p) {\n    let operations = {};\n    let kernels = compile($p);\n    let bin = function (spec, binIndex) {\n        let binAttr;\n        let binCount;\n    \n        if (typeof spec == 'object') {\n            binAttr = Object.keys(spec)[0];\n            binCount = spec[binAttr];\n        } else {\n            binAttr = spec;\n            // Apply Sturges' formula for determining the number of bins\n            binCount = Math.ceil(Math.log2($p.dataSize)) + 1;\n        }\n        let binAttrId = $p.fields.indexOf(binAttr);\n        let binDomain = $p.fieldDomains[$p.fields.indexOf(binAttr)];\n        let binInterval = (binDomain[1] - binDomain[0]) / binCount;\n        // debugger\n        $p.uniform.uBinCount.data[binIndex] = binCount;\n        $p.uniform.uBinIntervals.data[binIndex] = binInterval;\n        $p.fieldWidths[binAttrId] = binCount;    \n        $p.intervals[binAttr] = {};\n        $p.intervals[binAttr].dtype = 'histogram';\n        $p.intervals[binAttr].interval = binInterval;\n        $p.intervals[binAttr].min = binDomain[0];\n        $p.intervals[binAttr].max = binDomain[1];\n        $p.histograms.push(binAttr);\n        return binAttr;\n    }\n    \n    operations.aggregate = function (spec) {\n        if(spec.$bin) { \n            let binSpecs = Array.isArray(spec.$bin) ? spec.$bin : [spec.$bin];\n            let binAttrs = binSpecs.map((spec, ii) => {\n                return bin(spec, ii);\n            })\n            if(spec.$group) {\n                spec.$group = binAttrs.filter(a => spec.$group.indexOf(a) === -1).concat(spec.$group);\n            } else {\n                spec.$group = binAttrs;\n            }\n        }\n        if(Object.keys($p.crossfilters).length) {\n            $p.uniform.uFilterFlag = 1;\n        }\n        if (!kernels.hasOwnProperty('aggregate')) {\n            kernels.aggregate = programs.aggregate($p, spec);\n        }\n        kernels.aggregate.execute(spec);\n        if (typeof(spec.out) === 'string') {\n            $p.setOutput(spec.out)\n        }\n        return kernels.aggregate.result;\n    }\n\n    operations.match = function(spec) {\n        if (!kernels.hasOwnProperty('match')) {\n            kernels.match = programs.match($p);\n        }\n        kernels.match.execute(spec);\n        return kernels.match.result;\n    }\n\n    operations.cache = function(tag) {\n        if (!kernels.hasOwnProperty('cache')) {\n            kernels.cache = programs.cache($p);\n        }\n        kernels.cache.execute(tag);\n        return kernels.cache.result;\n    }\n\n    operations.derive = function(spec) {\n        // if (!kernels.hasOwnProperty('derive')) {\n        if(!$p._update) {\n            kernels.derive = programs.derive($p, spec);\n        }\n        // }\n        kernels.derive.execute(spec);\n        return kernels.derive.result;\n    }\n\n    operations.visualize = function(vmap) {\n        // if(Object.keys($p.crossfilters).length > 0)\n        //     operations.match({});\n        let vmaps;\n        if(vmap.facets) {\n            let facet = vmap.facets;\n            let spec = facet.rows || facet.columns;\n            if(facet.sortBy !== undefined) {\n                let sortOpt = Object.keys(facet.sortBy)[0];\n                let sortAttr = facet.sortBy[sortOpt];\n                let result = $p.exportResult('row');\n                let sorted = spec[sortAttr].map((fields) => {\n                    let values = result.map(r => r[fields])\n                    let min = Math.min(...values);\n                    let max = Math.max(...values);\n                    let normalizedValues = values.map( val => (val - min) / (max - min) )\n                    if (sortOpt === 'var') sortOpt = 'variance';\n                    let opt = typeof(arrayOpt[sortOpt]) === 'function' ? sortOpt : 'avg'\n                    return {\n                        name: fields,\n                        value: arrayOpt[opt](normalizedValues)\n                    }\n                })\n                .sort((a, b) => b.value - a.value )\n\n                console.log(sorted)\n                spec[sortAttr] = sorted.map(r => r.name);;\n            }\n            let encodings = Object.keys(vmap).filter(k => k !== 'facets')\n            let variables = Object.keys(spec)\n            let minLoopCount = Math.min(...variables.map(v => spec[v].length))\n\n            vmaps = new Array(minLoopCount)\n            for(let i = 0; i < minLoopCount; i++) {\n                let rule = {}\n                encodings.forEach(code => {\n                    let vi = variables.indexOf(vmap[code])\n                    if(vi < 0) {\n                    rule[code] = vmap[code]     \n                    } else {\n                    rule[code] = spec[variables[vi]][i]\n                    }\n                })\n                vmaps[i] = rule;\n                if(facet.brush && i === 0) {\n                    vmaps[i].brush = facet.brush;\n                    vmaps[i].brush.facet = 'rows'\n                }\n            }\n        } else {\n            vmaps = Array.isArray(vmap) ? vmap : [vmap];\n        }\n\n        if($p.grid.views.length < vmaps.length) {\n            $p.grid.reset();  \n            $p.views = $p.grid.generateViews({\n                count: vmaps.length, \n                width: $p.viewport[0],\n                height: $p.viewport[1],\n                padding: $p.padding,\n                gridlines: vmap.gridlines\n            })\n        }\n        vmaps.forEach( (vmap, vi) => {\n            if (!kernels.hasOwnProperty('visualize')) {\n                kernels.visualize = programs.visualize($p);\n            }\n            if (vmap.in) {\n                $p.setInput(vmap.in);\n            }\n            let viewIndex = vi;\n            if(typeof vmap.id == 'string') {\n                viewIndex = $p.views.map(d=>d.id).indexOf(vmap.id);\n                if(viewIndex == -1) {\n                    //find the next available view slot in all views\n                    for(let vi = 0; vi < $p.views.length; vi++){\n                        if(!$p.views[vi].id) {\n                            viewIndex = vi;\n                            $p.views[viewIndex].id = vmap.id;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if(vmap.mark == 'bar') vmap.zero = true;\n            $p.views[viewIndex].vmap = vmap;\n            let encoding = vmap,\n                viewTag = $p.views[viewIndex].id;\n    \n            if($p._update && $p.responses.hasOwnProperty(viewTag)) {\n                if($p.responses[viewTag].hasOwnProperty($p._responseType)) {\n                    encoding = Object.assign({}, vmap, $p.responses[viewTag][$p._responseType]);\n                }\n            }\n            if(encoding.opacity != 0){\n                kernels.visualize({\n                    vmap: encoding,\n                    viewIndex: viewIndex\n                });\n                $p.respond();\n            }\n        })\n        // $p.reset();\n    }\n\n    return operations;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/operate.js\n// module id = null\n// module chunks = ","import {scaleLinear, scaleOrdinal} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {interpolateHcl} from 'd3-interpolate';\nimport {axisLeft, axisBottom} from 'd3-axis';\n\nlet Data = {\n    json: [],\n    domains: {},\n    vmap: {}\n}\n\nlet View = {\n    container: null,\n    svg: null,\n    height: 300,\n    width: 400,\n    axes: true\n}\n\nexport default class Plot {\n    constructor(data = Data, view = View) {\n        this.data = data;\n        this.view = view;\n        this.container = view.container;\n        this.padding = view.padding || {top: 0, bottom: 0, left: 0, right: 0};\n        this.height = view.height;\n        this.width = view.width;\n        this.svg = {};\n        this.domains = data.domains || {};\n\n        if(!view.svg || view.svg === null) {\n            if(view.container !== null) {\n                this.svg = this.createSvg();\n            }\n            this.height -= this.padding.top + this.padding.bottom;\n            this.width -= this.padding.left + this.padding.right;\n            this.svg.main = this.svg.append('g')\n                .attr(\"transform\", `translate(${this.padding.left}, ${this.padding.top})`);\n    \n        } else {\n            this.svg.main = select(view.svg);\n        }\n        \n        if(this.data.json) {\n            this.scales = this.getScales();\n        }\n    }\n\n    createSvg() {\n        let svg = select(this.container)\n            .append('svg')\n                .attr('width', this.width)\n                .attr('height', this.height);\n        return svg;\n    }\n\n    channels() {\n        return {\n            x: [0, this.width],\n            y: [this.height, 0],\n            color: ['steelblue', 'red'],\n            opacity: [0, 1],\n            size: [2, 20],\n            width: [0, this.width],\n            height: [0, this.height]\n        }\n    }\n\n    getScales() {\n        let scales = {};\n        let channels = this.channels();\n        let vmap = this.data.vmap;\n\n        let fields = this.data.fields || null;\n        if(fields === null && this.data.json) {\n            this.data.fields = Object.keys(this.data.json[0]);\n            fields = Object.keys(this.data.json[0]);\n        }\n        \n        for (let channel of Object.keys(channels)) {\n            if(channel in vmap && fields.indexOf(vmap[channel]) !== -1) {\n                let domain; \n                if(!this.domains.hasOwnProperty(vmap[channel])) {\n                    let value = this.data.json.map(d=>d[vmap[channel]]);\n                    let min = Math.min(...value) || 0;\n                    let max = Math.max(...value) || 0;\n                   \n                    if(max === min) {\n                        max += 1e-6;\n                    }\n                    domain = [min, max];\n                    this.domains[vmap[channel]] = domain;\n                } else {\n                    domain = this.domains[vmap[channel]] || [0, 1];\n                }\n                let range = channels[channel];\n                if( (this.data.schema && this.data.schema[vmap[channel] === 'string'])) {\n                    scales[channel] = scaleOrdinal().domain(domain).rangeRoundBands([0, this.width], .05);\n                } else {\n                    scales[channel] = scaleLinear().domain(domain).range(range);\n                }\n                if(channel == 'color') {\n                    scales[channel].interpolate(interpolateHcl)\n                }\n            } else {\n                scales[channel] = () => vmap[channel]\n            }\n        }\n\n        return scales;\n    }\n\n    axes() {\n        if(!this.view.hideAxes) {\n            this.xAxis = this.svg.main.append('g')\n            .attr(\"transform\", `translate(0, ${this.height})`)\n            .call(axisBottom(this.scales.x).tickSizeOuter(0))\n            \n            this.yAxis = this.svg.main.append('g')\n                .call(axisLeft(this.scales.y).ticks(this.height/20))\n\n            if(this.view.gridlines && this.view.gridlines.y) {\n                this.yGridlines = this.yAxis.append('g')\n                .style('opacity', 0.3)\n                .call(axisLeft(this.scales.y).ticks(this.height/30).tickSize(-this.width))\n                .selectAll('text').remove()\n            }\n            \n        }\n    }\n\n    render() {\n        this.axes();\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/plot.js\n// module id = null\n// module chunks = ","import Plot from './plot';\nimport {area, curveBasis} from 'd3-shape';\n\nexport default class AreaChart extends Plot {\n   \n    constructor(data, view) {\n        super(data, view);\n        this.render();\n    }\n\n    render() {\n        let vmap = this.data.vmap;\n        super.axes();\n        let shape = area()\n            .curve(curveBasis)\n            .x(d => this.scales.x(d[vmap.x]))\n            .y0(this.height)\n            .y1(d => this.scales.y(d[vmap.y]));\n\n        this.svg.main.append(\"path\")\n            .datum(this.data.json)\n            .attr(\"d\", shape)\n            .style(\"fill\", vmap.color)\n            .style(\"fill-opacity\", vmap.opacity)\n            .style(\"stroke-width\", 0)\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/area.js\n// module id = null\n// module chunks = ","import Plot from './plot';\nimport {line, curveBasis} from 'd3-shape';\nimport {scaleOrdinal, schemeCategory10} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\n\nexport default class Spline extends Plot {\n    constructor(data, view) {\n        super(data, view);\n        this.render();\n    }\n\n    render() {\n        let vmap = this.data.vmap;\n        super.axes();\n        let path = line()\n            .curve(curveBasis)\n            .x( d => this.scales.x(d[vmap.x]) )\n            .y( d => this.scales.y(d[vmap.y]) );\n    \n\n        let datum = this.data.json;\n        let color = () => vmap.color;\n       \n        let series =  vmap.by || vmap.color;\n        if(this.data.fields.indexOf(series) !== -1) {\n            let result = {}\n            this.data.json.forEach(function(d){\n                if(result.hasOwnProperty(d[series])) {\n                    result[d[series]].push(d)\n                } else {\n                    result[d[series]] = [];\n                }\n            })\n            datum = result;\n            if(this.data.fields.indexOf(vmap.color) !== -1) {\n                color = scaleOrdinal(schemeCategory10);\n            }\n        }\n\n        if(Array.isArray(datum)) {\n            this.svg.main.append(\"path\")\n            .datum(datum)\n            .attr(\"d\", path)\n            .style(\"fill\", 'none')\n            .style(\"stroke\", vmap.color)\n            .style(\"stroke-width\", vmap.size)\n        } else if(typeof(datum) == 'object') {\n            let series = Object.keys(datum);\n            series .forEach((sample, di) => {\n                this.svg.main.append(\"path\")\n                .datum(datum[sample])\n                .attr(\"d\", path)\n                .style(\"fill\", 'none')\n                .style(\"stroke\", color(sample))\n                .style(\"stroke-width\", vmap.size)\n            \n                if (this.data.fields.indexOf(vmap.color) !== -1) {\n                    let legendWidth = Math.min(15, this.padding.right/2);\n                    let legendPosY = (di + 1) * Math.min(30, this.width / series.length);\n                    this.svg.main.append('rect')\n                        .attr('x', this.width + 10)\n                        .attr('y', legendPosY)\n                        .attr('width', legendWidth)\n                        .attr('height', 6)\n                        .style('fill', color(sample))\n                    \n                    this.svg.main.append('text')\n                        .attr('x', this.width + 15 + legendWidth)\n                        .attr('y', legendPosY + 6)\n                        .text(sample)\n    \n                    if(di == 0){\n                        this.svg.main.append('text')\n                            .attr('x', this.width + 10 + legendWidth/2)\n                            .attr('y', 6)\n                            .text(vmap.color)\n                    }\n                }\n            })\n\n\n        }\n\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/spline.js\n// module id = null\n// module chunks = ","import Plot from './plot';\n\nexport default class ScatterPlot extends Plot {\n   \n    constructor(data, view) {\n        super(data, view);\n        this.render();\n    }\n\n    render() {\n        let vmap = this.data.vmap;\n\n        super.axes();\n\n        this.svg.main.selectAll('.plot-circles')\n            .data(this.data.json)\n            .enter()\n            .append('circle')\n                .attr('class', 'plot-circles')\n                .attr('cx', d => this.scales.x(d[vmap.x]))\n                .attr('cy', d => this.scales.y(d[vmap.y]))\n                .attr('r', d => this.scales.size(d[vmap.size]))\n                .style(\"fill\", d => this.scales.color(d[vmap.color]))\n                .style(\"fill-opacity\", 1)\n                .style(\"stroke-width\", 0)\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/circle.js\n// module id = null\n// module chunks = ","import Plot from './plot';\nimport {scaleBand} from 'd3-scale';\nexport default class BarChart extends Plot {\n   \n    constructor(data, view) {\n        super(data, view);\n        this.render();\n    }\n\n    render() {\n        let vmap = this.data.vmap;\n        \n        let domainX = new Array(this.domains[vmap.x][1] - this.domains[vmap.x][0] + 1).fill(1).map((d, i) => i + this.domains[vmap.x][0])\n        this.scales.x = scaleBand().domain(domainX).range([0, this.width]).padding(0.05);\n        super.axes();\n        this.svg.main.selectAll(\".plot-bars\")\n            .data(this.data.json)\n          .enter().append(\"rect\")\n            .attr('class', 'plot-bars')\n            .attr('x', d => this.scales.x(d[vmap.x || vmap.width]))\n            .attr('y', d => this.scales.y(d[vmap.y || vmap.height]))\n            .style(\"fill\", d => this.scales.color(d[vmap.color]))\n            .attr(\"width\", this.scales.x.bandwidth())\n            .attr(\"height\", d => this.height - this.scales.y(d[vmap.y || vmap.height]));\n    }\n\n    update (newData, newColor) {\n        // debugger\n        let vmap = this.data.vmap;\n\n        let bars = this.svg.main.selectAll(\".plot-top-bars\")\n            .data(newData, d => d[vmap.x])\n        \n        bars.exit().remove();\n\n        bars.enter().append(\"rect\")\n            .attr('class', 'plot-top-bars');\n\n        bars.attr('x', d => this.scales.x(d[vmap.x || vmap.width]))\n            .attr('y', d => this.scales.y(d[vmap.y || vmap.height]))\n            .style(\"fill\", newColor)\n            .attr(\"width\", this.scales.x.bandwidth())\n            .attr(\"height\", d => this.height - this.scales.y(d[vmap.y || vmap.height]));\n\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/bar.js\n// module id = null\n// module chunks = ","import Plot from './plot';\nimport * as d3 from 'd3-geo';\nimport * as topojson from 'topojson-client';\nimport {interpolateBlues} from 'd3-scale-chromatic';\nimport {scalePow} from 'd3-scale';\nimport world from \"../assets/world-110m.json\";\nimport countries from '../assets/countries.json';\n\nexport default class Map extends Plot {\n    constructor(data, view) {\n        super(data, view);\n        \n        this.feature = data.feature || 'countries';\n        this.circle = data.vmap.points;\n        this.scale = data.vmap.scale;\n        this.gis = data.gis || world;\n\n        this.borders = view.borders || true;\n        this.translate = view.translate || [this.width / 2, this.height / 1.5];\n        this.scale = view.scale || ((view.projection == 'Albers') ? 1 : 150);\n        this.exponent = view.exponent || 1/3;\n        this.defaultColor = view.defaultColor || '#eee';\n        this.projection = d3['geo'+ (view.projection || 'Albers')].call()\n            .scale(this.scale)\n            .translate(this.translate);\n\n        this.path = d3.geoPath()\n            .projection(this.projection);\n\n        if(data.vmap.color) {\n            let valueById = {};\n            data.json.forEach( d => {\n                let country = countries.filter(c => c[data.join.type || 'code']== d[data.join.field])[0] || -1;\n                if(country && country.id){\n                    valueById[country.id] = typeof(d[data.vmap.color]) === 'string' && d[data.vmap.color].includes(',')\n                      ? Number(d[data.vmap.color].replace(/,/g, ''))\n                      : Number(d[data.vmap.color])\n                }\n            })\n            let values = Object.keys(valueById).map(k => valueById[k]).filter(d=>!Number.isNaN(d));\n\n            let domain = [Math.min(...values), Math.max(...values)]\n            if (data.zero) domain[0] = 0\n            let colorScale = scalePow().exponent(this.exponent).domain(domain).range([0.1, 1]);\n            this.setColor = (d) => {\n                if(valueById[d.id] !== undefined) {\n                    return interpolateBlues(colorScale(valueById[d.id]))\n                } else {\n                    return this.defaultColor\n                }\n                \n            }\n            if(view.color && typeof(view.color.setter) === 'function') {\n                this.setColor = (d) => {\n                    return this.color.setter(colorScale(valueById[d.id] || 0))\n                }\n            }\n        }\n    }\n\n    render() { \n        this.svg.main.selectAll(\".geo-paths\")\n            .data(topojson.feature(this.gis, this.gis.objects[this.feature]).features)\n            .enter()\n            .append('path')\n                .attr('class', 'geo-paths')\n                .attr(\"d\", this.path)\n                .attr(\"stroke\", \"white\")\n                .attr(\"fill\", this.setColor);\n            \n        if(this.borders) {\n            this.svg.main.append(\"path\")\n            .attr('class', 'geo-borders')\n            .datum(topojson.mesh(this.gis, this.gis.objects[this.feature], function(a, b) { return a !== b; }))\n            .attr(\"d\", this.path)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\");\n        }\n\n        return this;\n    }\n\n    addLayer({type = 'point', radius = 1.0, data, feature}) {\n        if(type == 'point') {\n            this.path.pointRadius(radius);\n            this.svg.main.append(\"path\")\n                .datum(topojson.feature(data, data.objects[feature]))\n                .attr(\"d\", this.path);\n        }\n    }\n\n    addMarker ({\n        coordinate,\n        color = 'orange',\n        icon = 'fa fa-map-marker',\n        title\n    }) {\n        let location = this.projection(coordinate);\n        this.svg.main.append('svg:foreignObject')\n        .attr(\"x\", location[0] - 1)\n        .attr(\"y\", location[1] - 15)\n        .attr('color', color)\n        .attr('text-anchor', 'end')\n        .append(\"xhtml:body\")\n        .html('<i title=\"'+ title + '\" class=\"' + icon + '\"></i>');\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/src/map.js\n// module id = null\n// module chunks = ","import Plot from './src/plot';\nimport AreaChart from './src/area';\nimport Spline from './src/spline';\nimport ScatterPlot from './src/circle';\nimport BarChart from './src/bar';\nimport GeoMap from './src/map';\n\nexport default {\n    Plot,\n    ScatterPlot,\n    BarChart,\n    AreaChart,\n    Spline,\n    GeoMap\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/index.js\n// module id = null\n// module chunks = ","function getValue ({fieldId = 'int', addrX = 'float', addrY = 'float'}){\n    var value;\n    var d = new Vec2();\n    if(fieldId > -1) {\n        value = this.getData(fieldId, addrX, addrY);\n        d = this.uVisDomains[fieldId];\n        value = (value - d.x) / (d.y - d.x);\n    } else {\n        value = 1.0;\n    }\n    return value;\n};\n\nfunction getVisProps({x = 'float', y = 'float'}) {\n    var posX, posY, size; \n    posX = this.getValue(this.uAnimationEncodings[0], x, y);\n    posY = this.getValue(this.uAnimationEncodings[1], x, y);\n    size = this.getValue(this.uAnimationEncodings[6], x, y);\n\n    var result = new Vec3();\n    result = vec3(posX, posY, size);\n    return result;\n}\n\nfunction interpolateVec3({\n    v0 = 'vec3',\n    v1 = 'vec3',\n    dv = 'float'\n}) {\n    var x, y, z;\n\n    x = v0.x + dv * (v1.x - v0.x);\n    y = v0.y + dv * (v1.y - v0.y);\n    z = v0.z + dv * (v1.z - v0.z);\n\n    return vec3(x, y, z);\n}\n\nfunction interpolateVec4($vec4_v0, $vec4_v1, $float_dv) {\n    var x, y, z, w;\n\n    x = v0.x + dv * (v1.x - v0.x);\n    y = v0.y + dv * (v1.y - v0.y);\n    z = v0.z + dv * (v1.z - v0.z);\n    z = v0.w + dv * (v1.w - v0.w);\n\n    return vec3(x, y, z, w);\n}\n\nfunction getVisColor($float_x, $float_y) {\n    var color, opacity;\n    var rgb = new Vec3();\n    color = this.getValue(this.uAnimationEncodings[2], x, y);\n    opacity = this.getValue(this.uAnimationEncodings[3], x, y);\n    rgb = this.mapColorRGB(this.uAnimationEncodings[2], color);\n    return vec4(rgb, opacity);\n}\n\nlet vShader  = function() {\n    var i0, i1, j, posX, posY;\n    var rgb = new Vec3();\n    var props = new Vec3();\n    var props0 = new Vec3();\n    var props1 = new Vec3();\n\n    i0 = (this.aDataIdx+0.5) / this.uDataDim.x;\n    i1 = (this.aDataIdx+1.5) / this.uDataDim.x;\n    j = (this.aDataIdy+0.5) / this.uDataDim.y;\n\n    if(this.uFilterFlag == 1) {\n        this.vResult = texture2D(this.fFilterResults, vec2(i0, j)).a;\n    } else {\n        this.vResult = this.uVisLevel;\n    }\n    \n    this.vColorRGBA = this.getVisColor(i0, j);\n    props0 = this.getVisProps(i0, j);\n    props1 = this.getVisProps(i1, j);\n    props = this.interpolateVec3(props0, props1, this.uAnimationInterval);\n    // props = this.getVisProps(i0, j);\n    posX = props[0] * 2.0 - 1.0;\n    posY = props[1] * 2.0 - 1.0;\n    gl_PointSize = props[2] * this.uMarkSize;\n    gl_Position = vec4(posX, posY , 0.0, 1.0);\n};\n\nlet fShader = function() {\n    var valid = new Bool();\n    valid = this.vResult <= this.uVisLevel + 0.01 && this.vResult >= this.uVisLevel - 0.01;\n    if(this.uVisMark == 1) {\n        var dist = length(gl_PointCoord.xy - vec2(0.5, 0.5));\n        if (dist > 0.5) discard;\n        var delta = 0.15;\n        var alpha = this.vColorRGBA.a - smoothstep(0.5-delta, 0.5, dist);\n        if(valid) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb*alpha, alpha);\n        } else {\n            discard;\n        }\n    } else {\n        if(valid) {\n            gl_FragColor = vec4(this.vColorRGBA.rgb * this.vColorRGBA.a,  this.vColorRGBA.a);\n        } else {\n            discard;\n        }\n    }\n}\n\nexport default function($p) {\n    $p.uniform('uAnimationInterval', 'float', 0.0);\n    $p.uniform('uAnimationEncodings', 'int', $p.uniform.uVisualEncodings.data);\n\n    $p.subroutine('getValue', 'float', getValue);\n    $p.subroutine('getVisProps', 'vec3', getVisProps);\n    $p.subroutine('getVisColor', 'vec4', getVisColor);\n    $p.subroutine('interpolateVec3', 'vec3', interpolateVec3);\n    $p.program(\"animate\",\n        $p.shader.vertex(vShader),\n        $p.shader.fragment(fShader)\n    );\n\n    let animation = {\n        elapsed : 0,\n        interval : 500,\n        then : 0,\n        step : 0,\n        stop: false,\n    }\n\n    $p.animation = animation;\n\n    let animate = function(now) {\n        if (animation.elapsed > animation.interval) {\n            animation.elapsed = 0;\n            animation.step += 1;\n            console.log(animation.step);\n        } else {\n            animation.elapsed += now - animation.then; \n        }\n        animation.then = now;\n        $p.uniform.uAnimationInterval = animation.elapsed / animation.interval;\n        if(animation.step <= $p.dataDimension[0] - 1) {\n            $p.ctx.ext.drawArraysInstancedANGLE($p.ctx.POINTS, animation.step, 1, $p.dataDimension[1]);\n            if(!animation.stop) requestAnimationFrame(animate);\n\n        } else {\n            console.log('animation completed with total steps of ' + animation.step)\n        }\n    }\n\n    animation.start =  function() {\n        requestAnimationFrame(animate);\n    }\n\n    return function() {\n        let gl = $p.program('animate');\n        $p.uniform.uAnimationEncodings = $p.uniform.uVisualEncodings.data;\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValx.location, 0);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataIdy.location, 1);\n        gl.ext.vertexAttribDivisorANGLE($p.attribute.aDataValy.location, 1);\n        animation.start();\n\n        return animation;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/animate.js\n// module id = null\n// module chunks = ","import pplot from 'p.plot';\nimport animation from '../src/animate';\n\nexport default [\n    {\n        name: 'spline',\n        exportData: true,\n        skipDefault: true,\n        getContext: false,\n        restartOnUpdate: false,\n        compute: true,\n        condition: vmap => vmap.mark === 'spline', \n        type: 'class',\n        function: pplot.Spline\n    },\n    {\n        name: 'area',\n        exportData: true,\n        skipDefault: true,\n        getContext: false,\n        restartOnUpdate: false,\n        condition: vmap => vmap.mark === 'area', \n        type: 'class',\n        function: pplot.AreaChart\n    },\n    {\n        name: 'column',\n        exportData: true,\n        skipDefault: true,\n        getContext: false,\n        restartOnUpdate: false,\n        condition: vmap => vmap.mark === 'column', \n        type: 'class',\n        function: pplot.BarChart\n    },\n    // {\n    //     name: 'animate',\n    //     // exportData: true,\n    //     skipDefault: true,\n    //     getContext: true,\n    //     restartOnUpdate: false,\n    //     condition: vmap => vmap.mark === 'circle' && vmap.animate === true, \n    //     function: animation\n    // }\n]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/extensions.js\n// module id = null\n// module chunks = ","export default class Grid {\n    constructor(views) {\n        this.views = views\n    }\n\n    add (view) {\n        this.view.push(view)\n    }\n\n    reset () {\n        this.views.forEach(function(v){\n            if(v.hasOwnProperty('chart')) {\n                v.chart.svg.remove()\n                v.chart.removeAxis()\n                v.chart.removeLegend()\n                delete v.chart\n            }\n        })\n    }\n\n    generateViews ({\n        layout = 'rows',\n        count = 1,\n        width = 640,\n        height = 480,\n        padding = {left: 0, right: 0, top: 0, bottom: 0},\n        gridlines = {x: false, y: false}\n    }) {\n        let views = new Array(count)\n        let calcOffset\n        // height -= padding.top + padding.bottom;\n        // width -= padding.left + padding.right;\n        if (layout == 'rows') {\n            height = height / count\n            calcOffset = (index) => [0, index * height]\n        } else {\n            width = width / count\n            calcOffset = (index) => [index * width, 0]\n        }\n        for (let i = 0; i < count; i++) {\n            let offset = calcOffset(i)\n            views[i] = {width, height, padding, offset, gridlines}\n        }\n        this.views = views;\n        return views;\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/grid.js\n// module id = null\n// module chunks = ","import allocate  from './allocate';\nimport input    from './io/input';\nimport output    from './io/output';\nimport initialize    from './initialize';\nimport interact  from './interact';\nimport control from './control';\nimport pipeline from './pipeline';\nimport operate from './operate';\nimport kernels from './kernels';\nimport extensions from './extensions';\nimport Grid from './grid';\nimport cstore from './cstore'\n\n\nexport default function p4(options) {\n    let $p;\n    $p = initialize(options);\n    $p.views = [];\n    $p.interactions = [];\n    $p.histograms = [];\n    $p.extensions = extensions;\n    $p.responses = {};\n    $p.crossfilters = {};\n    $p.primitives = [];\n    $p.dataSize = 0;\n    $p.rowSize = options.dimX || 4096;\n    $p.deriveMax = options.deriveMax || 4;\n    $p.deriveCount = 0;\n    \n    $p._responseType = 'unselected';\n    $p._update = false;\n    $p._progress = false;\n    $p.skipRender= false;\n\n    $p.getResult = function() {};\n    let api = pipeline($p);\n    api.ctx = $p;\n    api.addModule(control);\n    // api.addModule(output);\n    // api.addModule(view);\n    let outputs = output($p)\n    api.result = outputs.result;\n    api.addOperation('head', function() {\n        api.resume('__init__');\n        if(Object.keys($p.crossfilters).length > 0) api.match({});\n        $p.getResult = $p.getRawData;\n        return api;\n    });\n\n    $p.grid = {views: []};\n    api.view = function(views) {\n        if($p.grid.views.length !== 0) {\n            $p.grid.reset();\n        } \n        $p.grid = new Grid(views);\n        $p.views = $p.grid.views;\n        return api;\n    }\n\n    api.getViews = function () {\n        return $p.views;\n    }\n    \n    $p.reset = api.head;\n    $p.exportResult = api.result;\n\n    $p.setInput = function(inputName) {\n        api.resume(inputName);\n        return api;\n    }\n\n    $p.setOutput = function(outputName) {\n        api.register(outputName);\n        // console.log(api.result({outputTag: outputName, format: 'row'}))\n        return api;\n    }\n\n    function configPipeline($p) {\n        $p.extent = kernels.extent($p);\n        // $p.operations = compile($p);\n        let operations = operate($p);\n        api.getOperations = () => Object.keys(operations);\n        for(let optName of Object.keys(operations)) {\n            api.addOperation(optName, operations[optName], true);\n        }\n        \n        for(let ext of $p.extensions) {\n            if(ext.getContext === true) {\n                ext.function = ext.function($p);\n            }\n        }\n        api.register('__init__');\n    }\n    \n    api.data = function(dataOptions) {\n        allocate($p, dataOptions);\n        configPipeline($p);\n        $p.getResult = dataOptions.export;\n        $p.getRawData = dataOptions.export;\n        return api;\n    }\n\n    api.index = function(indexes) {\n        data.indexes = indexes;\n        return api;\n    }\n\n    api.input = function(arg) {\n        let asyncPipeline = {};\n        let inputReady = false;\n        for(let program of Object.keys(api).concat(Object.keys(kernels))) {\n            asyncPipeline[program] = function(spec) {\n                api.addToQueue(program, spec);\n                return asyncPipeline;\n            }\n        }\n\n        asyncPipeline.execute = function() {\n            return input(arg).then(function(data){\n                if(Array.isArray(arg.indexes)) {\n                    data.indexes = arg.indexes;\n                }   \n                api.data(data);\n                api.async(true);\n                api.run();\n                api.async(false);\n                inputReady = true;\n                return new Promise(function(resolve, reject){\n                    resolve(api.result('row'))\n                    return api;\n                })\n            })\n        }\n\n        asyncPipeline.commit = asyncPipeline.execute;\n\n        if(arg.dimX) $p.rowSize = arg.dimX;\n        return asyncPipeline;\n    }\n\n    api.getResult = function (d) {\n        return $p.getResult(d);\n    }\n\n    api.clearWebGLBuffers = function() {\n        $p.bindFramebuffer(\"offScreenFBO\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(\"visStats\");\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n        $p.bindFramebuffer(null);\n        $p.ctx.clearColor( 0.0, 0.0, 0.0, 0.0 );\n        $p.ctx.clear( $p.ctx.COLOR_BUFFER_BIT | $p.ctx.DEPTH_BUFFER_BIT );\n    }\n\n    api.runSpec = function(specs) {\n        api.head();\n        api.clearWebGLBuffers();\n        $p.interactions = [];\n        $p.responses = {};\n        $p.crossfilters = [];\n        $p.uniform.uFilterFlag.data = 0;\n        api.clearQueue();\n        // $p.uniform.uFilterRanges = $p.fieldDomains.concat($p.deriveDomains);\n        specs.forEach(function(spec){\n            let opt = Object.keys(spec)[0];\n            let arg = spec[opt];\n            opt = opt.slice(1); // ignore $ sign \n            if(typeof api[opt] == 'function') {\n                api[opt](arg);\n            }\n        })\n \n        return api;\n    }\n  \n    api.interact = function(spec) {\n        if(typeof(spec) != 'undefined') $p.interactions.push(spec);\n        $p.interactions.forEach(function(interaction){\n            // console.log(interaction)\n            let callback = interaction.callback || function(selection) {\n                $p.responses = interaction.response;\n                if(!$p._update) {\n                    $p._update = true;\n                    $p.crossfilters = {};\n                    if(typeof selection == 'object') {\n                        Object.keys(selection).forEach(function(k) {\n                            if(selection[k].length < 2) {\n                                if($p.intervals.hasOwnProperty(k)) {\n                                    var value = (Array.isArray(selection[k]))\n                                        ? selection[k][0]\n                                        : selection[k];\n                                    selection[k] = [value-$p.intervals[k].interval, value];\n                                } \n                                // else if(!$p.strLists.hasOwnProperty(k)) {\n                                //     selection[k] = [selection[k][0] + selection[k][0] + 1];\n                                // }\n                            }\n                            $p.crossfilters[k] = selection[k];\n                        });\n                    }\n                    $p._responseType = 'unselected';\n                    $p.uniform.uFilterLevel.data = 0.2;\n                    $p.uniform.uVisLevel.data = 0.1;\n                    api.head().run();\n                    $p._responseType = 'selected';\n                    $p.uniform.uVisLevel.data = 0.2;\n                    api.head().run();\n                    $p._responseType = 'unselected';\n                    $p._update = false;\n                    $p.uniform.uFilterLevel.data = 0.1;\n                    $p.uniform.uVisLevel.data = 0.1;\n                }\n            }\n            interact($p, {\n                actions: interaction.event,\n                view: interaction.from,\n                condition: interaction.condition,\n                facet: interaction.facet,\n                callback: callback  \n            })\n        })\n    }\n    $p.respond = api.interact;\n\n    api.updateData = function(newData) {\n        let data;\n        if(newData._p4_cstore_version) {\n            data = newData\n        } else {\n            let cache = cstore({\n                schema: $p.dataSchema,\n                strValues: $p.strValues\n            })\n            cache.addRows(newData)\n            data = cache.data()\n        }\n\n        //update and combine all strValues\n        Object.keys(data.strValues).forEach((attr) => {\n            $p.strValues[attr] = Object.assign($p.strValues[attr], data.strValues[attr]);\n        })\n\n        if(data.size > 0) {\n            $p.dataSize = data.size;\n        }\n        $p.fields\n        .slice($p.indexes.length)\n        .forEach((attr, ai) => {\n            let buf = new Float32Array($p.dataDimension[0] * $p.dataDimension[1]);\n            if(data[attr] === undefined) debugger;\n            for (let i = 0, l = data[attr].length; i < l; i++) {\n                buf[i] = data[attr][i];\n            }\n            $p.texture.tData.update(\n                buf, [0, $p.dataDimension[1] * ai], $p.dataDimension\n            );\n            $p.fieldDomains[ai] = [\n                Math.min(data.stats[attr].min, $p.fieldDomains[ai][0]),\n                Math.max(data.stats[attr].max, $p.fieldDomains[ai][1])\n            ]\n            $p.fieldWidths[ai] = $p.fieldDomains[ai][1] - $p.fieldDomains[ai][0] + 1;\n            if(data.strLists.hasOwnProperty(attr)){\n                $p.fieldDomains[ai] = [0, data.strLists[attr].length - 1];\n                $p.strLists[attr] = data.strLists[attr];\n                $p.fieldWidths[ai] = data.strLists[attr].length;\n            }\n        });\n\n        api.updateRegister('__init__', {\n            fieldDomains: $p.fieldDomains,\n            fieldWidths: $p.fieldWidths}\n        )\n        $p.uniform.uFieldDomains.data = $p.fieldDomains;\n        $p.uniform.uFieldWidths.data = $p.fieldWidths;\n        return api;\n    }\n\n    api.updateDataColumn = function(data, attribute) {\n        if($p.fields.indexOf(attribute) === -1) {\n            throw Error('Invalid attribute', attribute);\n        }\n        let buf = new Float32Array($p.dataDimension[0] * $p.dataDimension[1]);\n        let attrId = $p.fields.indexOf(attribute) - $p.indexes.length;\n        for (let i = 0, l = data[attribute].length; i < l; i++) {\n            buf[i] = data[attr][i];\n        }\n        $p.texture.tData.update(\n            buf, [0, $p.dataDimension[1] * attrId], $p.dataDimension\n        );\n    }\n\n    api.updateDataRow = function(data, rowId) {\n        let dataType = (Array.isArray(data)) ? 'array' : 'json';\n        $p.fields.slice($p.indexes.length).forEach((attr, ai) => {\n            let texPosX = rowId % $p.dataDimension[0];\n            let value = (dataType == 'array') ? data[ai] : data[attr];\n            if(value === undefined) throw Error('Cannot update data due to invalid data value');\n            $p.texture.tData.update(\n                new Float32Array(data[ai]), [texPosX, $p.dataDimension[1] * i], [1,1]\n            );\n        });\n        return api;\n    }\n\n    api.extend = function(arg) {\n        let extOptions = Object.assign({\n            restartOnUpdate: true,\n            skipDefault: false,\n            exportData: false,\n            getContext: false,\n        }, arg)\n\n        if(extOptions.name != undefined && \n            (typeof extOptions.function === 'function' \n            || typeof extOptions.constructor === 'function')\n        ) {\n            $p.extensions.push(extOptions);\n        }\n    }\n\n    api.annotate = function ({\n        id = 0,\n        mark = 'vline',\n        color = 'red',\n        size = 3,\n        position = {values: []}\n    }) {\n        let view = $p.views[0];\n        if (Number.isInteger(id) && id < $p.views.length) {\n            view = $p.views[id];\n        } else {\n            $p.views.filter(v => v.id == id);\n            if (view.length > 0) {\n                view = view[0];\n            }\n        }\n        if (mark === 'vline') {\n            let values = position[view.vmap.x || view.vmap.width] || position.values;\n            values.forEach(val => {\n                let x = view.chart.x(val);\n                view.chart.svg.append('line')\n                    .attr('x1', x)\n                    .attr('x2', x)\n                    .attr('y1', 0)\n                    .attr('y2', view.height - view.padding.top - view.padding.bottom)\n                    .attr('stroke', color)\n                    .attr('stroke-width', size)\n            })\n        } else if (mark === 'hline') {\n            let values = position[view.vmap.y || view.vmap.height] || position.values;\n            values.forEach(val => {\n                let y = view.chart.y(val);\n                view.chart.svg.append('line')\n                    .attr('x1', 0)\n                    .attr('x2', view.width - view.padding.left - view.padding.height)\n                    .attr('y1', y)\n                    .attr('y2', y)\n                    .attr('stroke', color)\n                    .attr('stroke-width', size)\n            }) \n        }\n    }\n    return api;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/main.js\n// module id = null\n// module chunks = ","export default function parse(text, delimiter) {\n    \"use strict\";\n    var size = text.length,\n        accum = 0,\n        i, //index for starting of a line\n        row,\n        rows = [],\n        fields = [],\n        lens = [],\n        EOL = false;\n\n    while(accum < size) {\n        i = accum, EOL = false;\n        row = loadLine(text, delimiter.charCodeAt(0), i);\n        rows.push(row.fields);\n        accum += row.size;\n    }\n    return rows;\n}\n\nfunction loadLine(text, delimiterCode, initPos) {\n    // if(typeof(initPos) === 'undefined') initPos = 0;\n    var EOL = false,\n        QUOTE = false,\n        c = initPos, //current pos\n        code, //code at c\n        f = initPos, // start pos of current field\n        q, //start pos of quote\n        fields = [],\n        L = text.length;\n\n    while(!EOL){\n        code = text.charCodeAt(c);\n        if(code === 10 || c>=L){\n            EOL = true;\n            // if(text.charCodeAt(c+1) === 13) ++c;\n            fields.push( text.slice(f, c) );\n        } else {\n            if(code === delimiterCode && !QUOTE) {\n                // console.log(f,c, text.slice(f, c));\n                var field = text.slice(f, c);\n                fields.push( field );\n                f = c+1;\n            } else if(code === 34){\n                if(QUOTE){\n                    if(text.charCodeAt(c+1) === delimiterCode){\n                        QUOTE = false;\n                        fields.push(text.slice(q, c));\n                        f = c+2;\n                        c++;\n                    }\n                } else {\n                    q = c+1;\n                    QUOTE = true;\n                }\n            }\n        }\n        c++;\n    }\n    return { fields: fields, size: c-initPos };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/io/parse.js\n// module id = R4fJ\n// module chunks = 1","function _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if (!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\nexport function reduce(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\nexport function avg(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\nexport function normalize(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a) {\n        return (a - min) / range;\n    });\n}\n\nexport function seq(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for (var i = start; i <= end; i += interval)\n        array.push(i);\n\n    return array;\n};\n\n// [\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n//     array[f] = array.reduce(f);\n// });\n\n// export sum = array.reduce(\"+\");\n\nexport function scan(a) {\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\nexport function iscan(a) {\n    return array.scan([0].concat(a));\n};\n\nexport function diff(a, b) {\n    var difference = [];\n    a.forEach(function(d) {\n        if (b.indexOf(d) === -1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\nexport function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function(e) {\n        if (b.indexOf(e) !== -1) return true;\n    });\n};\n\nexport function unique(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\nexport function lcm(A) {\n    var n = A.length,\n        a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]),\n            c = a;\n        while (a && b) {\n            (a > b) ? a %= b: b %= a;\n        }\n        a = Math.abs(c * A[i]) / (a + b);\n    }\n    return a;\n};\n\nexport function stats(array) {\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\nexport function histogram(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin + 1).fill(0);\n\n    for (var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b / (numBin)), min + range * (b + 1) / (numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for (var i = 0; i < l; i++) {\n        binID = Math.floor((array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin - 1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0, numBin),\n        // ids: ids\n    };\n}\n\nexport function variance(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a) {\n            return Math.pow(a - m, 2)\n        });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\nexport function std(rowArray) {\n    return Math.sqrt(variance(rowArray));\n}\n\nexport function vectorAdd(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = v + b[i];\n    });\n\n    return c;\n}\n\nexport function vectorSum(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = array.vectorAdd(result, vectors[i]);\n    }\n\n    return result;\n}\n\nfunction _vectorAvg(a, b) {\n    var c = [];\n    a.forEach(function(v, i) {\n        c[i] = (v + b[i]) * 0.5;\n    });\n\n    return c;\n}\n\nexport function vectorAvg(vectors) {\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for (var i = 1; i < numberOfVectors; i++) {\n        result = _vectorAvg(result, vectors[i]);\n    }\n\n    return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/arrays.js\n// module id = S2QL\n// module chunks = 1","module.exports = \"<v-flex fill-height>\\n  <v-toolbar dense>\\n    <v-flex xs3 class=\\\"ma-2\\\">\\n      <v-select \\n        label=\\\"TimeMode\\\"\\n        :items=\\\"timeDomains\\\"\\n        v-model=\\\"selectedTimeDomain\\\"\\n        v-on:change=\\\"visualize()\\\"\\n      > </v-select>\\n    </v-flex>\\n    <!-- <v-flex xs3 class=\\\"ma-2\\\">\\n      <v-select \\n        label=\\\"Measure\\\"\\n        :items=\\\"measures\\\"\\n        v-model=\\\"selectedMeasure\\\"\\n        v-on:change=\\\"visualize()\\\"\\n      >\\n      </v-select>\\n    </v-flex> -->\\n    <v-flex xs2 class=\\\"ma-2\\\">\\n      <v-select\\n        label=\\\"Granularity\\\"\\n        :items=\\\"granularities\\\"\\n        v-model=\\\"granularity\\\"\\n        v-on:change=\\\"visualize()\\\"\\n      >\\n      </v-select>\\n    </v-flex>\\n    <v-flex v-if=\\\"clusters\\\" xs2 class=\\\"ma-2\\\">\\n      <v-select\\n        label=\\\"Color by\\\"\\n        :items=\\\"clusters\\\"\\n        v-model=\\\"colorEncoding\\\"\\n        v-on:change=\\\"visualize()\\\"\\n      >\\n      </v-select>\\n    </v-flex>\\n    <v-spacer></v-spacer>\\n    <v-btn icon>\\n      <v-icon v-on:click=\\\"reset()\\\">refresh</v-icon>\\n    </v-btn>\\n  </v-toolbar>\\n  <v-card class=\\\"fill-height\\\" id=\\\"RossVisTimeSeries\\\"></v-card>\\n</v-flex>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/TimeSeries.html\n// module id = SUQ4\n// module chunks = 1","module.exports = \"<v-flex fill-height>\\n    <v-toolbar dense>\\n      <v-spacer></v-spacer>\\n      <v-flex xs2 class=\\\"ma-2\\\">\\n        <v-select\\n          label=\\\"Granularity\\\"\\n          :items=\\\"granularities\\\"\\n          v-model=\\\"granularity\\\"\\n          v-on:change=\\\"init()\\\"\\n        >\\n        </v-select>\\n      </v-flex>\\n      <v-flex xs3 class=\\\"ma-2\\\">\\n        <v-select \\n          label=\\\"Dimensional Reduction\\\"\\n          :items=\\\"dimensionalMethods\\\"\\n          v-model=\\\"dimensionalSelected\\\"\\n          v-on:change=\\\"analyze()\\\"\\n        >\\n        </v-select>\\n      </v-flex>\\n      <v-flex xs3 class=\\\"ma-2\\\">\\n        <v-select \\n          label=\\\"Clustering Method\\\"\\n          :items=\\\"clusteringMethods\\\"\\n          v-model=\\\"clusteringSelected\\\"\\n          v-on:change=\\\"visualize()\\\"\\n        >\\n        </v-select>\\n      </v-flex>\\n\\n    </v-toolbar>\\n    <v-card class=\\\"fill-height\\\">\\n      <div ref=\\\"Vis\\\"></div>\\n    </v-card>\\n  </v-flex>\\n  \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/Dimensionality.html\n// module id = XMpN\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-79a6cfec\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = XYhO\n// module chunks = 1","module.exports = function match(data, spec) {\n    var indexes = data[0];\n\n    if(!Array.isArray(indexes)) indexes = [];\n\n    return data.filter(function(a){\n        if(_match(a, spec, indexes)) return a;\n    });\n};\n\nfunction _match(obj, spec, indexes){\n    var match,\n        opt,\n        index,\n        sat = true,\n        keys = Object.keys(spec);\n\n    keys.forEach(function(key){\n        if(key === \"$not\") {\n            match = !_match(obj, spec[key], indexes);\n        } else if(key == \"$or\" || key == \"$and\" ) {\n            match = (key == \"$and\");\n            spec[key].forEach(function(s){\n                match = (key == \"$and\") ? match & _match(obj, s, indexes) : match | _match(obj, s, indexes);\n            });\n        } else {\n            index = (indexes.length > 0) ? indexes.indexOf(key) : key;\n\n            if(typeof spec[key] === 'object'){\n                opt = Object.keys(spec[key])[0];\n\n                if(opt[0] == \"$\" && spec[key][opt] instanceof Array){\n                    if(opt == \"$in\" || opt == \"$nin\"){\n                        match = ((opt == \"$nin\") ^ (spec[key][opt].indexOf(obj[index]) > -1));\n                    } else if(opt == \"$inRange\"){\n                        match =(obj[key] >= spec[key][opt][0] & obj[index] <= spec[key][opt][1]);\n                    } else if(opt == \"$ninRange\"){\n                        match =(obj[key] < spec[key][opt][0] | obj[index] > spec[key][opt][1]);\n                    } else if(opt == \"$inDate\"){\n                        match = (spec[key][opt].map(Number).indexOf(+(obj[index])) > -1);\n                    }\n                } else if(spec[key] instanceof Array) {\n                    match =(obj[key] >= spec[key][0] & obj[index] <= spec[key][1]);\n                }\n            } else {\n                if(spec[key][0] === \"$\") {\n                    match = (obj[spec[key].slice(1)] === obj[index]);\n                } else {\n                    match = (spec[key] == obj[index]);\n                }\n            }\n        }\n        sat = sat & match;\n    });\n\n    return sat;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/match.js\n// module id = Xj71\n// module chunks = 1","module.exports = [{\"name\":\"Kosovo\",\"code\":\"-99\",\"id\":\"-99\"},{\"name\":\"Somaliland\",\"code\":\"-99\",\"id\":\"-99\"},{\"name\":\"Northern Cyprus\",\"code\":\"-99\",\"id\":\"-99\"},{\"name\":\"Afghanistan\",\"code\":\"AFG\",\"id\":\"4\"},{\"name\":\"Angola\",\"code\":\"AGO\",\"id\":\"24\"},{\"name\":\"Albania\",\"code\":\"ALB\",\"id\":\"8\"},{\"name\":\"United Arab Emirates\",\"code\":\"ARE\",\"id\":\"784\"},{\"name\":\"Argentina\",\"code\":\"ARG\",\"id\":\"32\"},{\"name\":\"Armenia\",\"code\":\"ARM\",\"id\":\"51\"},{\"name\":\"Antarctica\",\"code\":\"ATA\",\"id\":\"10\"},{\"name\":\"France\",\"code\":\"ATF\",\"id\":\"260\"},{\"name\":\"Australia\",\"code\":\"AUS\",\"id\":\"36\"},{\"name\":\"Austria\",\"code\":\"AUT\",\"id\":\"40\"},{\"name\":\"Azerbaijan\",\"code\":\"AZE\",\"id\":\"31\"},{\"name\":\"Burundi\",\"code\":\"BDI\",\"id\":\"108\"},{\"name\":\"Belgium\",\"code\":\"BEL\",\"id\":\"56\"},{\"name\":\"Benin\",\"code\":\"BEN\",\"id\":\"204\"},{\"name\":\"Burkina Faso\",\"code\":\"BFA\",\"id\":\"854\"},{\"name\":\"Bangladesh\",\"code\":\"BGD\",\"id\":\"50\"},{\"name\":\"Bulgaria\",\"code\":\"BGR\",\"id\":\"100\"},{\"name\":\"The Bahamas\",\"code\":\"BHS\",\"id\":\"44\"},{\"name\":\"Bosnia and Herzegovina\",\"code\":\"BIH\",\"id\":\"70\"},{\"name\":\"Belarus\",\"code\":\"BLR\",\"id\":\"112\"},{\"name\":\"Belize\",\"code\":\"BLZ\",\"id\":\"84\"},{\"name\":\"Bolivia\",\"code\":\"BOL\",\"id\":\"68\"},{\"name\":\"Brazil\",\"code\":\"BRA\",\"id\":\"76\"},{\"name\":\"Brunei\",\"code\":\"BRN\",\"id\":\"96\"},{\"name\":\"Bhutan\",\"code\":\"BTN\",\"id\":\"64\"},{\"name\":\"Botswana\",\"code\":\"BWA\",\"id\":\"72\"},{\"name\":\"Central African Republic\",\"code\":\"CAF\",\"id\":\"140\"},{\"name\":\"Canada\",\"code\":\"CAN\",\"id\":\"124\"},{\"name\":\"Switzerland\",\"code\":\"CHE\",\"id\":\"756\"},{\"name\":\"Chile\",\"code\":\"CHL\",\"id\":\"152\"},{\"name\":\"China\",\"code\":\"CHN\",\"id\":\"156\"},{\"name\":\"Ivory Coast\",\"code\":\"CIV\",\"id\":\"384\"},{\"name\":\"Cameroon\",\"code\":\"CMR\",\"id\":\"120\"},{\"name\":\"Democratic Republic of the Congo\",\"code\":\"COD\",\"id\":\"180\"},{\"name\":\"Republic of Congo\",\"code\":\"COG\",\"id\":\"178\"},{\"name\":\"Colombia\",\"code\":\"COL\",\"id\":\"170\"},{\"name\":\"Costa Rica\",\"code\":\"CRI\",\"id\":\"188\"},{\"name\":\"Cuba\",\"code\":\"CUB\",\"id\":\"192\"},{\"name\":\"Cyprus\",\"code\":\"CYP\",\"id\":\"196\"},{\"name\":\"Czech Republic\",\"code\":\"CZE\",\"id\":\"203\"},{\"name\":\"Germany\",\"code\":\"DEU\",\"id\":\"276\"},{\"name\":\"Djibouti\",\"code\":\"DJI\",\"id\":\"262\"},{\"name\":\"Denmark\",\"code\":\"DNK\",\"id\":\"208\"},{\"name\":\"Dominican Republic\",\"code\":\"DOM\",\"id\":\"214\"},{\"name\":\"Algeria\",\"code\":\"DZA\",\"id\":\"12\"},{\"name\":\"Ecuador\",\"code\":\"ECU\",\"id\":\"218\"},{\"name\":\"Egypt\",\"code\":\"EGY\",\"id\":\"818\"},{\"name\":\"Eritrea\",\"code\":\"ERI\",\"id\":\"232\"},{\"name\":\"Western Sahara\",\"code\":\"ESH\",\"id\":\"732\"},{\"name\":\"Spain\",\"code\":\"ESP\",\"id\":\"724\"},{\"name\":\"Estonia\",\"code\":\"EST\",\"id\":\"233\"},{\"name\":\"Ethiopia\",\"code\":\"ETH\",\"id\":\"231\"},{\"name\":\"Finland\",\"code\":\"FIN\",\"id\":\"246\"},{\"name\":\"Fiji\",\"code\":\"FJI\",\"id\":\"242\"},{\"name\":\"United Kingdom\",\"code\":\"FLK\",\"id\":\"238\"},{\"name\":\"France\",\"code\":\"FRA\",\"id\":\"250\"},{\"name\":\"Gabon\",\"code\":\"GAB\",\"id\":\"266\"},{\"name\":\"United Kingdom\",\"code\":\"GBR\",\"id\":\"826\"},{\"name\":\"Georgia\",\"code\":\"GEO\",\"id\":\"268\"},{\"name\":\"Ghana\",\"code\":\"GHA\",\"id\":\"288\"},{\"name\":\"Guinea\",\"code\":\"GIN\",\"id\":\"324\"},{\"name\":\"Gambia\",\"code\":\"GMB\",\"id\":\"270\"},{\"name\":\"Guinea Bissau\",\"code\":\"GNB\",\"id\":\"624\"},{\"name\":\"Equatorial Guinea\",\"code\":\"GNQ\",\"id\":\"226\"},{\"name\":\"Greece\",\"code\":\"GRC\",\"id\":\"300\"},{\"name\":\"Denmark\",\"code\":\"GRL\",\"id\":\"304\"},{\"name\":\"Guatemala\",\"code\":\"GTM\",\"id\":\"320\"},{\"name\":\"Guyana\",\"code\":\"GUY\",\"id\":\"328\"},{\"name\":\"Honduras\",\"code\":\"HND\",\"id\":\"340\"},{\"name\":\"Croatia\",\"code\":\"HRV\",\"id\":\"191\"},{\"name\":\"Haiti\",\"code\":\"HTI\",\"id\":\"332\"},{\"name\":\"Hungary\",\"code\":\"HUN\",\"id\":\"348\"},{\"name\":\"Indonesia\",\"code\":\"IDN\",\"id\":\"360\"},{\"name\":\"India\",\"code\":\"IND\",\"id\":\"356\"},{\"name\":\"Ireland\",\"code\":\"IRL\",\"id\":\"372\"},{\"name\":\"Iran\",\"code\":\"IRN\",\"id\":\"364\"},{\"name\":\"Iraq\",\"code\":\"IRQ\",\"id\":\"368\"},{\"name\":\"Iceland\",\"code\":\"ISL\",\"id\":\"352\"},{\"name\":\"Israel\",\"code\":\"ISR\",\"id\":\"376\"},{\"name\":\"Italy\",\"code\":\"ITA\",\"id\":\"380\"},{\"name\":\"Jamaica\",\"code\":\"JAM\",\"id\":\"388\"},{\"name\":\"Jordan\",\"code\":\"JOR\",\"id\":\"400\"},{\"name\":\"Japan\",\"code\":\"JPN\",\"id\":\"392\"},{\"name\":\"Kazakhstan\",\"code\":\"KAZ\",\"id\":\"398\"},{\"name\":\"Kenya\",\"code\":\"KEN\",\"id\":\"404\"},{\"name\":\"Kyrgyzstan\",\"code\":\"KGZ\",\"id\":\"417\"},{\"name\":\"Cambodia\",\"code\":\"KHM\",\"id\":\"116\"},{\"name\":\"South Korea\",\"code\":\"KOR\",\"id\":\"410\"},{\"name\":\"Kuwait\",\"code\":\"KWT\",\"id\":\"414\"},{\"name\":\"Laos\",\"code\":\"LAO\",\"id\":\"418\"},{\"name\":\"Lebanon\",\"code\":\"LBN\",\"id\":\"422\"},{\"name\":\"Liberia\",\"code\":\"LBR\",\"id\":\"430\"},{\"name\":\"Libya\",\"code\":\"LBY\",\"id\":\"434\"},{\"name\":\"Sri Lanka\",\"code\":\"LKA\",\"id\":\"144\"},{\"name\":\"Lesotho\",\"code\":\"LSO\",\"id\":\"426\"},{\"name\":\"Lithuania\",\"code\":\"LTU\",\"id\":\"440\"},{\"name\":\"Luxembourg\",\"code\":\"LUX\",\"id\":\"442\"},{\"name\":\"Latvia\",\"code\":\"LVA\",\"id\":\"428\"},{\"name\":\"Morocco\",\"code\":\"MAR\",\"id\":\"504\"},{\"name\":\"Moldova\",\"code\":\"MDA\",\"id\":\"498\"},{\"name\":\"Madagascar\",\"code\":\"MDG\",\"id\":\"450\"},{\"name\":\"Mexico\",\"code\":\"MEX\",\"id\":\"484\"},{\"name\":\"Macedonia\",\"code\":\"MKD\",\"id\":\"807\"},{\"name\":\"Mali\",\"code\":\"MLI\",\"id\":\"466\"},{\"name\":\"Myanmar\",\"code\":\"MMR\",\"id\":\"104\"},{\"name\":\"Montenegro\",\"code\":\"MNE\",\"id\":\"499\"},{\"name\":\"Mongolia\",\"code\":\"MNG\",\"id\":\"496\"},{\"name\":\"Mozambique\",\"code\":\"MOZ\",\"id\":\"508\"},{\"name\":\"Mauritania\",\"code\":\"MRT\",\"id\":\"478\"},{\"name\":\"Malawi\",\"code\":\"MWI\",\"id\":\"454\"},{\"name\":\"Malaysia\",\"code\":\"MYS\",\"id\":\"458\"},{\"name\":\"Namibia\",\"code\":\"NAM\",\"id\":\"516\"},{\"name\":\"France\",\"code\":\"NCL\",\"id\":\"540\"},{\"name\":\"Niger\",\"code\":\"NER\",\"id\":\"562\"},{\"name\":\"Nigeria\",\"code\":\"NGA\",\"id\":\"566\"},{\"name\":\"Nicaragua\",\"code\":\"NIC\",\"id\":\"558\"},{\"name\":\"Netherlands\",\"code\":\"NLD\",\"id\":\"528\"},{\"name\":\"Norway\",\"code\":\"NOR\",\"id\":\"578\"},{\"name\":\"Nepal\",\"code\":\"NPL\",\"id\":\"524\"},{\"name\":\"New Zealand\",\"code\":\"NZL\",\"id\":\"554\"},{\"name\":\"Oman\",\"code\":\"OMN\",\"id\":\"512\"},{\"name\":\"Pakistan\",\"code\":\"PAK\",\"id\":\"586\"},{\"name\":\"Panama\",\"code\":\"PAN\",\"id\":\"591\"},{\"name\":\"Peru\",\"code\":\"PER\",\"id\":\"604\"},{\"name\":\"Philippines\",\"code\":\"PHL\",\"id\":\"608\"},{\"name\":\"Papua New Guinea\",\"code\":\"PNG\",\"id\":\"598\"},{\"name\":\"Poland\",\"code\":\"POL\",\"id\":\"616\"},{\"name\":\"United States of America\",\"code\":\"PRI\",\"id\":\"630\"},{\"name\":\"North Korea\",\"code\":\"PRK\",\"id\":\"408\"},{\"name\":\"Portugal\",\"code\":\"PRT\",\"id\":\"620\"},{\"name\":\"Paraguay\",\"code\":\"PRY\",\"id\":\"600\"},{\"name\":\"Israel\",\"code\":\"PSE\",\"id\":\"275\"},{\"name\":\"Qatar\",\"code\":\"QAT\",\"id\":\"634\"},{\"name\":\"Romania\",\"code\":\"ROU\",\"id\":\"642\"},{\"name\":\"Russia\",\"code\":\"RUS\",\"id\":\"643\"},{\"name\":\"Rwanda\",\"code\":\"RWA\",\"id\":\"646\"},{\"name\":\"Saudi Arabia\",\"code\":\"SAU\",\"id\":\"682\"},{\"name\":\"Sudan\",\"code\":\"SDN\",\"id\":\"729\"},{\"name\":\"Senegal\",\"code\":\"SEN\",\"id\":\"686\"},{\"name\":\"Solomon Islands\",\"code\":\"SLB\",\"id\":\"90\"},{\"name\":\"Sierra Leone\",\"code\":\"SLE\",\"id\":\"694\"},{\"name\":\"El Salvador\",\"code\":\"SLV\",\"id\":\"222\"},{\"name\":\"Somalia\",\"code\":\"SOM\",\"id\":\"706\"},{\"name\":\"Republic of Serbia\",\"code\":\"SRB\",\"id\":\"688\"},{\"name\":\"South Sudan\",\"code\":\"SSD\",\"id\":\"728\"},{\"name\":\"Suriname\",\"code\":\"SUR\",\"id\":\"740\"},{\"name\":\"Slovakia\",\"code\":\"SVK\",\"id\":\"703\"},{\"name\":\"Slovenia\",\"code\":\"SVN\",\"id\":\"705\"},{\"name\":\"Sweden\",\"code\":\"SWE\",\"id\":\"752\"},{\"name\":\"Swaziland\",\"code\":\"SWZ\",\"id\":\"748\"},{\"name\":\"Syria\",\"code\":\"SYR\",\"id\":\"760\"},{\"name\":\"Chad\",\"code\":\"TCD\",\"id\":\"148\"},{\"name\":\"Togo\",\"code\":\"TGO\",\"id\":\"768\"},{\"name\":\"Thailand\",\"code\":\"THA\",\"id\":\"764\"},{\"name\":\"Tajikistan\",\"code\":\"TJK\",\"id\":\"762\"},{\"name\":\"Turkmenistan\",\"code\":\"TKM\",\"id\":\"795\"},{\"name\":\"East Timor\",\"code\":\"TLS\",\"id\":\"626\"},{\"name\":\"Trinidad and Tobago\",\"code\":\"TTO\",\"id\":\"780\"},{\"name\":\"Tunisia\",\"code\":\"TUN\",\"id\":\"788\"},{\"name\":\"Turkey\",\"code\":\"TUR\",\"id\":\"792\"},{\"name\":\"Taiwan\",\"code\":\"TWN\",\"id\":\"158\"},{\"name\":\"United Republic of Tanzania\",\"code\":\"TZA\",\"id\":\"834\"},{\"name\":\"Uganda\",\"code\":\"UGA\",\"id\":\"800\"},{\"name\":\"Ukraine\",\"code\":\"UKR\",\"id\":\"804\"},{\"name\":\"Uruguay\",\"code\":\"URY\",\"id\":\"858\"},{\"name\":\"United States of America\",\"code\":\"USA\",\"id\":\"840\"},{\"name\":\"Uzbekistan\",\"code\":\"UZB\",\"id\":\"860\"},{\"name\":\"Venezuela\",\"code\":\"VEN\",\"id\":\"862\"},{\"name\":\"Vietnam\",\"code\":\"VNM\",\"id\":\"704\"},{\"name\":\"Vanuatu\",\"code\":\"VUT\",\"id\":\"548\"},{\"name\":\"Yemen\",\"code\":\"YEM\",\"id\":\"887\"},{\"name\":\"South Africa\",\"code\":\"ZAF\",\"id\":\"710\"},{\"name\":\"Zambia\",\"code\":\"ZMB\",\"id\":\"894\"},{\"name\":\"Zimbabwe\",\"code\":\"ZWE\",\"id\":\"716\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/assets/countries.json\n// module id = Z0dj\n// module chunks = 1","module.exports = \"<v-dialog v-model=\\\"dialog\\\" persistent max-width=\\\"600px\\\">\\n  <v-btn slot=\\\"activator\\\" color=\\\"primary\\\" dark>Open Dialog</v-btn>\\n  <v-card>\\n    <v-card-title>\\n      <span class=\\\"headline\\\">Server Settings</span>\\n    </v-card-title>\\n    <v-card-text>\\n      <v-container grid-list-md>\\n        <v-layout wrap>\\n          <v-alert :value=\\\"socketError\\\" color=\\\"error\\\">\\n            Cannot connect to server!\\n          </v-alert>\\n          <v-flex>\\n            <v-select\\n              :items=\\\"modes\\\"\\n              label=\\\"App Mode\\\"\\n              v-model=\\\"defaultMode\\\"\\n              box\\n            ></v-select>\\n          </v-flex>\\n          <v-flex xs12>\\n            <v-text-field box label=\\\"Server Address\\\"  v-model=\\\"server\\\" required></v-text-field>\\n          </v-flex>\\n        </v-layout>\\n      </v-container>\\n    </v-card-text>\\n    <v-card-actions>\\n      <v-spacer></v-spacer>\\n      <v-flex justify-center>\\n        <v-btn color=\\\"primary\\\" @click=\\\"$emit('connect')\\\">Start</v-btn>\\n      </v-flex>\\n    </v-card-actions>\\n  </v-card>\\n</v-dialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/WebSocket.html\n// module id = ZtXa\n// module chunks = 1","module.exports = \"<v-app>\\n    <Communication ref=\\\"container\\\" @updateMetrics=\\\"updateMetrics\\\"></Communication>\\n</v-app>\\n  \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/CommPanels.html\n// module id = cD/j\n// module chunks = 1","export default function Uniform(glContext, name, type, data) {\n\n    var uniform = (this instanceof Uniform) ? this : {},\n        ctx = glContext;\n\n    function serializeArray(arrayOfArray) {\n        var sa = [];\n        arrayOfArray.forEach(function(a){\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    function sanitize(data) {\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray.length > 0) {\n               return serializeArray(data);\n            } else {\n                return data;\n            }\n        } else {\n            return data\n        }\n    }\n\n    function setUniform() {\n        var type = this.type,\n            location = this.location,\n            size = this.size,\n            data = this.data;\n            \n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray)\n                data = serializeArray(data);\n        }\n\n        if((type == 'float' || type == 'int') && !Array.isArray(data) && !ArrayBuffer.isView(data))\n            data = [data];\n\n        var buf;\n        if (type.slice(0,3) == 'vec' || type == 'float') {\n            buf = new Float32Array(data);\n            ctx['uniform' + size + 'fv'](location, buf);\n        } else if(type.slice(0,4) == 'ivec' || type == 'int'){\n            buf = new Int32Array(data);\n            ctx['uniform' + size + 'iv'](location, buf);\n        } else if(type.slice(0,3) == 'mat') {\n            buf = new Float32Array(data);\n            ctx['uniformMatrix' + size + 'fv'](location, false, buf);\n        } else if(type == 'sampler2D') {\n            if(data.hasOwnProperty('resourceType') && data.resourceType == 'texture') {\n                ctx.activeTexture(ctx.TEXTURE0 + data.index);\n                ctx.bindTexture(ctx.TEXTURE_2D, data.ptr);\n                ctx.uniform1i(location, data.index);\n            }\n        }\n    }\n\n    uniform.create = function(name, type, data) {\n\n        if(Array.isArray(data)) {\n            var hasArray = data.filter(function(d){return Array.isArray(d);});\n            if(hasArray.length > 0) {\n                data = serializeArray(data);\n            }\n        }\n\n        uniform[name] = {\n            type: type,\n            name: name,\n            data: data,\n            location: null,\n            size: parseInt(type.slice(3,4)) || parseInt(type.slice(4,5)) || 1\n        };\n\n        uniform[name].link = function(program) {\n            if(typeof this.data !== 'undefined' && this.data !== null) {\n                this.location = ctx.getUniformLocation(program, this.name);\n                setUniform.call(this);\n            }\n            return this;\n        };\n\n        uniform[name].value = function(val) {\n           this.data = sanitize(val);\n        }\n\n        uniform[name].load = function(data) {\n            this.data = data;\n            return this;\n        };\n\n        uniform[name].header = function() {\n            var header = 'uniform ' + this.type + ' ' + this.name,\n                len = 0;\n            \n            if(this.type != 'sampler2D') {\n                len = this.data.length / this.size;\n            }\n\n            //TODO: fix declaration for matrix\n            if(len > 1 && type != 'mat4') {\n                header += '[' + len + ']';\n            }\n            return header + ';\\n';\n        };\n\n        return uniform[name];\n    }\n\n\n    return uniform;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/uniform.js\n// module id = null\n// module chunks = ","export default function Attribute(glContext) {\n    \n    var attribute = (this instanceof Attribute) ? this : {},\n        ctx = glContext,\n        attributeID = 0;\n\n    function setAttribute(name, data) {\n        if(Array.isArray(data) || ArrayBuffer.isView(data)){\n            if(!ArrayBuffer.isView(data)) data = new Float32Array(data);\n            attribute[name].data = data;\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, attribute[name].ptr);\n            ctx.bufferData(ctx.ARRAY_BUFFER, data, ctx.STATIC_DRAW);\n        }\n    }\n    attribute.create = function(name, type, data) {\n        attribute[name] = {\n            name: name,\n            type: type || 'float',\n            data: null,\n            location: attributeID++,\n            ptr: ctx.createBuffer(),\n            size: parseInt(type.slice(3,4)) || 1\n        };\n\n        if(data !== null && data.length) setAttribute(name, data);\n\n        attribute[name].link = function(program) {\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, this.ptr);\n            this.location = ctx.getAttribLocation(program, this.name);\n            ctx.vertexAttribPointer(this.location, this.size, ctx.FLOAT, false, 0, 0);\n            ctx.enableVertexAttribArray(this.location);\n            return this;\n        }\n\n        attribute[name].load = function(arrayBuffer) {\n            setAttribute(this.name, arrayBuffer);\n            return this;\n        }\n\n        attribute[name].header = function() {\n            return 'attribute ' + this.type + ' ' + this.name + ';\\n';\n        }\n\n        attribute[name].delete = function() {\n            ctx.deleteBuffer(this.ptr);\n        }\n\n        return attribute[name];\n    };\n\n    return attribute;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/attribute.js\n// module id = null\n// module chunks = ","import Uniform from \"./uniform\";\n\nexport default function Texture(glContext) {\n\n    var texture = (this instanceof Texture) ? this : {},\n        ctx = glContext,\n        textureID = 0;\n\n    function setTexture(name, texData) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = texture[name].dim[0],\n            height = texture[name].dim[1];\n\n        texture[name].data = texData;\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texImage2D(ctx.TEXTURE_2D, 0, format, width, height, 0, format, type, texData);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.NEAREST);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_S, ctx.CLAMP_TO_EDGE);\n        ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_WRAP_T, ctx.CLAMP_TO_EDGE);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    function updateTexture(name, texData, offset = [0, 0], dim = [texture[name].dim[0], texture[name].dim[1]] ) {\n        var type = ctx[texture[name].type.toUpperCase()],\n            format = ctx[texture[name].channel.toUpperCase()],\n            width = dim[0],\n            height = dim[1];\n\n        ctx.bindTexture(ctx.TEXTURE_2D, texture[name].ptr);\n        ctx.texSubImage2D(ctx.TEXTURE_2D, 0, offset[0], offset[1], width, height, format, type, texData);\n        ctx.bindTexture(ctx.TEXTURE_2D, null);\n    }\n\n    // TODO: Add support for texture compression\n    // function compressTexture(texData) {\n    //\n    //     var ext = (\n    //       ctx.getExtension(\"WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") ||\n    //       ctx.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\")\n    //     );\n    //\n    //     ctx.compressedTexImage2D(ctx.TEXTURE_2D, 0, ext.COMPRESSED_RGBA_S3TC_DXT3_EXT, texture[name].dim[0], texture[name].dim[1], 0, texData);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MAG_FILTER, ctx.LINEAR);\n    //     ctx.texParameteri(ctx.TEXTURE_2D, ctx.TEXTURE_MIN_FILTER, ctx.LINEAR);\n    // }\n\n    texture.create = function(name, type, dim, channel, data, sampler) {\n        var texIndex = (texture.hasOwnProperty(name)) ? texture[name].index : textureID++;\n        texture[name] = {\n            name: name,\n            index: texIndex,\n            type: type || \"float\",\n            dim: dim || [512, 512],\n            channel: channel || \"alpha\",\n            data: null,\n            location: null,\n            sampler: sampler || null,\n            ptr: ctx.createTexture()\n        };\n\n        // if(data !== null && data.length)\n        setTexture(name, data);\n\n        if (texture[name].sampler === null) {\n            texture[name].sampler = Uniform(ctx).create(name, 'sampler2D', texture[name]);\n        } else {\n            texture[name].sampler.data = texture[name];\n        }\n\n        texture[name].link = function(program) {\n            if (this.data !== null) {\n                // ctx.activeTexture(ctx.TEXTURE0 + this.index);\n                // ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n                // this.location = ctx.getUniformLocation(program, this.name);\n                // ctx.uniform1i(this.location, this.index);\n                if (typeof(this.sampler.data) == 'undefined' || this.sampler.data === null)\n                    this.sampler.data = texture[name];\n\n                this.sampler.link(program);\n            }\n            return this;\n        }\n\n        texture[name].load = function(texData) {\n            setTexture(this.name, texData);\n            return this;\n        }\n\n        texture[name].copyFromFBO = function() {\n            ctx.bindTexture(ctx.TEXTURE_2D, this.ptr);\n            ctx.copyTexImage2D(\n                ctx.TEXTURE_2D,\n                0,\n                ctx.RGBA,\n                0,\n                0,\n                this.dim[0],\n                this.dim[1],\n                0\n            );\n            ctx.bindTexture(ctx.TEXTURE_2D, null);\n        }\n\n        texture[name].update = function(texData, offset, dim) {\n            updateTexture(this.name, texData, offset, dim);\n            return this;\n        }\n\n        texture[name].resize = function(dim, data) {\n            this.dim = dim;\n            setTexture(this.name, data);\n        }\n\n        texture[name].delete = function() {\n            glContext.deleteTexture(this.ptr);\n        }\n\n        texture[name].header = function() {\n            if (this.name == this.sampler.name)\n                return 'uniform sampler2D ' + this.sampler.name + ';\\n';\n            else\n                return '';\n        }\n\n        return texture[name];\n    }\n\n    return texture;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/texture.js\n// module id = null\n// module chunks = ","export default function Varying(glContext) {\n\n    var varying = (this instanceof Varying) ? this : {},\n        ctx = glContext;\n\n    varying.create = function(name, type, size) {\n        varying[name] = {\n            name: name,\n            type: type || 'float',\n            size: size || 1,\n        };\n\n        varying[name].link = function() {};\n\n        varying[name].header = function() {\n            var header = 'varying ' + this.type + ' ' + this.name;\n            if(this.size > 1)\n                header += '[' + this.size + ']';\n            return header + ';\\n';\n        }\n\n        return varying[name];\n    }\n\n    return varying;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/varying.js\n// module id = null\n// module chunks = ","export default function Subroutine() {\n\n    var subroutine = (this instanceof Subroutine) ? this : {};\n\n    subroutine.create = function(name, type, fn) {\n        subroutine[name] = {\n            name: name,\n            type: type || 'float',\n            fn: fn,\n            resourceType: \"subroutine\"\n        };\n\n        subroutine[name].link = function(program) {\n            return this;\n        }\n\n        subroutine[name].load = function(fn) {\n            subroutine[name].fn = fn;\n            return this;\n        }\n\n        subroutine[name].header = function() {\n            return this.fn.toString();\n        }\n\n        return subroutine[name];\n    };\n\n    return subroutine;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/subroutine.js\n// module id = null\n// module chunks = ","import Uniform from './uniform';\nimport Attribute from './attribute';\nimport Texture from './texture';\nimport Varying from './varying';\nimport Subroutine from './subroutine';\n\nexport default function Resource(glContext) {\n    var resource = (this instanceof Resource) ? this : {},\n        gpuResources = {};\n\n    resource.uniform = new Uniform(glContext);\n    resource.attribute = new Attribute(glContext);\n    resource.texture = new Texture(glContext);\n    resource.varying = new Varying(glContext);\n    resource.subroutine = new Subroutine();\n\n    var resourceTypes = ['uniform', 'attribute', 'texture', 'varying', 'subroutine'];\n\n    resource.allocate = function(type, props) {\n        if (resourceTypes.indexOf(type) === -1) {\n            throw Error(\"Error: Invalid resource type: \" + type);\n        }\n        var res = resource[type].create.apply(null, Array.prototype.slice.call(arguments, 1));\n        res.resourceType = type;\n        gpuResources[res.name] = res;\n        if (!gpuResources.hasOwnProperty(res.name)) {\n            Object.defineProperty(gpuResources, res.name, {\n                get: function() {\n                    return gpuResources[res.name];\n                },\n                set: function(data) {\n                    gpuResources[res.name].load(data);\n                }\n            });\n        }\n        return res;\n    };\n\n    resource.link = function(program, resources) {\n        var requiredResources = (Array.isArray(resources)) ? resources : Object.keys(gpuResources);\n        requiredResources.forEach(function(resourceName) {\n            if (gpuResources.hasOwnProperty(resourceName))\n                gpuResources[resourceName].link(program);\n        })\n    };\n\n    resource.get = function(name) {\n        return gpuResources[name];\n    }\n\n    resource.create = resource.allocate;\n\n    return resource;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/resource.js\n// module id = null\n// module chunks = ","export default function Shader(glContext, glResource) {\n    \n    var shader = (this instanceof Shader) ? this : {},\n        ctx = glContext,\n        resource = glResource,\n        parameters = ctx._dict || {};\n\n    shader.vertex = {};\n    shader.fragment = {};\n\n    var shaderType = {\n        vertex: ctx.VERTEX_SHADER,\n        fragment: ctx.FRAGMENT_SHADER\n    };\n\n    // Convert JS functions to GLSL codes\n    function toGLSL(returnType, name, fn){\n\n        var glsl = returnType + ' ' +\n            name + '(' + applyEnvParameters(fn.toString())\n            .replace(\n                /var\\s+([\\w|\\d]+)\\s*=\\s*new\\s+([\\w|\\d]+)\\((.*)\\)/g,\n                function(expr, name, dtype, value){\n                    var parts;\n                    if(value)\n                        parts = [dtype.toLowerCase(), name, '=', value];\n                    else\n                        parts = [dtype.toLowerCase(), name];\n\n                    return parts.join(' ')\n                }\n            )\n            .replace(/for\\s*\\(\\s*var\\s+/g, 'for(int ')\n            .replace(/(var|let)\\s/g, 'float ')\n            // .replace(/(\\.0)([^\\d])/g, '$10000000001 $2 ')\n            .replace(/this./g, '')\n            .replace(/\\$(.*)\\((.*)\\)\\s*(=|;)/g, \"$1 $2 $3\");\n            // .replace(/\\$(.*?)\\./g, \"$1 \")\n\n        if(name == \"main\") {\n            glsl = glsl.replace(/\\(.*(function|\\w).*\\(\\s*([\\s\\S]*?)\\s*{/, '(){') + \"\\n\";\n        } else {\n            var args = glsl.match(/function|\\w.*\\(\\s*([\\s\\S]*?)\\s*\\)/)[1];\n            var isObject = args.match(/{([\\s\\S]*)}/);\n            if(isObject) {\n                args = isObject[1].split(',')\n                    .map(d=>d.split('='))\n                    .map(d=> d[1].replace(/(\\'|\\\")/g, '') + ' ' + d[0])\n                    .join(', ')\n            } else if(args != \"\") {\n                args = args.replace(/\\$([\\w|\\d]+)_/g, \"$1 \");\n            }\n           \n            glsl = glsl.replace(/\\(.*(function|\\w).*\\(\\s*([\\s\\S]*?)\\s*\\)/, '(' + args+')') + \"\\n\";\n        }\n        return glsl;\n    }\n\n    //set parameters in JS functions before converting to GLSL codes\n    function applyEnvParameters(str){\n        //find all $(...) and replace them with parameters\n        var envParam = Object.keys(parameters);\n        if(envParam.length > 0){\n            var re = new RegExp(\"\\\\$\\\\((\"+envParam.join(\"|\")+\")\\\\)\",\"g\");\n            str = str.replace(re, function(matched){\n                return parameters[matched.slice(2,matched.length-1)];\n            });\n        }\n\n        // Make uniforms to be used as parameters in shaders, like $(uniformName)\n        // var envUniforms = Object.keys(resource.uniform);\n        // re = new RegExp(\"\\\\$\\\\((\"+envUniforms.join(\"|\")+\")\\\\)\",\"g\");\n        // str = str.replace(re, function(matched){\n        //     return resource.uniform[matched.slice(2,matched.length-1)].data;\n        // });\n\n        return str;\n    }\n\n    function compile(shaderType, shaderSource) {\n        if (shaderType !== ctx.VERTEX_SHADER && shaderType !== ctx.FRAGMENT_SHADER) {\n            throw (\"Error: unknown shader type\");\n        }\n        var _shader = ctx.createShader(shaderType);\n        ctx.shaderSource(_shader, shaderSource);\n        ctx.compileShader(_shader);\n\n        // Check the compile status, get compile error if any\n        var compiled = ctx.getShaderParameter(_shader, ctx.COMPILE_STATUS);\n        if (!compiled) {\n            var lastError = ctx.getShaderInfoLog(_shader);\n            console.log(shaderSource + '\\n ====================================================');\n            throw new Error(\"Error compiling shader '\" + _shader + \"':\" + lastError);\n\n            ctx.deleteShader(_shader);\n            return null;\n        }\n\n        return _shader;\n    }\n\n    function getDeps(fn) {\n        var deps = [],\n            sourceCode = fn.toString(),\n            shaderArgs = sourceCode.match(/function\\s.*?\\(([^)]*)\\)/),\n            args = (shaderArgs !== null && shaderArgs.length) ? shaderArgs[1] : [];\n        // args = args.replace(/(?:\\r\\n|\\r|\\n|\\s)/g, '');\n        //\n        if(args.length) {\n            deps = args.split(',').map(function(arg) {\n                return arg.replace(/\\/\\*.*\\*\\//, '').trim();\n            }).filter(function(arg) {\n                return arg;\n            });\n        }\n\n        var extraDeps = getExtraDeps(sourceCode);\n        if(extraDeps.length) {\n            deps = deps.concat(extraDeps\n            .filter(function(d){\n                return deps.indexOf(d) === -1;\n            }))\n        }\n\n        return deps;\n    }\n\n    function getExtraDeps(fnString) {\n        var extraDeps = fnString.match(/this\\.(\\w+)/g);\n        if(extraDeps !== null) {\n            extraDeps = extraDeps.map(function(d){\n                return d.slice(5);\n            });\n        }\n        if(extraDeps != null && extraDeps.length) {\n            extraDeps.forEach(function(sdep){\n                var sres = resource.get(sdep);\n                if(sres && sres.resourceType == 'subroutine') {\n                    extraDeps = extraDeps.concat(getExtraDeps(sres.fn.toString()));\n                }\n            });\n        }\n        return extraDeps || [];\n    }\n\n    function declareDep(dep) {\n        var res = resource.get(dep);\n        if(typeof res === 'undefined')\n            throw new Error('Resource/dependence \"' + dep + '\" is not found.');\n        if(res.resourceType == 'subroutine')\n            return toGLSL(res.type, res.name, res.fn);\n        else\n            return res.header();\n    }\n\n    function uniqueDeps(deps) {\n        var names = {};\n        deps.forEach(function(d, i){\n            names[d] = i;\n        });\n\n        return Object.keys(names);\n    }\n\n    shader.create = function(arg, fn){\n        var option = arg || {},\n            name = option.name || \"default\",\n            type = option.type || \"vertex\",\n            deps = option.require || option.deps || [],\n            precision = option.precision || \"high\",\n            debug = option.debug || false,\n            main = option.main || fn || function() {};\n\n        var shaderSource = 'precision ' + precision + 'p float;\\n';\n\n        if(deps.length === 0) deps = uniqueDeps(getDeps(main));\n\n        //get dependence from subroutines if any\n        var extraDeps = [];\n\n        deps.forEach(function(dep){\n            var res = resource.get(dep);\n            if(typeof res == 'undefined') {\n                console.log(dep);\n                throw Error ('Error! Undefined variable in shader: '+  dep.name);\n            }\n            if(res.resourceType == 'subroutine') {\n                // subRoutines.push(res.name);\n                extraDeps  = getExtraDeps(res.fn.toString());\n                \n            }   \n        })\n\n        if(extraDeps.length) {\n            var allDeps = extraDeps.concat(deps);\n            deps = uniqueDeps(allDeps);\n        }\n\n        if(Array.isArray(deps)){\n            deps.filter(function(d){\n                return ctx.subroutineNames.indexOf(d) === -1;\n            })\n            .forEach(function(dep){\n                shaderSource += declareDep(dep);\n            });\n            var t = deps.filter(function(d){\n                return ctx.subroutineNames.indexOf(d) !== -1;\n            })\n            .reverse()\n            .forEach(function(dep){\n                shaderSource += declareDep(dep);\n            });\n\n\n\n        } else if(typeof(deps) == 'object') {\n            console.log(deps)\n            Object.keys(deps).forEach(function(resourceType){\n                deps[resourceType].forEach(function(dep){\n                    shaderSource += declareDep(dep);\n                });\n            })\n        }\n\n        shaderSource += toGLSL('void', 'main', main);\n        if(debug)\n            console.log(shaderSource);\n        var _shader = compile(shaderType[type], shaderSource);\n        _shader._shaderType = shaderType[type];\n        _shader.deps = deps;\n        _shader.source = shaderSource;\n        shader[type][name] = _shader;\n        return _shader;\n    }\n\n    return shader;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/shader.js\n// module id = null\n// module chunks = ","import Shader from './shader';\n\nexport default function Program(glContext, resources) {\n\n    var program,\n        ctx = glContext,\n        pm = {},\n        kernels = {},\n        shaders = new Shader(glContext, resources);\n\n    pm.create = function(name, vs, fs) {\n        var name = name || \"default\",\n            vs = vs || \"default\",\n            fs = fs || \"default\",\n            deps = [];\n\n        if (kernels.hasOwnProperty(name)) {\n            pm.delete(name);\n        }\n\n        kernels[name] = ctx.createProgram();\n\n        kernels[name].vs = (typeof vs == \"object\") ? vs : shaders.vertex[vs];\n        kernels[name].fs = (typeof fs == \"object\") ? fs : shaders.fragment[fs];\n\n        ctx.attachShader(kernels[name], kernels[name].vs);\n        ctx.attachShader(kernels[name], kernels[name].fs);\n        ctx.linkProgram(kernels[name]);\n        var linked = ctx.getProgramParameter(kernels[name], ctx.LINK_STATUS);\n        if (!linked) {\n            var lastError = ctx.getProgramInfoLog(kernels[name]);\n            throw (\"Error in program linking:\" + lastError);\n            ctx.deleteProgram(kernels[name]);\n            return null;\n        }\n\n        deps = deps.concat(kernels[name].vs.deps);\n        deps = deps.concat(kernels[name].fs.deps);\n        kernels[name].deps = deps;\n\n        return kernels[name];\n    }\n\n    pm.use = pm.program = function(name, vs, fs) {\n        if (kernels.hasOwnProperty(name)) {\n            program = kernels[name];\n            ctx.useProgram(program);\n            resources.link(program, program.deps);\n            return program;\n        } else {\n            return pm.create(name, vs, fs);\n        }\n    }\n\n    pm.delete = function(name) {\n        if (kernels.hasOwnProperty(name)) {\n            ctx.detachShader(kernels[name], kernels[name].vs);\n            ctx.detachShader(kernels[name], kernels[name].fs);\n            ctx.deleteProgram(kernels[name]);\n            delete kernels[name];\n        }\n    }\n\n    pm.shader = function(arg, fn) {\n        var options = arg;\n        shaders.create(options, fn);\n        return pm;\n    }\n\n    pm.shader.vertex = function(fn) {\n        var options = {\n            type: \"vertex\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    pm.shader.fragment = function(fn) {\n        var options = {\n            type: \"fragment\"\n        };\n        if (fn.name) options.name = fn.name;\n        return shaders.create(options, fn);\n    }\n\n    return pm;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/program.js\n// module id = null\n// module chunks = ","import Texture from './texture';\n\nexport default function Framebuffer(glContext) {\n\n    var framebuffer = (this instanceof Framebuffer) ? this : {},\n        ctx = glContext;\n\n    framebuffer.create = function(name, type, dim, texture) {\n\n        framebuffer[name] = {\n            ptr: ctx.createFramebuffer(),\n            name: name,\n            type: type || \"float\",\n            width: dim[0] || 1024,\n            height: dim[1] || 1024,\n            texture: texture || null,\n            renderbuffer: ctx.createRenderbuffer(),\n        }\n\n        if (framebuffer[name].texture === null) {\n            var buf = (type == 'float') ?\n                new Float32Array(dim[0] * dim[1] * 4) :\n                new Uint8Array(dim[0] * dim[1] * 4);\n            framebuffer[name].texture = Texture(ctx).create(name, type, dim, \"rgba\", buf);\n        }\n\n        var renderbuffer = framebuffer[name].renderbuffer;\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffer[name].ptr);\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, renderbuffer);\n        ctx.renderbufferStorage(\n            ctx.RENDERBUFFER,\n            ctx.DEPTH_COMPONENT16,\n            framebuffer[name].width,\n            framebuffer[name].height\n        );\n        ctx.framebufferTexture2D(\n            ctx.FRAMEBUFFER,\n            ctx.COLOR_ATTACHMENT0,\n            ctx.TEXTURE_2D,\n            framebuffer[name].texture.ptr,\n            0\n        );\n        ctx.framebufferRenderbuffer(\n            ctx.FRAMEBUFFER,\n            ctx.DEPTH_ATTACHMENT,\n            ctx.RENDERBUFFER,\n            renderbuffer\n        );\n        ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\n        ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n\n        framebuffer[name].enableRead = function(program) {\n            ctx.activeTexture(ctx.TEXTURE0 + this.texture.index);\n            ctx.bindTexture(ctx.TEXTURE_2D, this.texture.ptr);\n            this.texture.location = ctx.getUniformLocation(program, this.texture.name);\n            ctx.uniform1i(this.texture.location, this.texture.index);\n        };\n\n        framebuffer[name].delete = function() {\n            ctx.bindRenderbuffer(gl.RENDERBUFFER, null);\n            ctx.bindFramebuffer(gl.FRAMEBUFFER, null);\n            ctx.deleteRenderbuffer(this.renderbuffer);\n            ctx.deleteTexture(this.texture.ptr)\n            ctx.deleteFramebuffer(this.ptr);\n        };\n\n        return framebuffer[name];\n    }\n\n    return framebuffer;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/framebuffer.js\n// module id = null\n// module chunks = ","import Resource from './resource';\nimport ProgramManager from './program';\nimport Shader from './shader';\nimport Framebuffer from './framebuffer';\n\nexport default function FlexGL(arg) {\n\n    var flexgl = (this instanceof FlexGL) ? this : {},\n        options = arg || {},\n        container = options.container || null,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        viewport = options.viewport || [0, 0],\n        width = options.width || viewport[0] || null,\n        height = options.height || viewport[1] || null,\n        padding = options.padding || {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        },\n        ctx = options.context || options.ctx || null,\n        kernels = {},\n        program = null,\n        glAttr = options.attributes || {},\n        sharedFunction = options.sharedFunction || {};\n\n    \n    if (typeof(canvas) == \"string\") {\n        if (canvas[0] == \"#\") canvas = document.getElementById(cavnas.substring(1));\n        else canvas = document.getElementById(cavnas);\n    }\n    if (container) {\n        container = (typeof(container) == \"string\") ? document.getElementById(container) : container;\n        if (width === null) width = container.clientWidth;\n        if (height === null) height = container.clientHeight;\n    }\n    // width -= padding.left + padding.right;\n    // height -= padding.top + padding.bottom;\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.position = \"absolute\";\n    canvas.style.marginLeft = padding.left + \"px\";\n    canvas.style.marginTop = padding.top + \"px\";\n\n    if (ctx === null)\n        ctx = setupWebGL(canvas);\n    flexgl.ctx = ctx;\n    flexgl.canvas = canvas;\n\n    ctx._dict = options.env || options.dict || options.dictionary || {};\n    ctx.subroutineNames = []; // save all subroutines' names \n\n    var resources = new Resource(ctx),\n        framebuffers = new Framebuffer(ctx),\n        programManager = new ProgramManager(ctx, resources),\n        shaders = new Shader(ctx, resources);\n\n    var blendExt = ctx.getExtension(\"EXT_blend_minmax\");\n    if (blendExt) {\n        ctx.MAX_EXT = blendExt.MAX_EXT;\n        ctx.MIN_EXT = blendExt.MIN_EXT;\n    }\n\n    ctx.ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n    enableExtension([\n        \"OES_texture_float\",\n        \"OES_texture_float_linear\",\n        // \"OES_texture_half_float\",\n        // \"OES_texture_half_float_linear\"\n    ]);\n\n    if (container)\n        container.appendChild(canvas);\n\n    function setupWebGL(canvas) {\n        var names = [\"webgl\", \"experimental-webgl\"];\n        var gl = null;\n        for (var i = 0; i < names.length; ++i) {\n            try {\n                gl = canvas.getContext(names[i], glAttr);\n            } catch (e) {}\n            if (gl) break;\n        }\n        return gl;\n    }\n\n    function enableExtension(extensions) {\n        if (!Array.isArray(extensions)) extensions = [extensions];\n        extensions.forEach(function(extension) {\n            var extProps = ctx.getExtension(extension);\n            if (extProps !== null) {\n                Object.keys(extProps).forEach(function(ep) {\n                    if (!ext.hasOwnProperty(ep)) {\n                        ctx.ext[ep] = extProps[ep];\n                    }\n                })\n            }\n        });\n    };\n\n    flexgl.enableExtension = enableExtension;\n\n    /**\n     * Allocate Attributes in vertex buffer array stored in GPU memory\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.attribute = function(name, type, data) {\n        resources.allocate(\"attribute\", name, type, data);\n        Object.defineProperty(flexgl.attribute, name, {\n            get: function() {\n                return resources.attribute[name];\n            },\n            set: function(data) {\n                resources.attribute[name].load(data);\n            }\n        });\n        return flexgl;\n    };\n    flexgl.buffer = flexgl.attribute; //alias\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type uniform variable type: float, vec2, ...\n     * @param  {Array} data data values\n     * @return {Object}      FLexGL object\n     */\n    flexgl.uniform = function(name, type, data) {\n        resources.allocate(\"uniform\", name, type, data);\n        if (!flexgl.uniform.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.uniform, name, {\n                get: function() {\n                    return resources.uniform[name];\n                },\n                set: function(data) {\n                    resources.uniform[name].load(data);\n                    if (ctx.isProgram(program))\n                        resources.uniform[name].link(program);\n                }\n            });\n        }\n        return flexgl;\n    };\n\n    flexgl.uniform.serialize = function(aoa) {\n        var sa = [];\n        aoa.forEach(function(a) {\n            sa = sa.concat(a);\n        })\n        return sa;\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type texture type: unsigned_byte or float, ...\n     * @param  {Array} data data values\n     * @param  {Array} dim [width, height]\n     * @param  {String} [channel='alpha'] WebGL formats (rgba, alpha)\n     * @param  {Object} [sampler=null] FLexGL Uniform Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.texture = function(name, type, data, dim, channel, sampler) {\n        resources.allocate(\"texture\", name, type, dim, channel, data, sampler);\n        Object.defineProperty(flexgl.texture, name, {\n            get: function() {\n                return resources.texture[name];\n            },\n            set: function(data) {\n                resources.texture[name].load(data);\n            }\n        });\n        return flexgl;\n    }\n\n    flexgl.texture.update = function(name, data, offset, dim) {\n        resources.texture[name].update(data, offset, dim);\n    }\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} [type] Varying variable type: float, vec2, ...\n     * @param  {Number} [size=1] data array\n     * @return {Object}      FLexGL object\n     */\n    flexgl.varying = function(name, type, size) {\n        resources.allocate(\"varying\", name, type, size);\n        return flexgl;\n    };\n\n    /**\n     * Create a Uniform variable for WebGL shader programs\n     * @param  {String} name attribute name\n     * @param  {String} type attribute type: float, vec2, ...\n     * @param  {Array} dim [width, height]\n     * @param  {Object} [texture=null] FLexGL Texture Object\n     * @return {Object}      FLexGL object\n     */\n    flexgl.framebuffer = function(name, type, dim, texture) {\n        var texture = texture || resources.allocate('texture', name, type, dim, 'rgba', null);\n\n        framebuffers.create(name, type, dim, texture);\n        if (!flexgl.framebuffer.hasOwnProperty(name)) {\n            Object.defineProperty(flexgl.framebuffer, name, {\n                get: function() {\n                    return framebuffers[name];\n                }\n            });\n        }\n        return flexgl;\n    }\n\n    flexgl.framebuffer.enableRead = function(name) {\n        framebuffers[name].enableRead(program);\n    }\n\n    flexgl.bindFramebuffer = function(fbName) {\n        if (framebuffers.hasOwnProperty(fbName)) {\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, framebuffers[fbName].ptr);\n        } else {\n            ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\n        }\n    }\n\n    flexgl.subroutine = function(name, type, fn) {\n        ctx.subroutineNames.push(name);\n        resources.allocate(\"subroutine\", name, type, fn);\n        return flexgl;\n    }\n\n    flexgl.parameter = function(keyValuePairs) {\n        Object.keys(keyValuePairs).forEach(function(key) {\n            ctx._dict[key] = keyValuePairs[key];\n            if (Array.isArray(ctx._dict[key])) {\n                var i = 0;\n                Object.defineProperty(ctx._dict, key, {\n                    get: function() {\n                        return keyValuePairs[key][i++];\n                    },\n                    set: function(newArray) {\n                        i = 0;\n                        ctx._dict[key] = newArray;\n                    }\n                });\n            } else if(typeof(ctx._dict[key]) == 'object') {\n                var dictKeys = Object.keys(ctx._dict[key]);\n                fxgl.uniform('dict'+key, 'float', dictKeys.map(d=>ctx._dict[key][d]));\n            }\n        })\n        return flexgl;\n    }\n\n    flexgl.dictionary = flexgl.parameter;\n\n    flexgl.shader = programManager.shader;\n\n    flexgl.program = function(name, vs, fs) {\n        program = programManager.program(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.createProgram = function(name, vs, fs) {\n        program = programManager.create(name, vs, fs);\n        return ctx;\n    }\n\n    flexgl.app = function(name, props) {\n        var vs = flexgl.shader.vertex(props.vs),\n            fs = flexgl.shader.fragment(props.fs),\n            fb = props.framebuffer || null;\n\n        flexgl.program(name, vs, fs);\n\n        var draw = props.render || props.draw;\n\n        return function(args) {\n            var gl = flexgl.program(name);\n            return draw.call(gl, args);\n        }\n    }\n\n    flexgl.dimension = function() {\n        return [canvas.width, canvas.height];\n    }\n\n    flexgl.resources = resources;\n\n    return flexgl;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/src/main.js\n// module id = null\n// module chunks = ","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/material-design-icons-iconfont/dist/material-design-icons.css\n// module id = gJtD\n// module chunks = 1","const int      = Int32Array;\nconst short    = Int16Array;\nconst float    = Float32Array;\nconst double   = Float64Array;\nconst string   = Uint16Array;\nconst time     = Float32Array;\nconst datetime = Float32Array;\nconst temporal = Float32Array;\nconst integer  = Int32Array;\nconst numeric  = Float32Array;\nconst nominal  = Uint16Array;\n\nexport {\n    int,\n    short,\n    float,\n    double,\n    string,\n    time,\n    datetime,\n    temporal,\n    integer,\n    numeric,\n    nominal\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/ctypes.js\n// module id = h6yt\n// module chunks = 1","\nimport {assert} from 'chai';\nimport {normal} from 'jStat';\nimport cstore from '../src/cstore'\nimport * as ctypes from '../src/ctypes'\n\nlet equal = assert.equal;\nlet closeTo = assert.closeTo;\nlet hasAllKeys = assert.hasAllKeys;\nlet normalDist = normal.sample;\n\nexport function boundedRandom(p) {\n    let min = p.min || 0;\n    let max = p.max || p.values.length || 1;\n    let value = min - 1;\n    let rand = (p.dist == 'normal') \n        ? function() { return normalDist(p.mean, p.std); }\n        : function() { return min + (max - min) * Math.random(); }\n    while ( value < min || value > max) {\n        // value = normalDist(p.mean, p.std);\n        value = rand(p);\n    }\n    if(p.hasOwnProperty('values')){\n        value = parseInt(value) ;\n    }\n    return value;\n}\n\nexport function randomColumns(arg) {\n    let options = arg || {};\n    let size = options.size || 0;\n    let props = options.props || [];\n    let db = cstore({});\n    props.forEach(function(prop) {\n        let dtype = p6.ctypes[prop.dtype] || Uint16Array;\n        let tuples = new dtype(size);\n        for(let i = 0; i < size; i++) {\n            tuples[i] = boundedRandom(prop);\n        }\n        db.addColumn({\n            data: tuples,\n            name: prop.name,\n            dtype: prop.dtype || 'string',\n            values: prop.values\n        });\n    })\n    return db;\n}\n\nexport function randomJSONs(arg) {\n    let options = arg || {};\n    let size = options.size || 0;\n    let props = options.props || [];\n    let data = new Array(size);\n    for(let i = 0; i < size; i++) {\n        data[i] = {};\n        props.forEach(function(prop) {\n            if(prop.hasOwnProperty('values')){\n                let vid = parseInt( Math.round( Math.random() * (prop.values.length - 1) ) );\n                data[i][prop.name] = prop.values[vid];\n            } else {\n                let value = boundedRandom(prop);\n                data[i][prop.name] = (prop.dtype == 'float') ? parseFloat(value) : Math.round(value);\n            }\n        });\n    }\n    return data;\n}\n\nexport function randomArrays(arg) {\n    let options = arg || {};\n    let size = options.size || 0;\n    let props = options.props || [];\n    let data = new Array(size);\n    for(let i = 0; i < size; i++) {\n        data[i] = [];\n        props.forEach(function(prop, pi) {\n            if(prop.hasOwnProperty('values')){\n                let vid = parseInt( Math.round( Math.random() * (prop.values.length - 1) ) );\n                data[i][pi] = prop.values[vid];\n            } else {\n                let value = boundedRandom(prop);\n                data[i][pi] = (prop.dtype == 'float') ? parseFloat(value) : Math.round(value);\n            }\n        });\n    }\n    return data;\n}\n\nexport function randomTypedColumns(arg) {\n    let options = arg || {};\n    let size = options.size || 0;\n    let props = options.props || [];\n    let data = new Array(props.length);\n\n    props.forEach(function(prop, pi) {\n        let column = new ctypes[prop.dtype](size);\n        for(let i = 0; i < size; i++) {\n            if(prop.hasOwnProperty('values')){\n                let vid = parseInt( Math.round( Math.random() * (prop.values.length - 1) ) );\n                column[i] = prop.values[vid];\n            } else {\n                let value = boundedRandom(prop);\n                column[i] = (prop.dtype == 'float') ? parseFloat(value) : Math.round(value);\n            }\n        }\n        data[pi] = column;\n    });\n\n    return data;\n}\n\nexport function validate(actual, expected, _delta) {\n    let delta = _delta || 1e-5;\n    let count = actual.length; \n\n    equal(count, actual.length, 'the size of the result should be ' + count);\n\n    for(let i = 0; i < count; i++) {\n        let keys = Object.keys(actual[i]);\n        hasAllKeys(expected[i], keys, 'result should have all the keys');\n        \n        for(let j = 0, l = keys.length; j < l; j++) {\n            if(typeof(actual[i][keys[j]]) == 'number') {\n                closeTo(actual[i][keys[j]], expected[i][keys[j]], expected[i][keys[j]]*delta);\n            } else {\n                equal(actual[i][keys[j]], expected[i][keys[j]]);\n            }\n        }\n    }\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/test/utils.js\n// module id = hxZH\n// module chunks = 1","module.exports = function toArray(data, arg){\n    var options = arg || {},\n        fields = options.fields || Object.keys(data[0]) || [],\n        format = options.format || 'row';\n\n    if(format == 'row') {\n        return data.map(function(d){\n            var row = new Array(fields.length);\n            fields.forEach(function(f, i){\n                row[i] = d[f];\n            });\n            return row;\n        });\n    } else {\n        return fields.map(function(f){\n            return data.map(function(d){ return d[f]; })\n        })\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/toarray.js\n// module id = jLOe\n// module chunks = 1","const arrayOpts = require(\"./arrays.js\");\nconst aggregate = require(\"./aggregate.js\");\nconst match = require(\"./match.js\");\n\nvar query = {};\nquery.match = match;\nquery.group = aggregate;\n\nquery.indexBy = function(data, id){\n    var indexed = {};\n    data.forEach(function(d){\n        if(!indexed.hasOwnProperty(d[id])){\n            indexed[d[id]] = [ d ];\n        } else {\n            indexed[d[id]].push(d);\n        }\n        delete d[id];\n    });\n    return indexed;\n};\n\n// query.list = function(data, id) {\n//     return data.map(function(d){return d[id];});\n// }\n\nquery.range = function(data, id) {\n    var array = data.map(function(d){return d[id];});\n    return [ arrayOpts.min(array), arrayOpts.max(array) ];\n};\n\nquery.map = function(data, m) {\n    var mf = function(d){return d};\n    if(typeof m === \"string\")\n        mf = function(d){return d[m]};\n    else if(typeof m === \"function\")\n        mf = m;\n\n    return data.map(mf);\n};\n\n// Object.keys(arrayOpts).forEach(function(opt) {\n//     query[opt] = function(data, id) {\n//         var arr = query.map(data, id);\n//         return arrayOpts[opt](arr);\n//     }\n// });\n\n\n\nquery.sortBy = function(data, spec) {\n    function sortArray(a, b, p) {\n        return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n    }\n    return data.sort(function(a, b){\n        var r = 0,\n            i = 0,\n            attributes = Object.keys(spec),\n            al = attributes.length;\n\n        while( r === 0 && i < al ) {\n            r = sortArray(a, b, attributes[i]) * spec[attributes[i]];\n            i++;\n        }\n        return r;\n    })\n};\n\nquery.orderBy = function(c, s, o) {\n    var spec = {};\n    s.forEach(function(ss){\n        spec[ss] = o;\n    });\n    return query.sort(c, spec);\n};\n\nquery.histogram = function(data, spec, max, min) {\n    var result = {};\n    for(var key in spec) {\n        result[key] = arrayOpts.histogram(data.map(function(d){return d[key]}), spec[key], max, min);\n    }\n    return result;\n};\n\nquery.binAggregate = function(data, spec) {\n    var attrKey = Object.keys(spec)[0],\n        attributes = Object.keys(spec).filter(function(k) { return k != \"$data\" && k!=attrKey;}) || [],\n        embedData = spec.$data || false,\n        numBin = spec[attrKey],\n        array = data.map(function(d){ return d[attrKey]; }),\n        l = array.length,\n        min = arrayOpts.min(array),\n        max = arrayOpts.max(array),\n        range = max - min,\n        interval = range / numBin,\n        bins = [];\n\n\n    for(var b = 0; b < numBin; b++) {\n        bins[b] = {binID: b, rangeBegin: min + range * (b/(numBin)), rangeEnd: min + range*(b+1)/(numBin), count: 0};\n        // if(embedData)\n            bins[b].data = [];\n        // attributes.forEach(function(attr){\n        //     bins[b][attr] = 0;\n        // })\n    }\n\n    // bins[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        if(binID == numBin) binID--;\n        data[i].binID = binID;\n        // if(embedData)\n            bins[binID].data.push(data[i]);\n        // bins[binID].count++;\n        // attributes.forEach(function(attr){\n        //     bins[binID][attr] += data[i][attr];\n        // });\n    }\n\n    spec.$by = \"binID\";\n    delete spec[attrKey];\n\n    var result = query.group(data, spec);\n    result = query.indexBy(result, \"binID\");\n\n\n    // result.forEach(function(r){\n    //     r.rangeBegin = bins[r.binID].rangeBegin;\n    //     r.rangeEnd = bins[r.binID].rangeEnd;\n    // })\n\n    bins.forEach(function(bin){\n\n        if(result.hasOwnProperty(bin.binID)) {\n            attributes.forEach(function(attr){\n                bin[attr] = result[bin.binID][0][attr];\n            });\n            if(embedData) bin.data = result[bin.binID][0].data;\n        } else {\n            attributes.forEach(function(attr){\n                bin[attr] = 0;\n            });\n        }\n\n    })\n    // console.log(bins);\n    // return result;\n    return bins;\n}\n\nquery.partition = function(data, numPart) {\n    var len = data.length,\n        p = Math.ceil(len / numPart),\n        pid,\n        partitions = [];\n\n    for(var b = 0; b < numPart; b++) {\n        partitions[b] = {partition: b, data: [], count: 0};\n    }\n\n    for(var i = 0; i < len; i++) {\n        pid = Math.floor(i / p);\n        partitions[pid].data.push(data[i]);\n        partitions[pid].count++;\n    }\n\n    return partitions;\n}\n\nquery.partitionBy = function(data, spec) {\n    var len = data.length,\n        pid,\n        partitions = [],\n        key = Object.keys(spec)[0],\n        parts = spec[key];\n\n    parts.forEach(function(b, bi) {\n        partitions[bi] = {partition: bi, data: [], count: 0, name: b};\n    })\n\n    for(var i = 0; i < len; i++) {\n        pid = parts.indexOf(data[i][key]);\n        if(pid>-1){\n            partitions[pid].data.push(data[i]);\n            partitions[pid].count++;\n        }\n    }\n    return partitions;\n}\n\nquery.normalize = function(data, fields) {\n    var hash = {};\n\n    fields.forEach(function(f){\n        var array = data.map(function(d){ return d[f]; });\n        hash[f] = arrayOpts.normalize(array);\n    });\n\n    data.forEach(function(d, i){\n        fields.forEach(function(f){\n            d[f] = hash[f][i];\n        });\n    });\n\n    return data;\n}\n\nquery.toColumnArray = function(data) {\n    var columnArray = [];\n        attributes = Object.keys(data[0]).filter(function(k) { return k; });\n\n    attributes.forEach(function(attr){\n        columnArray.push(data.map(function(d){return d[attr];}));\n    });\n\n    columnArray.fields = attributes;\n\n    attributes.forEach(function(attr, ai){\n        columnArray[attr] = columnArray[ai];\n    });\n\n    return columnArray;\n}\n\nmodule.exports = query;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/query.js\n// module id = l+1b\n// module chunks = 1","var array = require(\"./arrays\");\n\nfunction stats(data, fields){\n\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = {\n            min: array.min(a),\n            max: array.max(a),\n            avg: array.avg(a),\n            std: array.std(a)\n        };\n    });\n\n    return result;\n};\n\n\nstats.domains = function(data, fields) {\n    if(!Array.isArray(data))\n        throw new Error(\"Inproper input data format.\");\n\n    var result = {};\n\n    fields.forEach(function(f) {\n        var a = data.map(function(d){return d[f]; });\n        result[f] = [ array.min(a), array.max(a) ];\n    });\n\n    return result;\n}\n\nmodule.exports = stats;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/stats.js\n// module id = lv5u\n// module chunks = 1","import p4 from './src/main';\nimport cstore from './src/cstore';\nimport  * as ctypes  from './src/ctypes';\nimport * as ajax from './src/io/ajax';\nimport parse from './src/io/parse';\n\nimport Babies from './test/data-babies';\nimport TimeSeries from './test/data-timeseries';\n\nvar root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\np4.ajax = ajax;\np4.cstore = cstore;\np4.ctypes = ctypes;\np4.parse = parse;\np4.datasets = {Babies, TimeSeries};\n\nroot.p4 = p4;\nexport default root.p4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/index.js\n// module id = m82B\n// module chunks = 1","var array = {};\nfunction _reduce(array, opt) {\n    var i,\n        len = array.length,\n        fn,\n        result;\n\n    if(!len) return 0;\n\n    switch (opt) {\n        case \"max\":\n            result = array.reduce(function(a, b) {\n                return (a > b) ? a : b;\n            });\n            break;\n        case \"min\":\n            result = array.reduce(function(a, b) {\n                return (a < b) ? a : b;\n            });\n            break;\n        case \"and\":\n        case \"&\":\n            result = array.reduce(function(a, b) {\n                return a & b;\n            });\n            break;\n        case \"or\":\n        case \"|\":\n            result = array.reduce(function(a, b) {\n                return a | b;\n            });\n            break;\n        case \"mult\":\n        case \"*\":\n            result = array.reduce(function(a, b) {\n                return a * b;\n            });\n            break;\n        default: // \"sum\" or \"+\"\n            result = array.reduce(function(a, b) {\n                return a + b;\n            });\n            break;\n    }\n\n    return result;\n}\n\narray.reduce = function(opt) {\n    return function(array) {\n        var a = (array instanceof Array) ? array : Array.apply(null, arguments);\n        return _reduce(a, opt);\n    };\n};\n\narray.avg = function(array) {\n    return _reduce(array, \"+\") / array.length;\n    // return array.reduce(function(a,b){ return 0.5 * (a + b)});\n};\n\narray.normalize = function(array) {\n    var max = _reduce(array, \"max\"),\n        min = _reduce(array, \"min\"),\n        range = max - min;\n\n    return array.map(function(a){\n        return (a - min) / range;\n    });\n}\n\narray.seq = function(start, end, intv) {\n    var interval = intv || 1,\n        array = [];\n\n    for(var i=start; i<=end; i+=interval)\n        array.push(i);\n\n    return array;\n};\n\n[\"max\", \"min\", \"mult\", \"and\", \"or\"].forEach(function(f) {\n    array[f] = array.reduce(f);\n});\n\narray.sum = array.reduce(\"+\");\n\narray.scan = array.pfsum = function(a){\n    var pfsum = [],\n        accum = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        accum += a[i];\n        pfsum.push(accum);\n    }\n\n    return pfsum;\n};\n\narray.iscan = function(a) {\n    return array.scan([0].concat(a));\n};\n\narray.diff = function(a, b) {\n    var difference = [];\n    a.forEach(function(d){\n        if (b.indexOf(d)===-1) {\n            difference.push(d);\n        }\n    });\n    return difference;\n};\n\narray.intersect = function(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function (e) {\n            if (b.indexOf(e) !== -1) return true;\n    });\n};\n\narray.unique = function(a) {\n    return a.reduce(function(b, c) {\n        if (b.indexOf(c) < 0) b.push(c);\n        return b;\n    }, []);\n};\n\narray.lcm = function(A) {\n    var n = A.length, a = Math.abs(A[0]);\n    for (var i = 1; i < n; i++) {\n        var b = Math.abs(A[i]), c = a;\n        while (a && b){ (a > b) ? a %= b : b %= a; }\n        a = Math.abs(c*A[i])/(a+b);\n    }\n    return a;\n};\n\narray.stats = function(array){\n    return {\n        max: _reduce(array, \"max\"),\n        min: _reduce(array, \"min\"),\n        avg: array.avg(array)\n    };\n};\n\narray.histogram = function(array, numBin, _max, _min) {\n    var l = array.length,\n        min = (typeof(_min) == 'number') ? _min : _reduce(array, \"min\"),\n        max = (typeof(_max) == 'number') ? _max : _reduce(array, \"max\"),\n        range = max - min,\n        interval = range / numBin,\n        bins = [],\n        // ids = [],\n        hg = new Array(numBin+1).fill(0);\n\n    for(var b = 0; b < numBin; b++) {\n        bins.push([min + range * (b/(numBin)), min + range*(b+1)/(numBin)]);\n        // ids[b] = [];\n    }\n\n    // ids[numBin] = [];\n\n    for(var i = 0; i < l; i++) {\n        binID = Math.floor( (array[i] - min) / range * (numBin));\n        hg[binID]++;\n        // ids[binID].push(i);\n    };\n\n    hg[numBin-1] += hg[numBin];\n    // ids[numBin-1] = ids[numBin-1].concat(ids.pop());\n    return {\n        bins: bins,\n        counts: hg.slice(0,numBin),\n        // ids: ids\n    };\n}\n\narray.var = function(rowArray) {\n    var m = _reduce(rowArray, \"+\") / rowArray.length,\n        va = rowArray.map(function(a){ return Math.pow(a-m, 2) });\n\n    return _reduce(va, \"+\") / (rowArray.length - 1);\n}\n\narray.std = function(rowArray) {\n    return Math.sqrt(array.var(rowArray));\n}\n\n\n\nmodule.exports = array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/arrays.js\n// module id = mO0D\n// module chunks = 1","module.exports = {\"type\":\"Topology\",\"objects\":{\"countries\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"arcs\":[[0,1,2,3,4,5]],\"id\":\"004\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[6,7,8,9]],[[10,11,12]]],\"id\":\"024\"},{\"type\":\"Polygon\",\"arcs\":[[13,14,15,16,17]],\"id\":\"008\"},{\"type\":\"Polygon\",\"arcs\":[[18,19,20,21,22]],\"id\":\"784\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[23,24]],[[25,26,27,28,29,30]]],\"id\":\"032\"},{\"type\":\"Polygon\",\"arcs\":[[31,32,33,34,35]],\"id\":\"051\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"id\":\"010\"},{\"type\":\"Polygon\",\"arcs\":[[44]],\"id\":\"260\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[45]],[[46]]],\"id\":\"036\"},{\"type\":\"Polygon\",\"arcs\":[[47,48,49,50,51,52,53]],\"id\":\"040\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[54,-35]],[[55,56,-33,57,58]]],\"id\":\"031\"},{\"type\":\"Polygon\",\"arcs\":[[59,60,61]],\"id\":\"108\"},{\"type\":\"Polygon\",\"arcs\":[[62,63,64,65,66]],\"id\":\"056\"},{\"type\":\"Polygon\",\"arcs\":[[67,68,69,70,71]],\"id\":\"204\"},{\"type\":\"Polygon\",\"arcs\":[[72,73,74,-70,75,76]],\"id\":\"854\"},{\"type\":\"Polygon\",\"arcs\":[[77,78,79]],\"id\":\"050\"},{\"type\":\"Polygon\",\"arcs\":[[80,81,82,83,84,85]],\"id\":\"100\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[86]],[[87]],[[88]]],\"id\":\"044\"},{\"type\":\"Polygon\",\"arcs\":[[89,90,91]],\"id\":\"070\"},{\"type\":\"Polygon\",\"arcs\":[[92,93,94,95,96]],\"id\":\"112\"},{\"type\":\"Polygon\",\"arcs\":[[97,98,99]],\"id\":\"084\"},{\"type\":\"Polygon\",\"arcs\":[[100,101,102,103,-31]],\"id\":\"068\"},{\"type\":\"Polygon\",\"arcs\":[[-27,104,-103,105,106,107,108,109,110,111,112]],\"id\":\"076\"},{\"type\":\"Polygon\",\"arcs\":[[113,114]],\"id\":\"096\"},{\"type\":\"Polygon\",\"arcs\":[[115,116]],\"id\":\"064\"},{\"type\":\"Polygon\",\"arcs\":[[117,118,119,120]],\"id\":\"072\"},{\"type\":\"Polygon\",\"arcs\":[[121,122,123,124,125,126,127]],\"id\":\"140\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138,139,140,141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]]],\"id\":\"124\"},{\"type\":\"Polygon\",\"arcs\":[[-51,161,162,163]],\"id\":\"756\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[-24,164]],[[-30,165,166,-101]]],\"id\":\"152\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[167]],[[168,169,170,171,172,173,-117,174,175,176,177,-4,178,179,180,181,182,183]]],\"id\":\"156\"},{\"type\":\"Polygon\",\"arcs\":[[184,185,186,187,-73,188]],\"id\":\"384\"},{\"type\":\"Polygon\",\"arcs\":[[189,190,191,192,193,194,-128,195]],\"id\":\"120\"},{\"type\":\"Polygon\",\"arcs\":[[196,197,-60,198,199,200,201,-10,202,-13,203,-126,204]],\"id\":\"180\"},{\"type\":\"Polygon\",\"arcs\":[[-12,205,206,-196,-127,-204]],\"id\":\"178\"},{\"type\":\"Polygon\",\"arcs\":[[207,208,209,210,211,-107,212]],\"id\":\"170\"},{\"type\":\"Polygon\",\"arcs\":[[213,214,215,216]],\"id\":\"188\"},{\"type\":\"Polygon\",\"arcs\":[[217]],\"id\":\"192\"},{\"type\":\"Polygon\",\"arcs\":[[218,219]],\"id\":\"-99\"},{\"type\":\"Polygon\",\"arcs\":[[220,-220]],\"id\":\"196\"},{\"type\":\"Polygon\",\"arcs\":[[-53,221,222,223]],\"id\":\"203\"},{\"type\":\"Polygon\",\"arcs\":[[224,225,-222,-52,-164,226,227,-64,228,229,230]],\"id\":\"276\"},{\"type\":\"Polygon\",\"arcs\":[[231,232,233,234]],\"id\":\"262\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[235]],[[-231,236]]],\"id\":\"208\"},{\"type\":\"Polygon\",\"arcs\":[[237,238]],\"id\":\"214\"},{\"type\":\"Polygon\",\"arcs\":[[239,240,241,242,243,244,245,246]],\"id\":\"012\"},{\"type\":\"Polygon\",\"arcs\":[[247,-208,248]],\"id\":\"218\"},{\"type\":\"Polygon\",\"arcs\":[[249,250,251,252,253]],\"id\":\"818\"},{\"type\":\"Polygon\",\"arcs\":[[254,255,256,-235]],\"id\":\"232\"},{\"type\":\"Polygon\",\"arcs\":[[257,258,259,260]],\"id\":\"724\"},{\"type\":\"Polygon\",\"arcs\":[[261,262,263]],\"id\":\"233\"},{\"type\":\"Polygon\",\"arcs\":[[-234,264,265,266,267,268,269,-255]],\"id\":\"231\"},{\"type\":\"Polygon\",\"arcs\":[[270,271,272,273]],\"id\":\"246\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[274]],[[275]]],\"id\":\"242\"},{\"type\":\"Polygon\",\"arcs\":[[276]],\"id\":\"238\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[277,278,279,-111]],[[280]],[[281,-227,-163,282,283,-259,284,-66]]],\"id\":\"250\"},{\"type\":\"Polygon\",\"arcs\":[[285,286,-190,-207]],\"id\":\"266\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[287,288]],[[289]]],\"id\":\"826\"},{\"type\":\"Polygon\",\"arcs\":[[290,291,-58,-32,292]],\"id\":\"268\"},{\"type\":\"Polygon\",\"arcs\":[[293,-189,-77,294]],\"id\":\"288\"},{\"type\":\"Polygon\",\"arcs\":[[295,296,297,298,299,300,-187]],\"id\":\"324\"},{\"type\":\"Polygon\",\"arcs\":[[301,302]],\"id\":\"270\"},{\"type\":\"Polygon\",\"arcs\":[[303,304,-299]],\"id\":\"624\"},{\"type\":\"Polygon\",\"arcs\":[[305,-191,-287]],\"id\":\"226\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[306]],[[307,-15,308,-84,309]]],\"id\":\"300\"},{\"type\":\"Polygon\",\"arcs\":[[310]],\"id\":\"304\"},{\"type\":\"Polygon\",\"arcs\":[[311,312,-100,313,314,315]],\"id\":\"320\"},{\"type\":\"Polygon\",\"arcs\":[[316,317,-109,318]],\"id\":\"328\"},{\"type\":\"Polygon\",\"arcs\":[[319,320,-315,321,322]],\"id\":\"340\"},{\"type\":\"Polygon\",\"arcs\":[[323,-92,324,325,326,327]],\"id\":\"191\"},{\"type\":\"Polygon\",\"arcs\":[[-239,328]],\"id\":\"332\"},{\"type\":\"Polygon\",\"arcs\":[[-48,329,330,331,332,-328,333]],\"id\":\"348\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[334]],[[335,336]],[[337]],[[338]],[[339]],[[340]],[[341]],[[342]],[[343,344]],[[345]],[[346]],[[347,348]],[[349]]],\"id\":\"360\"},{\"type\":\"Polygon\",\"arcs\":[[-177,350,-175,-116,-174,351,-80,352,353]],\"id\":\"356\"},{\"type\":\"Polygon\",\"arcs\":[[354,-288]],\"id\":\"372\"},{\"type\":\"Polygon\",\"arcs\":[[355,-6,356,357,358,359,-55,-34,-57,360]],\"id\":\"364\"},{\"type\":\"Polygon\",\"arcs\":[[361,362,363,364,365,366,-359]],\"id\":\"368\"},{\"type\":\"Polygon\",\"arcs\":[[367]],\"id\":\"352\"},{\"type\":\"Polygon\",\"arcs\":[[368,369,370,-254,371,372,373]],\"id\":\"376\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[374]],[[375]],[[376,377,-283,-162,-50]]],\"id\":\"380\"},{\"type\":\"Polygon\",\"arcs\":[[378]],\"id\":\"388\"},{\"type\":\"Polygon\",\"arcs\":[[-369,379,-365,380,381,-371,382]],\"id\":\"400\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[383]],[[384]],[[385]]],\"id\":\"392\"},{\"type\":\"Polygon\",\"arcs\":[[386,387,388,389,-181,390]],\"id\":\"398\"},{\"type\":\"Polygon\",\"arcs\":[[391,392,393,394,-267,395]],\"id\":\"404\"},{\"type\":\"Polygon\",\"arcs\":[[-391,-180,396,397]],\"id\":\"417\"},{\"type\":\"Polygon\",\"arcs\":[[398,399,400,401]],\"id\":\"116\"},{\"type\":\"Polygon\",\"arcs\":[[402,403]],\"id\":\"410\"},{\"type\":\"Polygon\",\"arcs\":[[-18,404,405,406]],\"id\":\"-99\"},{\"type\":\"Polygon\",\"arcs\":[[407,408,-363]],\"id\":\"414\"},{\"type\":\"Polygon\",\"arcs\":[[409,410,-172,411,-400]],\"id\":\"418\"},{\"type\":\"Polygon\",\"arcs\":[[-373,412,413]],\"id\":\"422\"},{\"type\":\"Polygon\",\"arcs\":[[414,415,-296,-186]],\"id\":\"430\"},{\"type\":\"Polygon\",\"arcs\":[[416,-247,417,418,-252,419,420]],\"id\":\"434\"},{\"type\":\"Polygon\",\"arcs\":[[421]],\"id\":\"144\"},{\"type\":\"Polygon\",\"arcs\":[[422]],\"id\":\"426\"},{\"type\":\"Polygon\",\"arcs\":[[423,424,425,-93,426]],\"id\":\"440\"},{\"type\":\"Polygon\",\"arcs\":[[-228,-282,-65]],\"id\":\"442\"},{\"type\":\"Polygon\",\"arcs\":[[427,-264,428,-94,-426]],\"id\":\"428\"},{\"type\":\"Polygon\",\"arcs\":[[-244,429,430]],\"id\":\"504\"},{\"type\":\"Polygon\",\"arcs\":[[431,432]],\"id\":\"498\"},{\"type\":\"Polygon\",\"arcs\":[[433]],\"id\":\"450\"},{\"type\":\"Polygon\",\"arcs\":[[434,-98,-313,435,436]],\"id\":\"484\"},{\"type\":\"Polygon\",\"arcs\":[[-407,437,-85,-309,-14]],\"id\":\"807\"},{\"type\":\"Polygon\",\"arcs\":[[438,-241,439,-74,-188,-301,440]],\"id\":\"466\"},{\"type\":\"Polygon\",\"arcs\":[[441,-78,-352,-173,-411,442]],\"id\":\"104\"},{\"type\":\"Polygon\",\"arcs\":[[443,-325,-91,444,-405,-17]],\"id\":\"499\"},{\"type\":\"Polygon\",\"arcs\":[[445,-183]],\"id\":\"496\"},{\"type\":\"Polygon\",\"arcs\":[[446,447,448,449,450,451,452,453]],\"id\":\"508\"},{\"type\":\"Polygon\",\"arcs\":[[454,455,456,-242,-439]],\"id\":\"478\"},{\"type\":\"Polygon\",\"arcs\":[[-454,457,458]],\"id\":\"454\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[459,460]],[[-348,461,-115,462]]],\"id\":\"458\"},{\"type\":\"Polygon\",\"arcs\":[[463,-8,464,-119,465]],\"id\":\"516\"},{\"type\":\"Polygon\",\"arcs\":[[466]],\"id\":\"540\"},{\"type\":\"Polygon\",\"arcs\":[[-75,-440,-240,-417,467,-194,468,-71]],\"id\":\"562\"},{\"type\":\"Polygon\",\"arcs\":[[469,-72,-469,-193]],\"id\":\"566\"},{\"type\":\"Polygon\",\"arcs\":[[470,-323,471,-215]],\"id\":\"558\"},{\"type\":\"Polygon\",\"arcs\":[[-229,-63,472]],\"id\":\"528\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[473,-274,474,475]],[[476]],[[477]],[[478]]],\"id\":\"578\"},{\"type\":\"Polygon\",\"arcs\":[[-351,-176]],\"id\":\"524\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[479]],[[480]]],\"id\":\"554\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[481,482,-22,483]],[[-20,484]]],\"id\":\"512\"},{\"type\":\"Polygon\",\"arcs\":[[-178,-354,485,-357,-5]],\"id\":\"586\"},{\"type\":\"Polygon\",\"arcs\":[[486,-217,487,-210]],\"id\":\"591\"},{\"type\":\"Polygon\",\"arcs\":[[-167,488,-249,-213,-106,-102]],\"id\":\"604\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[489]],[[490]],[[491]],[[492]],[[493]],[[494]],[[495]]],\"id\":\"608\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[496]],[[497]],[[-344,498]],[[499]]],\"id\":\"598\"},{\"type\":\"Polygon\",\"arcs\":[[-226,500,501,-427,-97,502,503,-223]],\"id\":\"616\"},{\"type\":\"Polygon\",\"arcs\":[[504]],\"id\":\"630\"},{\"type\":\"Polygon\",\"arcs\":[[505,506,-404,507,-169]],\"id\":\"408\"},{\"type\":\"Polygon\",\"arcs\":[[-261,508]],\"id\":\"620\"},{\"type\":\"Polygon\",\"arcs\":[[-104,-105,-26]],\"id\":\"600\"},{\"type\":\"Polygon\",\"arcs\":[[-383,-370]],\"id\":\"275\"},{\"type\":\"Polygon\",\"arcs\":[[509,510]],\"id\":\"634\"},{\"type\":\"Polygon\",\"arcs\":[[511,-433,512,513,-81,514,-332]],\"id\":\"642\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[515]],[[-502,516,-424]],[[517]],[[518]],[[519]],[[520]],[[521]],[[-506,-184,-446,-182,-390,522,-59,-292,523,524,-95,-429,-263,525,-271,-474,526]],[[527]],[[528]],[[529]]],\"id\":\"643\"},{\"type\":\"Polygon\",\"arcs\":[[530,-61,-198,531]],\"id\":\"646\"},{\"type\":\"Polygon\",\"arcs\":[[-243,-457,532,-430]],\"id\":\"732\"},{\"type\":\"Polygon\",\"arcs\":[[533,-381,-364,-409,534,-511,535,-23,-483,536]],\"id\":\"682\"},{\"type\":\"Polygon\",\"arcs\":[[537,538,-123,539,-420,-251,540,-256,-270,541]],\"id\":\"729\"},{\"type\":\"Polygon\",\"arcs\":[[542,-268,-395,543,-205,-125,544,-538]],\"id\":\"728\"},{\"type\":\"Polygon\",\"arcs\":[[545,-455,-441,-300,-305,546,-303]],\"id\":\"686\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[547]],[[548]],[[549]],[[550]],[[551]]],\"id\":\"090\"},{\"type\":\"Polygon\",\"arcs\":[[552,-297,-416]],\"id\":\"694\"},{\"type\":\"Polygon\",\"arcs\":[[553,-316,-321]],\"id\":\"222\"},{\"type\":\"Polygon\",\"arcs\":[[-265,-233,554,555]],\"id\":\"-99\"},{\"type\":\"Polygon\",\"arcs\":[[-396,-266,-556,556]],\"id\":\"706\"},{\"type\":\"Polygon\",\"arcs\":[[-86,-438,-406,-445,-90,-324,-333,-515]],\"id\":\"688\"},{\"type\":\"Polygon\",\"arcs\":[[557,-279,558,-110,-318]],\"id\":\"740\"},{\"type\":\"Polygon\",\"arcs\":[[-504,559,-330,-54,-224]],\"id\":\"703\"},{\"type\":\"Polygon\",\"arcs\":[[-49,-334,-327,560,-377]],\"id\":\"705\"},{\"type\":\"Polygon\",\"arcs\":[[-475,-273,561]],\"id\":\"752\"},{\"type\":\"Polygon\",\"arcs\":[[562,-450]],\"id\":\"748\"},{\"type\":\"Polygon\",\"arcs\":[[-380,-374,-414,563,564,-366]],\"id\":\"760\"},{\"type\":\"Polygon\",\"arcs\":[[-468,-421,-540,-122,-195]],\"id\":\"148\"},{\"type\":\"Polygon\",\"arcs\":[[565,-295,-76,-69]],\"id\":\"768\"},{\"type\":\"Polygon\",\"arcs\":[[566,-461,567,-443,-410,-399]],\"id\":\"764\"},{\"type\":\"Polygon\",\"arcs\":[[-397,-179,-3,568]],\"id\":\"762\"},{\"type\":\"Polygon\",\"arcs\":[[-356,569,-388,570,-1]],\"id\":\"795\"},{\"type\":\"Polygon\",\"arcs\":[[571,-336]],\"id\":\"626\"},{\"type\":\"Polygon\",\"arcs\":[[572]],\"id\":\"780\"},{\"type\":\"Polygon\",\"arcs\":[[-246,573,-418]],\"id\":\"788\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[-293,-36,-360,-367,-565,574]],[[-310,-83,575]]],\"id\":\"792\"},{\"type\":\"Polygon\",\"arcs\":[[576]],\"id\":\"158\"},{\"type\":\"Polygon\",\"arcs\":[[-393,577,-447,-459,578,-201,579,-199,-62,-531,580]],\"id\":\"834\"},{\"type\":\"Polygon\",\"arcs\":[[-532,-197,-544,-394,-581]],\"id\":\"800\"},{\"type\":\"Polygon\",\"arcs\":[[-525,581,-513,-432,-512,-331,-560,-503,-96]],\"id\":\"804\"},{\"type\":\"Polygon\",\"arcs\":[[-113,582,-28]],\"id\":\"858\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[583]],[[584]],[[585]],[[586]],[[587]],[[588,-437,589,-139]],[[590]],[[591]],[[592]],[[-141,593]]],\"id\":\"840\"},{\"type\":\"Polygon\",\"arcs\":[[-571,-387,-398,-569,-2]],\"id\":\"860\"},{\"type\":\"Polygon\",\"arcs\":[[594,-319,-108,-212]],\"id\":\"862\"},{\"type\":\"Polygon\",\"arcs\":[[595,-401,-412,-171]],\"id\":\"704\"},{\"type\":\"MultiPolygon\",\"arcs\":[[[596]],[[597]]],\"id\":\"548\"},{\"type\":\"Polygon\",\"arcs\":[[598,-537,-482]],\"id\":\"887\"},{\"type\":\"Polygon\",\"arcs\":[[-466,-118,599,-451,-563,-449,600],[-423]],\"id\":\"710\"},{\"type\":\"Polygon\",\"arcs\":[[-458,-453,601,-120,-465,-7,-202,-579]],\"id\":\"894\"},{\"type\":\"Polygon\",\"arcs\":[[-600,-121,-602,-452]],\"id\":\"716\"}]},\"land\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"MultiPolygon\",\"arcs\":[[[595,401,566,459,567,441,78,352,485,357,361,407,534,509,535,18,484,20,483,598,533,381,249,540,256,231,554,556,391,577,447,600,463,8,202,10,205,285,305,191,469,67,565,293,184,414,552,297,303,546,301,545,455,532,430,244,573,418,252,371,412,563,574,290,523,581,513,81,575,307,15,443,325,560,377,283,259,508,257,284,66,472,229,236,224,500,516,424,427,261,525,271,561,475,526,506,402,507,169],[123,544,538],[199,579],[542,268,541],[388,522,55,360,569]],[[24,164]],[[582,28,165,488,247,208,486,213,470,319,553,311,435,589,139,593,141,588,434,98,313,321,471,215,487,210,594,316,557,279,111],[558,277]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[86]],[[87]],[[88]],[[461,113,462,348]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[167]],[[217]],[[218,220]],[[235]],[[237,328]],[[274]],[[275]],[[276]],[[280]],[[288,354]],[[289]],[[306]],[[310]],[[334]],[[336,571]],[[337]],[[338]],[[339]],[[340]],[[341]],[[342]],[[344,498]],[[345]],[[346]],[[349]],[[367]],[[374]],[[375]],[[378]],[[383]],[[384]],[[385]],[[421]],[[433]],[[466]],[[476]],[[477]],[[478]],[[479]],[[480]],[[489]],[[490]],[[491]],[[492]],[[493]],[[494]],[[495]],[[496]],[[497]],[[499]],[[504]],[[515]],[[517]],[[518]],[[519]],[[520]],[[521]],[[527]],[[528]],[[529]],[[547]],[[548]],[[549]],[[550]],[[551]],[[572]],[[576]],[[583]],[[584]],[[585]],[[586]],[[587]],[[590]],[[591]],[[592]],[[596]],[[597]]]}]}},\"arcs\":[[[67002,71642],[284,-224],[209,79],[58,268],[219,89],[157,180],[55,472],[234,114],[44,211],[131,-158],[84,-19]],[[68477,72654],[154,-4],[210,-124]],[[68841,72526],[85,-72],[201,189],[93,-114],[90,271],[166,-12],[43,86],[29,239],[120,205],[150,-134],[-30,-181],[84,-28],[-26,-496],[110,-194],[97,125],[123,58],[173,265],[192,-44],[286,-1]],[[70827,72688],[50,-169]],[[70877,72519],[-162,-67],[-141,-109],[-319,-68],[-298,-124],[-163,-258],[66,-250],[32,-294],[-139,-248],[12,-227],[-76,-213],[-265,18],[110,-390],[-177,-150],[-118,-356],[15,-355],[-108,-166],[-103,55],[-212,-77],[-31,-166],[-207,1],[-154,-334],[-10,-503],[-361,-246],[-194,52],[-56,-129],[-166,75],[-278,-88],[-465,301]],[[66909,68203],[252,536],[-23,380],[-210,100],[-22,375],[-91,472],[119,323],[-121,87],[76,430],[113,736]],[[56642,44124],[29,-184],[-32,-286],[49,-277],[-41,-222],[24,-203],[-579,7],[-13,-1880],[188,-483],[181,-369]],[[56448,40227],[-510,-241],[-673,83],[-192,284],[-1126,-26],[-42,-41],[-166,267],[-180,17],[-166,-100],[-134,-113]],[[53259,40357],[-26,372],[38,519],[96,541],[15,254],[90,532],[66,243],[159,386],[90,263],[29,438],[-15,335],[-83,211],[-74,358],[-68,355],[15,122],[85,235],[-84,570],[-57,396],[-139,374],[26,115]],[[53422,46976],[115,79],[80,-11],[98,71],[820,-8],[68,-440],[80,-354],[64,-191],[106,-309],[184,47],[91,83],[154,-83],[42,148],[69,344],[172,23],[15,103],[142,2],[-24,-213],[337,5],[5,-372],[56,-228],[-41,-356],[21,-363],[93,-219],[-15,-703],[68,54],[121,-15],[172,89],[127,-35]],[[53383,47159],[-74,444]],[[53309,47603],[112,255],[84,100],[104,-203]],[[53609,47755],[-101,-124],[-45,-152],[-9,-258],[-71,-62]],[[55719,75309],[-35,-201],[39,-254],[115,-144]],[[55838,74710],[-5,-155],[-91,-85],[-16,-192],[-129,-287]],[[55597,73991],[-48,41],[-5,130],[-154,199],[-24,281],[23,403],[38,184],[-47,93]],[[55380,75322],[-18,188],[120,291],[18,-111],[75,52]],[[55575,75742],[59,-159],[66,-60],[19,-214]],[[64327,64904],[49,29],[11,-162],[217,93],[230,-15],[168,-18],[190,400],[207,379],[176,364]],[[65575,65974],[52,-202]],[[65627,65772],[38,-466]],[[65665,65306],[-142,-3],[-23,-384],[50,-82],[-126,-117],[-1,-241],[-81,-245],[-7,-238]],[[65335,63996],[-56,-125],[-835,298],[-106,599],[-11,136]],[[31400,18145],[-168,16],[-297,1],[0,1319]],[[30935,19481],[106,-274],[139,-443],[361,-355],[389,-147],[-125,-296],[-264,-29],[-141,208]],[[32587,37434],[511,-964],[227,-89],[339,-437],[286,-231],[40,-261],[-273,-898],[280,-160],[312,-91],[220,95],[252,453],[45,521]],[[34826,35372],[138,114],[139,-341],[-6,-472],[-234,-326],[-186,-241],[-314,-573],[-370,-806]],[[33993,32727],[-70,-473],[-74,-607],[3,-588],[-61,-132],[-21,-382]],[[33770,30545],[-19,-308],[353,-506],[-38,-408],[173,-257],[-14,-289],[-267,-757],[-412,-317],[-557,-123],[-305,59],[59,-352],[-57,-442],[51,-298],[-167,-208],[-284,-82],[-267,216],[-108,-155],[39,-587],[188,-178],[152,186],[82,-307],[-255,-183],[-223,-367],[-41,-595],[-66,-316],[-262,-2],[-218,-302],[-80,-443],[273,-433],[266,-119],[-96,-531],[-328,-333],[-180,-692],[-254,-234],[-113,-276],[89,-614],[185,-342],[-117,30]],[[30952,19680],[-257,93],[-672,79],[-115,344],[6,443],[-185,-38],[-98,214],[-24,626],[213,260],[88,375],[-33,299],[148,504],[101,782],[-30,347],[122,112],[-30,223],[-129,118],[92,248],[-126,224],[-65,682],[112,120],[-47,720],[65,605],[75,527],[166,215],[-84,576],[-1,543],[210,386],[-7,494],[159,576],[1,544],[-72,108],[-128,1020],[171,607],[-27,572],[100,537],[182,555],[196,367],[-83,232],[58,190],[-9,985],[302,291],[96,614],[-34,148]],[[31359,37147],[231,534],[364,-144],[163,-427],[109,475],[316,-24],[45,-127]],[[62106,74858],[386,92]],[[62492,74950],[57,-155],[106,-103],[-56,-148],[148,-202],[-78,-189],[118,-160],[124,-97],[7,-410]],[[62918,73486],[-101,-17]],[[62817,73469],[-113,342],[1,91],[-123,-2],[-82,159],[-58,-16]],[[62442,74043],[-109,172],[-207,147],[27,288],[-47,208]],[[33452,3290],[-82,-301],[-81,-266],[-582,81],[-621,-35],[-348,197],[0,23],[-152,174],[625,-23],[599,-58],[207,243],[147,208],[288,-243]],[[5775,3611],[-533,-81],[-364,208],[-163,209],[-11,35],[-180,162],[169,220],[517,-93],[277,-185],[212,-209],[76,-266]],[[37457,4468],[342,-255],[120,-359],[33,-254],[11,-301],[-430,-186],[-452,-150],[-522,-139],[-582,-116],[-658,35],[-365,197],[49,243],[593,162],[239,197],[174,254],[126,220],[168,209],[180,243],[141,0],[414,127],[419,-127]],[[16330,7154],[359,-93],[332,104],[-158,-208],[-261,-151],[-386,47],[-278,208],[60,197],[332,-104]],[[15122,7165],[425,-231],[-164,23],[-359,58],[-381,162],[202,127],[277,-139]],[[22505,8080],[305,-81],[304,69],[163,-335],[-217,46],[-337,-23],[-343,23],[-376,-35],[-283,116],[-146,243],[174,104],[353,-81],[403,-46]],[[30985,8657],[33,-266],[-49,-231],[-76,-220],[-326,-81],[-311,-116],[-364,11],[136,232],[-327,-81],[-310,-81],[-212,174],[-16,243],[305,231],[190,70],[321,-23],[82,301],[16,219],[-6,475],[158,278],[256,93],[147,-220],[65,-220],[120,-267],[92,-254],[76,-267]],[[0,529],[16,-5],[245,344],[501,-185],[32,21],[294,188],[38,-7],[32,-4],[402,-246],[352,246],[63,34],[816,104],[265,-138],[130,-71],[419,-196],[789,-151],[625,-185],[1072,-139],[800,162],[1181,-116],[669,-185],[734,174],[773,162],[60,278],[-1094,23],[-898,139],[-234,231],[-745,128],[49,266],[103,243],[104,220],[-55,243],[-462,162],[-212,209],[-430,185],[675,-35],[642,93],[402,-197],[495,173],[457,220],[223,197],[-98,243],[-359,162],[-408,174],[-571,35],[-500,81],[-539,58],[-180,220],[-359,185],[-217,208],[-87,672],[136,-58],[250,-185],[457,58],[441,81],[228,-255],[441,58],[370,127],[348,162],[315,197],[419,58],[-11,220],[-97,220],[81,208],[359,104],[163,-196],[425,115],[321,151],[397,12],[375,57],[376,139],[299,128],[337,127],[218,-35],[190,-46],[414,81],[370,-104],[381,11],[364,81],[375,-57],[414,-58],[386,23],[403,-12],[413,-11],[381,23],[283,174],[337,92],[349,-127],[331,104],[300,208],[179,-185],[98,-208],[180,-197],[288,174],[332,-220],[375,-70],[321,-162],[392,35],[354,104],[418,-23],[376,-81],[381,-104],[147,254],[-180,197],[-136,209],[-359,46],[-158,220],[-60,220],[-98,440],[213,-81],[364,-35],[359,35],[327,-93],[283,-174],[119,-208],[376,-35],[359,81],[381,116],[342,70],[283,-139],[370,46],[239,451],[224,-266],[321,-104],[348,58],[228,-232],[365,-23],[337,-69],[332,-128],[218,220],[108,209],[278,-232],[381,58],[283,-127],[190,-197],[370,58],[288,127],[283,151],[337,81],[392,69],[354,81],[272,127],[163,186],[65,254],[-32,244],[-87,231],[-98,232],[-87,231],[-71,209],[-16,231],[27,232],[130,220],[109,243],[44,231],[-55,255],[-32,232],[136,266],[152,173],[180,220],[190,186],[223,173],[109,255],[152,162],[174,151],[267,34],[174,186],[196,115],[228,70],[202,150],[157,186],[218,69],[163,-151],[-103,-196],[-283,-174],[-120,-127],[-206,92],[-229,-58],[-190,-139],[-202,-150],[-136,-174],[-38,-231],[17,-220],[130,-197],[-190,-139],[-261,-46],[-153,-197],[-163,-185],[-174,-255],[-44,-220],[98,-243],[147,-185],[229,-139],[212,-185],[114,-232],[60,-220],[82,-232],[130,-196],[82,-220],[38,-544],[81,-220],[22,-232],[87,-231],[-38,-313],[-152,-243],[-163,-197],[-370,-81],[-125,-208],[-169,-197],[-419,-220],[-370,-93],[-348,-127],[-376,-128],[-223,-243],[-446,-23],[-489,23],[-441,-46],[-468,0],[87,-232],[424,-104],[311,-162],[174,-208],[-310,-185],[-479,58],[-397,-151],[-17,-243],[-11,-232],[327,-196],[60,-220],[353,-220],[588,-93],[500,-162],[398,-185],[506,-186],[690,-92],[681,-162],[473,-174],[517,-197],[272,-278],[136,-220],[337,209],[457,173],[484,186],[577,150],[495,162],[691,12],[680,-81],[560,-139],[180,255],[386,173],[702,12],[550,127],[522,128],[577,81],[614,104],[430,150],[-196,209],[-119,208],[0,220],[-539,-23],[-571,-93],[-544,0],[-77,220],[39,440],[125,128],[397,138],[468,139],[337,174],[337,174],[251,231],[380,104],[376,81],[190,47],[430,23],[408,81],[343,116],[337,139],[305,139],[386,185],[245,197],[261,173],[82,232],[-294,139],[98,243],[185,185],[288,116],[305,139],[283,185],[217,232],[136,277],[202,163],[331,-35],[136,-197],[332,-23],[11,220],[142,231],[299,-58],[71,-220],[331,-34],[360,104],[348,69],[315,-34],[120,-243],[305,196],[283,105],[315,81],[310,81],[283,139],[310,92],[240,128],[168,208],[207,-151],[288,81],[202,-277],[157,-209],[316,116],[125,232],[283,162],[365,-35],[108,-220],[229,220],[299,69],[326,23],[294,-11],[310,-70],[300,-34],[130,-197],[180,-174],[304,104],[327,24],[315,0],[310,11],[278,81],[294,70],[245,162],[261,104],[283,58],[212,162],[152,324],[158,197],[288,-93],[109,-208],[239,-139],[289,46],[196,-208],[206,-151],[283,139],[98,255],[250,104],[289,197],[272,81],[326,116],[218,127],[228,139],[218,127],[261,-69],[250,208],[180,162],[261,-11],[229,139],[54,208],[234,162],[228,116],[278,93],[256,46],[244,-35],[262,-58],[223,-162],[27,-254],[245,-197],[168,-162],[332,-70],[185,-162],[229,-162],[266,-35],[223,116],[240,243],[261,-127],[272,-70],[261,-69],[272,-46],[277,0],[229,-614],[-11,-150],[-33,-267],[-266,-150],[-218,-220],[38,-232],[310,12],[-38,-232],[-141,-220],[-131,-243],[212,-185],[321,-58],[321,104],[153,232],[92,220],[153,185],[174,174],[70,208],[147,289],[174,58],[316,24],[277,69],[283,93],[136,231],[82,220],[190,220],[272,151],[234,115],[153,197],[157,104],[202,93],[277,-58],[250,58],[272,69],[305,-34],[201,162],[142,393],[103,-162],[131,-278],[234,-115],[266,-47],[267,70],[283,-46],[261,-12],[174,58],[234,-35],[212,-127],[250,81],[300,0],[255,81],[289,-81],[185,197],[141,196],[191,163],[348,439],[179,-81],[212,-162],[185,-208],[354,-359],[272,-12],[256,0],[299,70],[299,81],[229,162],[190,174],[310,23],[207,127],[218,-116],[141,-185],[196,-185],[305,23],[190,-150],[332,-151],[348,-58],[288,47],[218,185],[185,185],[250,46],[251,-81],[288,-58],[261,93],[250,0],[245,-58],[256,-58],[250,104],[299,93],[283,23],[316,0],[255,58],[251,46],[76,290],[11,243],[174,-162],[49,-266],[92,-244],[115,-196],[234,-105],[315,35],[365,12],[250,35],[364,0],[262,11],[364,-23],[310,-46],[196,-186],[-54,-220],[179,-173],[299,-139],[310,-151],[360,-104],[375,-92],[283,-93],[315,-12],[180,197],[245,-162],[212,-185],[245,-139],[337,-58],[321,-69],[136,-232],[316,-139],[212,-208],[310,-93],[321,12],[299,-35],[332,12],[332,-47],[310,-81],[288,-139],[289,-116],[195,-173],[-32,-232],[-147,-208],[-125,-266],[-98,-209],[-131,-243],[-364,-93],[-163,-208],[-360,-127],[-125,-232],[-190,-220],[-201,-185],[-115,-243],[-70,-220],[-28,-266],[6,-220],[158,-232],[60,-220],[130,-208],[517,-81],[109,-255],[-501,-93],[-424,-127],[-528,-23],[-234,-336],[-49,-278],[-119,-220],[-147,-220],[370,-196],[141,-244],[239,-219],[338,-197],[386,-186],[419,-185],[636,-185],[142,-289],[800,-128],[53,-45],[208,-175],[767,151],[636,-186],[-99520,-142]],[[69148,21851],[179,-186],[263,-74],[9,-112],[-77,-269],[-427,-38],[-7,314],[41,244],[19,121]],[[90387,26479],[269,-204],[151,81],[217,113],[166,-39],[20,-702],[-95,-203],[-29,-476],[-97,162],[-193,-412],[-57,32],[-171,19],[-171,505],[-38,390],[-160,515],[7,271],[181,-52]],[[89877,42448],[100,-464],[179,223],[92,-250],[133,-231],[-29,-262],[60,-506],[42,-295],[70,-72],[75,-505],[-27,-307],[90,-400],[301,-309],[197,-281],[186,-257],[-37,-143],[159,-371],[108,-639],[111,130],[113,-256],[68,91],[48,-626],[197,-363],[129,-226],[217,-478],[78,-475],[7,-337],[-19,-365],[132,-502],[-16,-523],[-48,-274],[-75,-527],[6,-339],[-55,-423],[-123,-538],[-205,-290],[-102,-458],[-93,-292],[-82,-510],[-107,-294],[-70,-442],[-36,-407],[14,-187],[-159,-205],[-311,-22],[-257,-242],[-127,-229],[-168,-254],[-230,262],[-170,104],[43,308],[-152,-112],[-243,-428],[-240,160],[-158,94],[-159,42],[-269,171],[-179,364],[-52,449],[-64,298],[-137,240],[-267,71],[91,287],[-67,438],[-136,-408],[-247,-109],[146,327],[42,341],[107,289],[-22,438],[-226,-504],[-174,-202],[-106,-470],[-217,243],[9,313],[-174,429],[-147,221],[52,137],[-356,358],[-195,17],[-267,287],[-498,-56],[-359,-211],[-317,-197],[-265,39],[-294,-303],[-241,-137],[-53,-309],[-103,-240],[-236,-15],[-174,-52],[-246,107],[-199,-64],[-191,-27],[-165,-315],[-81,26],[-140,-167],[-133,-187],[-203,23],[-186,0],[-295,377],[-149,113],[6,338],[138,81],[47,134],[-10,212],[34,411],[-31,350],[-147,598],[-45,337],[12,336],[-111,385],[-7,174],[-123,235],[-35,463],[-158,467],[-39,252],[122,-255],[-93,548],[137,-171],[83,-229],[-5,303],[-138,465],[-26,186],[-65,177],[31,341],[56,146],[38,295],[-29,346],[114,425],[21,-450],[118,406],[225,198],[136,252],[212,217],[126,46],[77,-73],[219,220],[168,66],[42,129],[74,54],[153,-14],[292,173],[151,262],[71,316],[163,300],[13,236],[7,321],[194,502],[117,-510],[119,118],[-99,279],[87,287],[122,-128],[34,449],[152,291],[67,233],[140,101],[4,165],[122,-69],[5,148],[122,85],[134,80],[205,-271],[155,-350],[173,-4],[177,-56],[-59,325],[133,473],[126,155],[-44,147],[121,338],[168,208],[142,-70],[234,111],[-5,302],[-204,195],[148,86],[184,-147],[148,-242],[234,-151],[79,60],[172,-182],[162,169],[105,-51],[65,113],[127,-292],[-74,-316],[-105,-239],[-96,-20],[32,-236],[-81,-295],[-99,-291],[20,-166],[221,-327],[214,-189],[143,-204],[201,-350],[78,1],[145,-151],[43,-183],[265,-200],[183,202],[55,317],[56,262],[34,324],[85,470],[-39,286],[20,171],[-32,339],[37,445],[53,120],[-43,197],[67,313],[52,325],[7,168],[104,222],[78,-289],[19,-371],[70,-71],[11,-249],[101,-300],[21,-335],[-10,-214]],[[54716,79012],[-21,-241],[-156,-2],[53,-128],[-92,-380]],[[54500,78261],[-53,-100],[-243,-14],[-140,-134],[-229,45]],[[53835,78058],[-398,153],[-62,205],[-274,-102],[-32,-113],[-169,84]],[[52900,78285],[-142,16],[-125,108],[42,145],[-10,104]],[[52665,78658],[83,33],[141,-164],[39,156],[245,-25],[199,106],[133,-18],[87,-121],[26,100],[-40,385],[100,75],[98,272]],[[53776,79457],[206,-190],[157,242],[98,44],[215,-180],[131,30],[128,-111]],[[54711,79292],[-23,-75],[28,-205]],[[62817,73469],[-190,78],[-141,273],[-44,223]],[[63495,75281],[146,-311],[141,-419],[130,-28],[85,-159],[-228,-47],[-49,-459],[-48,-207],[-101,-138],[7,-293]],[[63578,73220],[-69,-29],[-173,309],[95,292],[-82,174],[-104,-44],[-327,-436]],[[62492,74950],[68,96],[207,-169],[149,-36],[38,70],[-136,319],[72,82]],[[62890,75312],[78,-20],[191,-359],[122,-40],[48,150],[166,238]],[[58149,47921],[-17,713],[-70,268]],[[58062,48902],[169,-46],[85,336],[147,-38]],[[58463,49154],[16,-233],[60,-134],[3,-192],[-69,-124],[-108,-308],[-101,-214],[-115,-28]],[[50920,80916],[204,-47],[257,123],[176,-258],[153,-138]],[[51710,80596],[-32,-400]],[[51678,80196],[-72,-22],[-30,-331]],[[51576,79843],[-243,269],[-143,-46],[-194,279],[-129,237],[-129,10],[-40,207]],[[50698,80799],[222,117]],[[50747,54278],[-229,-69]],[[50518,54209],[-69,407],[13,1357],[-56,122],[-11,290],[-96,207],[-85,174],[35,311]],[[50249,57077],[96,67],[56,258],[136,56],[61,176]],[[50598,57634],[93,173],[100,2],[212,-340]],[[51003,57469],[-11,-197],[62,-350],[-54,-238],[29,-159],[-135,-366],[-86,-181],[-52,-372],[7,-376],[-16,-952]],[[49214,56277],[-190,152],[-130,-22],[-97,-149],[-125,125],[-49,195],[-125,129]],[[48498,56707],[-18,343],[76,250],[-7,200],[221,490],[41,405],[76,144],[134,-79],[116,120],[38,152],[216,265],[53,184],[259,246],[153,84],[70,-114],[178,3]],[[50104,59400],[-22,-286],[37,-269],[156,-386],[9,-286],[320,-134],[-6,-405]],[[50249,57077],[-243,13]],[[50006,57090],[-128,47],[-90,-96],[-123,43],[-482,-27],[-7,-336],[38,-444]],[[75742,63602],[-6,-424],[-97,90],[18,-476]],[[75657,62792],[-79,308],[-16,301],[-53,285],[-116,344],[-256,23],[25,-243],[-87,-329],[-118,120],[-41,-108],[-78,65],[-108,53]],[[74730,63611],[-43,486],[-96,444],[47,356],[-171,159],[62,215],[173,220],[-200,313],[98,401],[220,-255],[133,-30],[24,-410],[265,-81],[257,8],[160,-101],[-128,-500],[-124,-34],[-86,-336],[152,-306],[46,377],[76,2],[147,-937]],[[56293,76715],[80,-243],[108,43],[213,-92],[408,-31],[138,150],[327,138],[202,-215],[163,-62]],[[57932,76403],[-144,-245],[-101,-422],[89,-337]],[[57776,75399],[-239,79],[-283,-186]],[[57254,75292],[-3,-294],[-252,-56],[-196,206],[-222,-162],[-206,17]],[[56375,75003],[-20,391],[-139,189]],[[56216,75583],[46,84],[-30,70],[47,188],[105,185],[-135,255],[-24,216],[68,134]],[[28462,64617],[-68,-29],[-70,340],[-104,171],[60,375],[84,-23],[97,-491],[1,-343]],[[28383,66284],[-303,-95],[-19,219],[130,47],[184,-18],[8,-153]],[[28611,66290],[-48,-420],[-51,75],[4,309],[-124,234],[-1,67],[220,-265]],[[55279,77084],[100,2],[-69,-260],[134,-227],[-41,-278],[-65,-27]],[[55338,76294],[-52,-53],[-90,-138],[-41,-325]],[[55155,75778],[-246,224],[-105,247],[-106,130],[-127,221],[-61,183],[-136,277],[59,245],[99,-136],[60,123],[130,13],[239,-98],[192,8],[126,-131]],[[56523,82432],[268,-4],[302,223],[64,333],[228,190],[-26,264]],[[57359,83438],[169,100],[298,228]],[[57826,83766],[293,-149],[39,-146],[146,70],[272,-141],[27,-277],[-60,-159],[174,-387],[113,-108],[-16,-107],[187,-104],[80,-157],[-108,-129],[-224,20],[-54,-55],[66,-196],[68,-379]],[[58829,81362],[-239,-35],[-85,-129],[-18,-298],[-111,57],[-250,-28],[-73,138],[-104,-103],[-105,86],[-218,12],[-310,141],[-281,47],[-215,-14],[-152,-160],[-133,-23]],[[56535,81053],[-6,263],[-85,274],[166,121],[2,235],[-77,225],[-12,261]],[[25238,61101],[-2,87],[33,27],[51,-70],[99,357],[53,8]],[[25472,61510],[1,-87],[53,-3],[-5,-160],[-45,-256],[24,-91],[-29,-212],[18,-56],[-32,-299],[-55,-156],[-50,-19],[-55,-205]],[[25297,59966],[-83,0],[22,667],[2,468]],[[31359,37147],[-200,-81],[-109,814],[-150,663],[88,572],[-146,250],[-37,426],[-136,402]],[[30669,40193],[175,638],[-119,496],[63,199],[-49,219],[108,295],[6,503],[13,415],[60,200],[-240,951]],[[30686,44109],[206,-50],[143,13],[62,179],[243,239],[147,222],[363,100],[-29,-443],[34,-227],[-23,-396],[302,-529],[311,-98],[109,-220],[188,-117],[115,-172],[175,6],[161,-175],[12,-342],[55,-172],[3,-255],[-81,-10],[107,-688],[533,-24],[-41,-342],[30,-233],[151,-166],[66,-367],[-49,-465],[-77,-259],[27,-337],[-87,-122]],[[33842,38659],[-4,182],[-259,302],[-258,9],[-484,-172],[-133,-520],[-7,-318],[-110,-708]],[[34826,35372],[54,341],[38,350],[0,325],[-100,107],[-104,-96],[-103,26],[-33,228],[-26,541],[-52,177],[-187,160],[-114,-116],[-293,113],[18,802],[-82,329]],[[30686,44109],[-157,-102],[-126,68],[18,898],[-228,-348],[-245,15],[-105,315],[-184,34],[59,254],[-155,359],[-115,532],[73,108],[0,250],[168,171],[-28,319],[71,206],[20,275],[318,402],[227,114],[37,89],[251,-28]],[[30585,48040],[125,1620],[6,256],[-43,339],[-123,215],[1,430],[156,97],[56,-61],[9,226],[-162,61],[-4,370],[541,-13],[92,203],[77,-187],[55,-349],[52,73]],[[31423,51320],[153,-312],[216,38],[54,181],[206,138],[115,97],[32,250],[198,168],[-15,124],[-235,51],[-39,372],[12,396],[-125,153],[52,55],[206,-76],[221,-148],[80,140],[200,92],[310,221],[102,225],[-37,167]],[[33129,53652],[145,26],[64,-136],[-36,-259],[96,-90],[63,-274],[-77,-209],[-44,-502],[71,-299],[20,-274],[171,-277],[137,-29],[30,116],[88,25],[126,104],[90,157],[154,-50],[67,21]],[[34294,51702],[151,-48],[25,120],[-46,118],[28,171],[112,-53],[131,61],[159,-125]],[[34854,51946],[121,-122],[86,160],[62,-25],[38,-166],[133,42],[107,224],[85,436],[164,540]],[[35650,53035],[95,28],[69,-327],[155,-1033],[149,-97],[7,-408],[-208,-487],[86,-178],[491,-92],[10,-593],[211,388],[349,-212],[462,-361],[135,-346],[-45,-327],[323,182],[540,-313],[415,23],[411,-489],[355,-662],[214,-170],[237,-24],[101,-186],[94,-752],[46,-358],[-110,-977],[-142,-385],[-391,-822],[-177,-668],[-206,-513],[-69,-11],[-78,-435],[20,-1107],[-77,-910],[-30,-390],[-88,-233],[-49,-790],[-282,-771],[-47,-610],[-225,-256],[-65,-355],[-302,2],[-437,-227],[-195,-263],[-311,-173],[-327,-470],[-235,-586],[-41,-441],[46,-326],[-51,-597],[-63,-289],[-195,-325],[-308,-1040],[-244,-468],[-189,-277],[-127,-562],[-183,-337]],[[35174,30629],[-77,334],[122,280],[-160,402],[-218,327],[-286,379],[-103,-18],[-279,457],[-180,-63]],[[81723,53254],[110,221],[236,323]],[[82069,53798],[-13,-291],[-16,-377],[-133,19],[-58,-202],[-126,307]],[[75471,66988],[113,-189],[-20,-363],[-227,-17],[-234,39],[-175,-92],[-252,224],[-6,119]],[[74670,66709],[184,439],[150,150],[198,-137],[147,-14],[122,-159]],[[58175,37528],[-393,-435],[-249,-442],[-93,-393],[-83,-222],[-152,-47],[-48,-283],[-28,-184],[-178,-138],[-226,29],[-133,166],[-117,71],[-135,-137],[-68,-283],[-132,-177],[-139,-264],[-199,-60],[-62,207],[26,360],[-165,562],[-75,88]],[[55526,35946],[0,1725],[274,20],[8,2105],[207,19],[428,207],[106,-243],[177,231],[85,2],[156,133]],[[56967,40145],[50,-44]],[[57017,40101],[107,-473],[56,-105],[87,-342],[315,-649],[119,-64],[0,-208],[82,-375],[215,-90],[177,-267]],[[54244,54965],[229,44],[52,152],[46,-11],[69,-134],[350,226],[118,230],[145,207],[-28,208],[78,54],[269,-36],[261,273],[201,645],[141,239],[176,101]],[[56351,57163],[31,-253],[160,-369],[1,-241],[-45,-246],[18,-184],[96,-170]],[[56612,55700],[212,-258]],[[56824,55442],[152,-239],[2,-192],[187,-308],[116,-255],[70,-355],[208,-234],[44,-187]],[[57603,53672],[-91,-63],[-178,14],[-209,62],[-104,-51],[-41,-143],[-90,-18],[-110,125],[-309,-295],[-127,60],[-38,-46],[-83,-357],[-207,115],[-203,59],[-177,218],[-229,200],[-149,-190],[-108,-300],[-25,-412]],[[55125,52650],[-178,33],[-188,99],[-166,-313],[-146,-550]],[[54447,51919],[-29,172],[-12,269],[-127,190],[-103,305],[-23,212],[-132,309],[23,176],[-28,249],[21,458],[67,107],[140,599]],[[32315,78082],[202,-79],[257,16],[-137,-242],[-102,-38],[-353,250],[-69,198],[105,183],[97,-288]],[[32831,79592],[-135,-11],[-360,186],[-258,279],[96,49],[365,-148],[284,-247],[8,-108]],[[15692,79240],[-140,-82],[-456,269],[-84,209],[-248,207],[-50,168],[-286,107],[-107,321],[24,137],[291,-129],[171,-89],[261,-63],[94,-204],[138,-280],[277,-244],[115,-327]],[[34407,80527],[-184,-517],[181,199],[187,-126],[-98,-206],[247,-162],[128,144],[277,-182],[-86,-433],[194,101],[36,-313],[86,-367],[-117,-520],[-125,-22],[-183,111],[60,484],[-77,75],[-322,-513],[-166,21],[196,277],[-267,144],[-298,-35],[-539,18],[-43,175],[173,208],[-121,160],[234,356],[287,941],[172,336],[241,204],[129,-26],[-54,-160],[-148,-372]],[[13005,82584],[131,-76],[267,47],[-84,-671],[242,-475],[-111,1],[-167,270],[-103,272],[-140,184],[-51,260],[16,188]],[[27981,87304],[-108,-310],[-123,50],[-73,176],[13,41],[107,177],[114,-13],[70,-121]],[[27250,87631],[-325,-326],[-196,13],[-61,160],[207,273],[381,-6],[-6,-114]],[[26344,89371],[51,-259],[143,91],[161,-155],[304,-203],[318,-184],[25,-281],[204,46],[199,-196],[-247,-186],[-432,142],[-156,266],[-275,-314],[-396,-306],[-95,346],[-377,-57],[242,292],[35,465],[95,542],[201,-49]],[[28926,90253],[-312,-30],[-69,289],[118,331],[255,82],[217,-163],[3,-253],[-32,-82],[-180,-174]],[[23431,91410],[-173,-207],[-374,179],[-226,-65],[-380,266],[245,183],[194,256],[295,-168],[166,-106],[84,-112],[169,-226]],[[31350,77248],[-181,334],[0,805],[-123,171],[-187,-100],[-92,155],[-212,-446],[-84,-460],[-99,-269],[-118,-91],[-89,-30],[-28,-146],[-512,0],[-422,-4],[-125,-109],[-294,-425],[-34,-46],[-89,-231],[-255,1],[-273,-3],[-125,-93],[44,-116],[25,-181],[-5,-60],[-363,-293],[-286,-93],[-323,-316],[-70,0],[-94,93],[-31,85],[6,61],[61,207],[131,325],[81,349],[-56,514],[-59,536],[-290,277],[35,105],[-41,73],[-76,0],[-56,93],[-14,140],[-54,-61],[-75,18],[17,59],[-65,58],[-27,155],[-216,189],[-224,197],[-272,229],[-261,214],[-248,-167],[-91,-6],[-342,154],[-225,-77],[-269,183],[-284,94],[-194,36],[-86,100],[-49,325],[-94,-3],[-1,-227],[-575,0],[-951,0],[-944,0],[-833,0],[-834,0],[-819,0],[-847,0],[-273,0],[-825,0],[-788,0]],[[15878,79530],[-38,1],[-537,581],[-199,255],[-503,244],[-155,523],[40,363],[-356,252],[-48,476],[-336,429],[-6,304]],[[13740,82958],[154,285],[-7,373],[-473,376],[-284,674],[-173,424],[-255,266],[-187,242],[-147,306],[-279,-192],[-270,-330],[-247,388],[-194,259],[-271,164],[-273,17],[1,3364],[2,2193]],[[10837,91767],[518,-142],[438,-285],[289,-54],[244,247],[336,184],[413,-72],[416,259],[455,148],[191,-245],[207,138],[62,278],[192,-63],[470,-530],[369,401],[38,-449],[341,97],[105,173],[337,-34],[424,-248],[650,-217],[383,-100],[272,38],[374,-300],[-390,-293],[502,-127],[750,70],[236,103],[296,-354],[302,299],[-283,251],[179,202],[338,27],[223,59],[224,-141],[279,-321],[310,47],[491,-266],[431,94],[405,-14],[-32,367],[247,103],[431,-200],[-2,-559],[177,471],[223,-16],[126,594],[-298,364],[-324,239],[22,653],[329,429],[366,-95],[281,-261],[378,-666],[-247,-290],[517,-120],[-1,-604],[371,463],[332,-380],[-83,-438],[269,-399],[290,427],[202,510],[16,649],[394,-46],[411,-87],[373,-293],[17,-293],[-207,-315],[196,-316],[-36,-288],[-544,-413],[-386,-91],[-287,178],[-83,-297],[-268,-498],[-81,-259],[-322,-399],[-397,-39],[-220,-250],[-18,-384],[-323,-74],[-340,-479],[-301,-665],[-108,-466],[-16,-686],[409,-99],[125,-553],[130,-448],[388,117],[517,-256],[277,-225],[199,-279],[348,-163],[294,-248],[459,-34],[302,-58],[-45,-511],[86,-594],[201,-661],[414,-561],[214,192],[150,607],[-145,934],[-196,311],[445,276],[314,415],[154,411],[-23,395],[-188,502],[-338,445],[328,619],[-121,535],[-93,922],[194,137],[476,-161],[286,-57],[230,155],[258,-200],[342,-343],[85,-229],[495,-45],[-8,-496],[92,-747],[254,-92],[201,-348],[402,328],[266,652],[184,274],[216,-527],[362,-754],[307,-709],[-112,-371],[370,-333],[250,-338],[442,-152],[179,-189],[110,-500],[216,-78],[112,-223],[20,-664],[-202,-222],[-199,-207],[-458,-210],[-349,-486],[-470,-96],[-594,125],[-417,4],[-287,-41],[-233,-424],[-354,-262],[-401,-782],[-320,-545],[236,97],[446,776],[583,493],[415,58],[246,-289],[-262,-397],[88,-637],[91,-446],[361,-295],[459,86],[278,664],[19,-429],[180,-214],[-344,-387],[-615,-351],[-276,-239],[-310,-426],[-211,44],[-11,500],[483,488],[-445,-19],[-309,-72]],[[18287,93781],[-139,-277],[618,179],[386,-298],[314,302],[254,-194],[227,-580],[140,244],[-197,606],[244,86],[276,-94],[311,-239],[175,-575],[86,-417],[466,-293],[502,-279],[-31,-260],[-456,-48],[178,-227],[-94,-217],[-503,93],[-478,160],[-322,-36],[-522,-201],[-704,-88],[-494,-56],[-151,279],[-379,161],[-246,-66],[-343,468],[185,62],[429,101],[392,-26],[362,103],[-537,138],[-594,-47],[-394,12],[-146,217],[644,237],[-428,-9],[-485,156],[233,443],[193,235],[744,359],[284,-114]],[[20972,93958],[-244,-390],[-434,413],[95,83],[372,24],[211,-130]],[[28794,93770],[25,-163],[-296,17],[-299,13],[-304,-80],[-80,36],[-306,313],[12,213],[133,39],[636,-63],[479,-325]],[[25955,93803],[219,-369],[256,477],[704,242],[477,-611],[-42,-387],[550,172],[263,235],[616,-299],[383,-282],[36,-258],[515,134],[290,-376],[670,-234],[242,-238],[263,-553],[-510,-275],[654,-386],[441,-130],[400,-543],[437,-39],[-87,-414],[-487,-687],[-342,253],[-437,568],[-359,-74],[-35,-338],[292,-344],[377,-272],[114,-157],[181,-584],[-96,-425],[-350,160],[-697,473],[393,-509],[289,-357],[45,-206],[-753,236],[-596,343],[-337,287],[97,167],[-414,304],[-405,286],[5,-171],[-803,-94],[-235,203],[183,435],[522,10],[571,76],[-92,211],[96,294],[360,576],[-77,261],[-107,203],[-425,286],[-563,201],[178,150],[-294,367],[-245,34],[-219,201],[-149,-175],[-503,-76],[-1011,132],[-588,174],[-450,89],[-231,207],[290,270],[-394,2],[-88,599],[213,528],[286,241],[717,158],[-204,-382]],[[22123,94208],[331,-124],[496,75],[72,-172],[-259,-283],[420,-254],[-50,-532],[-455,-229],[-268,50],[-192,225],[-690,456],[5,189],[567,-73],[-306,386],[329,286]],[[24112,93575],[-298,-442],[-317,22],[-173,519],[4,294],[145,251],[276,161],[579,-20],[530,-144],[-415,-526],[-331,-115]],[[16539,92755],[-731,-285],[-147,259],[-641,312],[119,250],[192,432],[241,388],[-272,362],[939,93],[397,-123],[709,-33],[270,-171],[298,-249],[-349,-149],[-681,-415],[-344,-414],[0,-257]],[[23996,94879],[-151,-229],[-403,44],[-337,155],[148,266],[399,159],[243,-208],[101,-187]],[[22639,95907],[212,-273],[9,-303],[-127,-440],[-458,-60],[-298,94],[5,345],[-455,-46],[-18,457],[299,-18],[419,201],[390,-34],[22,77]],[[19941,95601],[109,-210],[247,99],[291,-26],[49,-289],[-169,-281],[-940,-91],[-701,-256],[-423,-14],[-35,193],[577,261],[-1255,-70],[-389,106],[379,577],[262,165],[782,-199],[493,-350],[485,-45],[-397,565],[255,215],[286,-68],[94,-282]],[[23699,96131],[308,-190],[547,1],[240,-194],[-64,-222],[319,-134],[177,-140],[374,-26],[406,-50],[441,128],[566,51],[451,-42],[298,-223],[62,-244],[-174,-157],[-414,-127],[-355,72],[-797,-91],[-570,-11],[-449,73],[-738,190],[-96,325],[-34,293],[-279,258],[-574,72],[-322,183],[104,242],[573,-37]],[[17722,96454],[-38,-454],[-214,-205],[-259,-29],[-517,-252],[-444,-91],[-377,128],[472,442],[570,383],[426,-9],[381,87]],[[23933,96380],[-126,-17],[-521,38],[-74,165],[559,-9],[195,-109],[-33,-68]],[[19392,96485],[-518,-170],[-411,191],[224,188],[406,60],[392,-92],[-93,-177]],[[19538,97019],[-339,-115],[-461,1],[5,84],[285,177],[149,-27],[361,-120]],[[23380,96697],[-411,-122],[-226,138],[-119,221],[-22,245],[360,-24],[162,-39],[332,-205],[-76,-214]],[[22205,96856],[108,-247],[-453,66],[-457,192],[-619,21],[268,176],[-335,142],[-21,227],[546,-81],[751,-215],[212,-281]],[[25828,97644],[334,-190],[-381,-176],[-513,-445],[-492,-42],[-575,76],[-299,240],[4,215],[220,157],[-508,-4],[-306,196],[-176,268],[193,262],[192,180],[285,42],[-122,135],[646,30],[355,-315],[468,-127],[455,-112],[220,-390]],[[30972,99681],[742,-47],[597,-75],[508,-161],[-12,-157],[-678,-257],[-672,-119],[-251,-133],[605,3],[-656,-358],[-452,-167],[-476,-483],[-573,-98],[-177,-120],[-841,-64],[383,-74],[-192,-105],[230,-292],[-264,-202],[-429,-167],[-132,-232],[-388,-176],[39,-134],[475,23],[6,-144],[-742,-355],[-726,163],[-816,-91],[-414,71],[-525,31],[-35,284],[514,133],[-137,427],[170,41],[742,-255],[-379,379],[-450,113],[225,229],[492,141],[79,206],[-392,231],[-118,304],[759,-26],[220,-64],[433,216],[-625,68],[-972,-38],[-491,201],[-232,239],[-324,173],[-61,202],[413,112],[324,19],[545,96],[409,220],[344,-30],[300,-166],[211,319],[367,95],[498,65],[849,24],[148,-63],[802,100],[601,-38],[602,-37]],[[52900,78285],[-22,-242],[-122,-100],[-206,75],[-60,-239],[-132,-19],[-48,94],[-156,-200],[-134,-28],[-120,126]],[[51900,77752],[-95,259],[-133,-92],[5,267],[203,332],[-9,150],[126,-54],[77,101]],[[52074,78715],[236,-4],[57,128],[298,-181]],[[31400,18145],[-92,-239],[-238,-183],[-137,19],[-164,48],[-202,177],[-291,86],[-350,330],[-283,317],[-383,662],[229,-124],[390,-395],[369,-212],[143,271],[90,405],[256,244],[198,-70]],[[30952,19680],[-247,4],[-134,-145],[-250,-213],[-45,-552],[-118,-14],[-313,192],[-318,412],[-346,338],[-87,374],[79,346],[-140,393],[-36,1007],[119,568],[293,457],[-422,172],[265,522],[94,982],[309,-208],[145,1224],[-186,157],[-87,-738],[-175,83],[87,845],[95,1095],[127,404],[-80,576],[-22,666],[117,19],[170,954],[192,945],[118,881],[-64,885],[83,487],[-34,730],[163,721],[50,1143],[89,1227],[87,1321],[-20,967],[-58,832]],[[30452,39739],[143,151],[74,303]],[[80649,61615],[-240,-284],[-228,183],[-8,509],[137,267],[304,166],[159,-14],[62,-226],[-122,-260],[-64,-341]],[[86288,75628],[-179,348],[-111,-331],[-429,-254],[44,-312],[-241,22],[-131,185],[-191,-419],[-306,-318],[-227,-379]],[[84517,74170],[-388,-171],[-204,-277],[-300,-161],[148,274],[-58,230],[220,397],[-147,310],[-242,-209],[-314,-411],[-171,-381],[-272,-29],[-142,-275],[147,-400],[227,-97],[9,-265],[220,-173],[311,422],[247,-230],[179,-15],[45,-310],[-393,-165],[-130,-319],[-270,-296],[-142,-414],[299,-325],[109,-581],[169,-541],[189,-454],[-5,-439],[-174,-161],[66,-315],[164,-184],[-43,-481],[-71,-468],[-155,-53],[-203,-640],[-225,-775],[-258,-705],[-382,-545],[-386,-498],[-313,-68],[-170,-262],[-96,192],[-157,-294],[-388,-296],[-294,-90],[-95,-624],[-154,-35],[-73,429],[66,228],[-373,189],[-131,-96]],[[80013,63313],[-280,154],[-132,240],[44,340],[-254,108],[-134,222],[-236,-315],[-271,-68],[-221,3],[-149,-145]],[[78380,63852],[-144,-86],[42,-676],[-148,16],[-25,139]],[[78105,63245],[-9,244],[-203,-172],[-121,109],[-206,222],[81,490],[-176,115],[-66,544],[-293,-98],[33,701],[263,493],[11,487],[-8,452],[-121,141],[-93,348],[-162,-44]],[[77035,67277],[-300,89],[94,248],[-130,367],[-198,-249],[-233,145],[-321,-376],[-252,-439],[-224,-74]],[[74670,66709],[-23,465],[-170,-124]],[[74477,67050],[-324,57],[-314,136],[-225,259],[-216,117],[-93,284],[-157,84],[-280,385],[-223,182],[-115,-141]],[[72530,68413],[-386,413],[-273,374],[-78,651],[200,-79],[9,301],[-111,303],[28,482],[-298,692]],[[71621,71550],[-457,239],[-82,454],[-205,276]],[[70827,72688],[-42,337],[10,230],[-169,134],[-91,-59],[-70,546]],[[70465,73876],[79,136],[-39,138],[266,279],[192,116],[294,-80],[105,378],[356,70],[99,234],[438,320],[39,134]],[[72294,75601],[-22,337],[190,154],[-250,1026],[550,236],[143,131],[200,1058],[551,-194],[155,267],[13,592],[230,56],[212,393]],[[74266,79657],[109,49]],[[74375,79706],[73,-413],[233,-313],[396,-222],[192,-476],[-107,-690],[100,-256],[330,-101],[374,-83],[336,-368],[171,-66],[127,-544],[163,-351],[306,14],[574,-133],[369,82],[274,-88],[411,-359],[336,1],[123,-184],[324,318],[448,205],[417,22],[324,208],[200,316],[194,199],[-45,195],[-89,227],[146,381],[156,-53],[286,-120],[277,313],[423,229],[204,391],[195,168],[404,78],[219,-66],[30,210],[-251,413],[-223,189],[-214,-219],[-274,92],[-157,-74],[-72,241],[197,590],[135,446]],[[82410,80055],[333,-223],[392,373],[-3,260],[251,627],[155,189],[-4,326],[-152,141],[229,294],[345,106],[369,16],[415,-176],[244,-217],[172,-596],[104,-254],[97,-363],[103,-579],[483,-189],[329,-420],[112,-555],[423,-1],[240,233],[459,175],[-146,-532],[-107,-216],[-96,-647],[-186,-575],[-338,104],[-238,-208],[73,-506],[-40,-698],[-142,-16],[2,-300]],[[49206,53531],[-126,-7],[-194,116],[-178,-7],[-329,-103],[-193,-170],[-275,-217],[-54,15]],[[47857,53158],[22,487],[26,74],[-8,233],[-118,247],[-88,40],[-81,162],[60,262],[-28,286],[13,172]],[[47655,55121],[44,0],[17,258],[-22,114],[27,82],[103,71],[-69,473],[-64,245],[23,200],[55,46]],[[47769,56610],[36,54],[77,-89],[215,-5],[51,172],[48,-11],[80,67],[43,-253],[65,74],[114,88]],[[49214,56277],[74,-841],[-117,-496],[-73,-667],[121,-509],[-13,-233]],[[53632,51919],[-35,32],[-164,-76],[-169,79],[-132,-38]],[[53132,51916],[-452,13]],[[52680,51929],[40,466],[-108,391],[-127,100],[-56,265],[-72,85],[4,163]],[[52361,53399],[71,418],[132,570],[81,6],[165,345],[105,10],[156,-243],[191,199],[26,246],[63,238],[43,299],[148,243],[56,414],[59,132],[39,307],[74,377],[234,457],[14,196],[31,107],[-110,235]],[[53939,57955],[9,188],[78,34]],[[54026,58177],[111,-378],[18,-392],[-10,-393],[151,-537],[-155,6],[-78,-42],[-127,60],[-60,-279],[164,-345],[121,-100],[39,-245],[87,-407],[-43,-160]],[[54447,51919],[-20,-319],[-220,140],[-225,156],[-350,23]],[[58564,52653],[-16,-691],[111,-80],[-89,-210],[-107,-157],[-106,-308],[-59,-274],[-15,-475],[-65,-225],[-2,-446]],[[58216,49787],[-80,-165],[-10,-351],[-38,-46],[-26,-323]],[[58149,47921],[50,-544],[-27,-307]],[[58172,47070],[55,-343],[161,-330]],[[58388,46397],[150,-745]],[[58538,45652],[-109,60],[-373,-99],[-75,-71],[-79,-377],[62,-261],[-49,-699],[-34,-593],[75,-105],[194,-230],[76,107],[23,-637],[-212,5],[-114,325],[-103,252],[-213,82],[-62,310],[-170,-187],[-222,83],[-93,268],[-176,55],[-131,-15],[-15,184],[-96,15]],[[53422,46976],[-39,183]],[[53609,47755],[73,-60],[95,226],[152,-6],[17,-167],[104,-105],[164,370],[161,289],[71,189],[-10,486],[121,574],[127,304],[183,285],[32,189],[7,216],[45,205],[-14,335],[34,524],[55,368],[83,316],[16,357]],[[57603,53672],[169,-488],[124,-71],[75,99],[128,-39],[155,125],[66,-252],[244,-393]],[[53309,47603],[-228,626]],[[53081,48229],[212,326],[-105,391],[95,148],[187,73],[23,261],[148,-283],[245,-25],[85,279],[36,393],[-31,461],[-131,350],[120,684],[-69,117],[-207,-48],[-78,305],[21,258]],[[29063,50490],[-119,140],[-137,195],[-79,-94],[-235,82],[-68,255],[-52,-10],[-278,338]],[[28095,51396],[-37,183],[103,44],[-12,296],[65,214],[138,40],[117,371],[106,310],[-102,141],[52,343],[-62,540],[59,155],[-44,500],[-112,315]],[[28366,54848],[36,287],[89,-43],[52,176],[-64,348],[34,86]],[[28513,55702],[143,-18],[209,412],[114,63],[3,195],[51,500],[159,274],[175,11],[22,123],[218,-49],[218,298],[109,132],[134,285],[98,-36],[73,-156],[-54,-199]],[[30185,57537],[-178,-99],[-71,-295],[-107,-169],[-81,-220],[-34,-422],[-77,-345],[144,-40],[35,-271],[62,-130],[21,-238],[-33,-219],[10,-123],[69,-49],[66,-207],[357,57],[161,-75],[196,-508],[112,63],[200,-32],[158,68],[99,-102],[-50,-318],[-62,-199],[-22,-423],[56,-393],[79,-175],[9,-133],[-140,-294],[100,-130],[74,-207],[85,-589]],[[30585,48040],[-139,314],[-83,14],[179,602],[-213,276],[-166,-51],[-101,103],[-153,-157],[-207,74],[-163,620],[-129,152],[-89,279],[-184,280],[-74,-56]],[[26954,55439],[-151,131],[-56,124],[32,103],[-11,130],[-77,142],[-109,116],[-95,76],[-19,173],[-73,105],[18,-172],[-55,-141],[-64,164],[-89,58],[-38,120],[2,179],[36,187],[-78,83],[64,114]],[[26191,57131],[42,76],[183,-156],[63,77],[89,-50],[46,-121],[82,-40],[66,126]],[[26762,57043],[70,-321],[108,-238],[130,-252]],[[27070,56232],[-107,-53],[1,-238],[58,-88],[-41,-70],[10,-107],[-23,-120],[-14,-117]],[[27147,64280],[240,-42],[219,-7],[261,-201],[110,-216],[260,66],[98,-138],[235,-366],[173,-267],[92,8],[165,-120],[-20,-167],[205,-24],[210,-242],[-33,-138],[-185,-75],[-187,-29],[-191,46],[-398,-57],[186,329],[-113,154],[-179,39],[-96,171],[-66,336],[-157,-23],[-259,159],[-83,124],[-362,91],[-97,115],[104,148],[-273,30],[-199,-307],[-115,-8],[-40,-144],[-138,-65],[-118,56],[146,183],[60,213],[126,131],[142,116],[210,56],[67,65]],[[59092,71341],[19,3],[40,143],[200,-8],[253,176],[-188,-251],[21,-111]],[[59437,71293],[-30,21],[-53,-45],[-42,12],[-14,-22],[-5,59],[-20,37],[-54,6],[-75,-51],[-52,31]],[[59437,71293],[8,-48],[-285,-240],[-136,77],[-64,237],[132,22]],[[53776,79457],[-157,254],[-141,142],[-30,249],[-49,176],[202,129],[103,147],[200,114],[70,113],[73,-68],[124,62]],[[54171,80775],[132,-191],[207,-51],[-17,-163],[151,-122],[41,153],[191,-66],[26,-185],[207,-36],[127,-291]],[[55236,79823],[-82,-1],[-43,-106],[-64,-26],[-18,-134],[-54,-28],[-7,-55],[-95,-61],[-123,10],[-39,-130]],[[52756,83065],[4,-228],[281,-138],[-3,-210],[283,111],[156,162],[313,-233],[132,-189]],[[53922,82340],[64,-300],[-77,-158],[101,-210],[69,-316],[-22,-204],[114,-377]],[[52074,78715],[35,421],[140,404],[-400,109],[-131,155]],[[51718,79804],[16,259],[-56,133]],[[51710,80596],[-47,619],[167,0],[70,222],[69,541],[-51,200]],[[51918,82178],[54,125],[232,32],[52,-130],[188,291],[-63,222],[-13,335]],[[52368,83053],[210,-78],[178,90]],[[61966,58083],[66,-183],[-9,-245],[-158,-142],[119,-161]],[[61984,57352],[-102,-317]],[[61882,57035],[-62,106],[-67,-42],[-155,10],[-4,180],[-22,163],[94,277],[98,261]],[[61764,57990],[119,-51],[83,144]],[[53524,83435],[-166,-478],[-291,333],[-39,246],[408,195],[88,-296]],[[52368,83053],[-113,328],[-8,604],[46,159],[80,177],[244,37],[98,163],[223,167],[-9,-304],[-82,-192],[33,-166],[151,-89],[-68,-223],[-83,64],[-200,-425],[76,-288]],[[30080,62227],[34,101],[217,-3],[165,-152],[73,15],[50,-209],[152,11],[-9,-176],[124,-21],[136,-217],[-103,-240],[-132,128],[-127,-25],[-92,28],[-50,-107],[-106,-37],[-43,144],[-92,-85],[-111,-405],[-71,94],[-14,170]],[[30081,61241],[5,161],[-71,177],[68,99],[21,228],[-24,321]],[[53333,64447],[-952,-1126],[-804,-1161],[-392,-263]],[[51185,61897],[-308,-58],[-3,376],[-129,96],[-173,169],[-66,277],[-937,1289],[-937,1289]],[[48632,65335],[-1045,1431]],[[47587,66766],[6,114],[-1,40]],[[47592,66920],[-2,700],[449,436],[277,90],[227,159],[107,295],[324,234],[12,438],[161,51],[126,219],[363,99],[51,230],[-73,125],[-96,624],[-17,359],[-104,379]],[[49397,71358],[267,323],[300,102],[175,244],[268,180],[471,105],[459,48],[140,-87],[262,232],[297,5],[113,-137],[190,35]],[[52339,72408],[-57,-303],[44,-563],[-65,-487],[-171,-330],[24,-445],[227,-352],[3,-143],[171,-238],[118,-1061]],[[52633,68486],[90,-522],[15,-274],[-49,-482],[21,-270],[-36,-323],[24,-371],[-110,-247],[164,-431],[11,-253],[99,-330],[130,109],[219,-275],[122,-370]],[[27693,48568],[148,442],[-60,258],[-106,-275],[-166,259],[56,167],[-47,536],[97,89],[52,368],[105,381],[-20,241],[153,126],[190,236]],[[29063,50490],[38,-449],[-86,-384],[-303,-619],[-334,-233],[-170,-514],[-53,-398],[-157,-243],[-116,298],[-113,64],[-114,-47],[-8,216],[79,141],[-33,246]],[[59700,68010],[-78,-238],[-60,-446],[-75,-308],[-65,-103],[-93,191],[-125,263],[-198,847],[-29,-53],[115,-624],[171,-594],[210,-920],[102,-321],[90,-334],[249,-654],[-55,-103],[9,-384],[323,-530],[49,-121]],[[60240,63578],[-1102,0],[-1077,0],[-1117,0]],[[56944,63578],[0,2175],[0,2101],[-83,476],[71,365],[-43,253],[101,283]],[[56990,69231],[369,10],[268,-156],[275,-175],[129,-92],[214,188],[114,169],[245,49],[198,-75],[75,-293],[65,193],[222,-140],[217,-33],[137,149]],[[59518,69025],[182,-1015]],[[61764,57990],[-95,191],[-114,346],[-124,190],[-71,204],[-242,237],[-191,7],[-67,124],[-163,-139],[-168,268],[-87,-441],[-323,124]],[[60119,59101],[-30,236],[120,868],[27,393],[88,181],[204,97],[141,337]],[[60669,61213],[161,-684],[77,-542],[152,-288],[379,-558],[154,-336],[151,-341],[87,-203],[136,-178]],[[47490,75324],[14,420],[-114,257],[393,426],[340,-106],[373,3],[296,-101],[230,31],[449,-19]],[[49471,76235],[111,-230],[511,-268],[101,127],[313,-267],[322,77]],[[50829,75674],[15,-344],[-263,-393],[-356,-125],[-25,-199],[-171,-327],[-107,-481],[108,-338],[-160,-263],[-60,-384],[-210,-118],[-197,-454],[-352,-9],[-265,11],[-174,-209],[-106,-223],[-136,49],[-103,199],[-79,340],[-259,92]],[[47929,72498],[-23,195],[103,222],[38,161],[-96,175],[77,388],[-111,355],[120,48],[11,280],[45,86],[3,461],[129,160],[-78,296],[-162,21],[-47,-75],[-164,0],[-70,289],[-113,-86],[-101,-150]],[[56753,84725],[32,349],[-102,-75],[-176,210],[-24,340],[351,164],[350,86],[301,-97],[287,17]],[[57772,85719],[42,-103],[-198,-341],[83,-551],[-120,-187]],[[57579,84537],[-229,1],[-239,219],[-121,73],[-237,-105]],[[61882,57035],[-61,-209],[103,-325],[102,-285],[106,-210],[909,-702],[233,4]],[[63274,55308],[-785,-1773],[-362,-26],[-247,-417],[-178,-11],[-76,-186]],[[61626,52895],[-190,0],[-112,200],[-254,-247],[-82,-247],[-185,47],[-62,68],[-65,-16],[-87,6],[-352,502],[-193,0],[-95,194],[0,332],[-145,99]],[[59804,53833],[-164,643],[-127,137],[-48,236],[-141,288],[-171,42],[95,337],[147,14],[42,181]],[[59437,55711],[-4,531]],[[59433,56242],[82,618],[132,166],[28,241],[119,451],[168,293],[112,582],[45,508]],[[57942,91385],[-41,-414],[425,-394],[-256,-445],[323,-673],[-187,-506],[250,-440],[-113,-385],[411,-405],[-105,-301],[-258,-341],[-594,-755]],[[57797,86326],[-504,-47],[-489,-216],[-452,-125],[-161,323],[-269,193],[62,582],[-135,533],[133,345],[252,371],[635,640],[185,124],[-28,250],[-387,279]],[[56639,89578],[-93,230],[-8,910],[-433,402],[-371,289]],[[55734,91409],[167,156],[309,-312],[362,29],[298,-143],[265,262],[137,433],[431,200],[356,-235],[-117,-414]],[[99547,40335],[96,-171],[-46,-308],[-172,-81],[-153,73],[-27,260],[107,203],[126,-74],[69,98]],[[0,41087],[57,27],[-34,-284],[-23,-32],[99822,-145],[-177,-124],[-36,220],[139,121],[88,33],[-99836,184]],[[33000,19946],[333,354],[236,-148],[167,237],[222,-266],[-83,-207],[-375,-177],[-125,207],[-236,-266],[-139,266]],[[34854,51946],[70,252],[24,269],[48,253],[-107,349]],[[34889,53069],[-22,404],[144,508]],[[35011,53981],[95,-65],[204,-140],[294,-499],[46,-242]],[[52655,75484],[-92,-456],[-126,120],[-64,398],[56,219],[179,226],[47,-507]],[[51576,79843],[62,-52],[80,13]],[[51900,77752],[-11,-167],[82,-222],[-97,-180],[72,-457],[151,-75],[-32,-256]],[[52065,76395],[-252,-334],[-548,160],[-404,-192],[-32,-355]],[[49471,76235],[144,354],[53,1177],[-287,620],[-205,299],[-424,227],[-28,431],[360,129],[466,-152],[-88,669],[263,-254],[646,461],[84,484],[243,119]],[[53081,48229],[-285,596],[-184,488],[-169,610],[9,196],[61,189],[67,430],[56,438]],[[52636,51176],[94,35],[404,-6],[-2,711]],[[48278,82406],[-210,122],[-172,-9],[57,317],[-57,317]],[[47896,83153],[233,24],[298,-365],[-149,-406]],[[49165,85222],[-297,-639],[283,81],[304,-3],[-72,-481],[-250,-530],[287,-38],[22,-62],[248,-697],[190,-95],[171,-673],[79,-233],[337,-113],[-34,-378],[-142,-173],[111,-305],[-250,-310],[-371,6],[-473,-163],[-130,116],[-183,-276],[-257,67],[-195,-226],[-148,118],[407,621],[249,127],[-2,1],[-434,98],[-79,235],[291,183],[-152,319],[52,387],[413,-54],[1,0],[40,343],[-186,364],[-4,8],[-337,104],[-66,160],[101,264],[-92,163],[-149,-279],[-17,569],[-140,301],[101,611],[216,480],[222,-47],[335,49]],[[61542,75120],[42,252],[-70,403],[-160,218],[-154,68],[-102,181]],[[61098,76242],[34,70],[235,-101],[409,-96],[378,-283],[48,-110],[169,93],[259,-124],[85,-242],[175,-137]],[[62106,74858],[-268,290],[-296,-28]],[[50294,54083],[-436,-346],[-154,-203],[-250,-171],[-248,168]],[[50006,57090],[-20,-184],[116,-305],[-1,-429],[27,-466],[69,-215],[-61,-532],[22,-294],[74,-375],[62,-207]],[[47655,55121],[-78,15],[-57,-238],[-78,3],[-55,126],[19,237],[-116,362],[-73,-67],[-59,-13]],[[47158,55546],[-77,-34],[3,217],[-44,155],[9,171],[-60,249],[-78,211],[-222,1],[-65,-112],[-76,-13],[-48,-128],[-32,-163],[-148,-260]],[[46320,55840],[-122,349],[-108,232],[-71,76],[-69,118],[-32,261],[-41,130],[-80,97]],[[45797,57103],[123,288],[84,-11],[73,99],[61,1],[44,78],[-24,196],[31,62],[5,200]],[[46194,58016],[134,-6],[200,-144],[61,13],[21,66],[151,-47],[40,33]],[[46801,57931],[16,-216],[44,1],[73,78],[46,-19],[77,-150],[119,-48],[76,128],[90,79],[67,83],[55,-15],[62,-130],[33,-163],[114,-248],[-57,-152],[-11,-192],[59,58],[35,-69],[-15,-176],[85,-170]],[[45321,58350],[36,262]],[[45357,58612],[302,17],[63,140],[88,9],[110,-145],[86,-3],[92,99],[56,-170],[-120,-133],[-121,11],[-119,124],[-103,-136],[-50,-5],[-67,-83],[-253,13]],[[45797,57103],[-149,247],[-117,39],[-63,166],[1,90],[-84,125],[-18,127]],[[45367,57897],[147,96],[92,-19],[75,67],[513,-25]],[[52636,51176],[-52,90],[96,663]],[[56583,71675],[152,-199],[216,34],[207,-42],[-7,-103],[151,71],[-35,-175],[-400,-50],[3,98],[-339,115],[52,251]],[[57237,74699],[-169,17],[-145,56],[-336,-154],[192,-332],[-141,-96],[-154,-1],[-147,305],[-52,-130],[62,-353],[139,-277],[-105,-129],[155,-273],[137,-171],[4,-334],[-257,157],[82,-302],[-176,-62],[105,-521],[-184,-8],[-228,257],[-104,473],[-49,393],[-108,272],[-143,337],[-18,168]],[[55838,74710],[182,53],[106,129],[150,-12],[46,103],[53,20]],[[57254,75292],[135,-157],[-86,-369],[-66,-67]],[[37010,99398],[932,353],[975,-27],[354,218],[982,57],[2219,-74],[1737,-469],[-513,-227],[-1062,-26],[-1496,-58],[140,-105],[984,65],[836,-204],[540,181],[231,-212],[-305,-344],[707,220],[1348,229],[833,-114],[156,-253],[-1132,-420],[-157,-136],[-888,-102],[643,-28],[-324,-431],[-224,-383],[9,-658],[333,-386],[-434,-24],[-457,-187],[513,-313],[65,-502],[-297,-55],[360,-508],[-617,-42],[322,-241],[-91,-208],[-391,-91],[-388,-2],[348,-400],[4,-263],[-549,244],[-143,-158],[375,-148],[364,-361],[105,-476],[-495,-114],[-214,228],[-344,340],[95,-401],[-322,-311],[732,-25],[383,-32],[-745,-515],[-755,-466],[-813,-204],[-306,-2],[-288,-228],[-386,-624],[-597,-414],[-192,-24],[-370,-145],[-399,-138],[-238,-365],[-4,-415],[-141,-388],[-453,-472],[112,-462],[-125,-488],[-142,-577],[-391,-36],[-410,482],[-556,3],[-269,324],[-186,577],[-481,735],[-141,385],[-38,530],[-384,546],[100,435],[-186,208],[275,691],[418,220],[110,247],[58,461],[-318,-209],[-151,-88],[-249,-84],[-341,193],[-19,401],[109,314],[258,9],[567,-157],[-478,375],[-249,202],[-276,-83],[-232,147],[310,550],[-169,220],[-220,409],[-335,626],[-353,230],[3,247],[-745,346],[-590,43],[-743,-24],[-677,-44],[-323,188],[-482,372],[729,186],[559,31],[-1188,154],[-627,241],[39,229],[1051,285],[1018,284],[107,214],[-750,213],[243,235],[961,413],[404,63],[-115,265],[658,156],[854,93],[853,5],[303,-184],[737,325],[663,-221],[390,-46],[577,-192],[-660,318],[38,253]],[[24973,58695],[-142,103],[-174,11],[-127,117],[-149,244]],[[24381,59170],[7,172],[32,138],[-39,111],[133,481],[357,2],[7,201],[-45,36],[-31,128],[-103,136],[-103,198],[125,1],[1,333],[259,1],[257,-7]],[[25297,59966],[90,-107],[24,88],[82,-75]],[[25493,59872],[-127,-225],[-131,-166],[-20,-113],[22,-116],[-58,-150]],[[25179,59102],[-65,-37],[15,-69],[-52,-66],[-95,-149],[-9,-86]],[[33400,55523],[183,-217],[171,-385],[8,-304],[105,-14],[149,-289],[109,-205]],[[34125,54109],[-44,-532],[-169,-154],[15,-139],[-51,-305],[123,-429],[89,-1],[37,-333],[169,-514]],[[33129,53652],[-188,448],[75,163],[-5,273],[171,95],[69,110],[-95,220],[24,215],[220,347]],[[25745,58251],[-48,185],[-84,51]],[[25613,58487],[19,237],[-38,64],[-57,42],[-122,-70],[-10,79],[-84,95],[-60,118],[-82,50]],[[25493,59872],[29,-23],[61,104],[79,8],[26,-48],[43,29],[129,-53],[128,15],[90,66],[32,66],[89,-31],[66,-40],[73,14],[55,51],[127,-82],[44,-13],[85,-110],[80,-132],[101,-91],[73,-162]],[[26903,59440],[-95,12],[-38,-81],[-97,-77],[-70,0],[-61,-76],[-56,27],[-47,90],[-29,-17],[-36,-141],[-27,5],[-4,-121],[-97,-163],[-51,-70],[-29,-74],[-82,120],[-60,-158],[-58,4],[-65,-14],[6,-290],[-41,-5],[-35,-135],[-86,-25]],[[55230,77704],[67,-229],[89,-169],[-107,-222]],[[55155,75778],[-31,-100]],[[55124,75678],[-261,218],[-161,213],[-254,176],[-233,434],[56,45],[-127,248],[-5,200],[-179,93],[-85,-255],[-82,198],[6,205],[10,9]],[[53809,77462],[194,-20],[51,100],[94,-97],[109,-11],[-1,165],[97,60],[27,239],[221,157]],[[54601,78055],[88,-73],[208,-253],[229,-114],[104,89]],[[30081,61241],[-185,100],[-131,-41],[-169,43],[-130,-110],[-149,184],[24,190],[256,-82],[210,-47],[100,131],[-127,256],[2,226],[-175,92],[62,163],[170,-26],[241,-93]],[[54716,79012],[141,-151],[103,-65],[233,73],[22,118],[111,18],[135,92],[30,-38],[130,74],[66,139],[91,36],[297,-180],[59,61]],[[56134,79189],[155,-161],[19,-159]],[[56308,78869],[-170,-123],[-131,-401],[-168,-401],[-223,-111]],[[55616,77833],[-173,26],[-213,-155]],[[54601,78055],[-54,200],[-47,6]],[[83531,44530],[-117,-11],[-368,414],[259,116],[146,-180],[97,-180],[-17,-159]],[[84713,45326],[28,-117],[5,-179]],[[84746,45030],[-181,-441],[-238,-130],[-33,71],[25,201],[119,360],[275,235]],[[82749,45797],[100,-158],[172,48],[69,-251],[-321,-119],[-193,-79],[-149,5],[95,340],[153,5],[74,209]],[[84139,45797],[-41,-328],[-417,-168],[-370,73],[0,216],[220,123],[174,-177],[185,45],[249,216]],[[80172,46575],[533,-59],[61,244],[515,-284],[101,-383],[417,-108],[341,-351],[-317,-225],[-306,238],[-251,-16],[-288,44],[-260,106],[-322,225],[-204,59],[-116,-74],[-506,243],[-48,254],[-255,44],[191,564],[337,-35],[224,-231],[115,-45],[38,-210]],[[87423,46908],[-143,-402],[-27,445],[49,212],[58,200],[63,-173],[0,-282]],[[85346,48536],[-104,-196],[-192,108],[-54,254],[281,29],[69,-195]],[[86241,48752],[101,-452],[-234,244],[-232,49],[-157,-39],[-192,21],[65,325],[344,24],[305,-172]],[[89166,49043],[5,-1925],[4,-1925]],[[89175,45193],[-247,485],[-282,118],[-69,-168],[-352,-18],[118,481],[175,164],[-72,642],[-134,496],[-538,500],[-229,50],[-417,546],[-82,-287],[-107,-52],[-63,216],[-1,257],[-212,290],[299,213],[198,-11],[-23,156],[-407,1],[-110,352],[-248,109],[-117,293],[374,143],[142,192],[446,-242],[44,-220],[78,-955],[287,-354],[232,627],[319,356],[247,1],[238,-206],[206,-212],[298,-113]],[[84788,51419],[-223,-587],[-209,-113],[-267,115],[-463,-29],[-243,-85],[-39,-447],[248,-526],[150,268],[518,201],[-22,-272],[-121,86],[-121,-347],[-245,-229],[263,-757],[-50,-203],[249,-682],[-2,-388],[-148,-173],[-109,207],[134,484],[-273,-229],[-69,164],[36,228],[-200,346],[21,576],[-186,-179],[24,-689],[11,-846],[-176,-85],[-119,173],[79,544],[-43,570],[-117,4],[-86,405],[115,387],[40,469],[139,891],[58,243],[237,439],[217,-174],[350,-82],[319,25],[275,429],[48,-132]],[[85746,51249],[-15,-517],[-143,58],[-42,-359],[114,-312],[-78,-71],[-112,374],[-82,755],[56,472],[92,215],[20,-322],[164,-52],[26,-241]],[[80461,51765],[47,-395],[190,-334],[179,121],[177,-43],[162,299],[133,52],[263,-166],[226,126],[143,822],[107,205],[96,672],[319,0],[241,-100]],[[82744,53024],[-158,-533],[204,-560],[-48,-272],[312,-546],[-329,-70],[-93,-403],[12,-535],[-267,-404],[-7,-589],[-107,-903],[-41,210],[-316,-266],[-110,361],[-198,34],[-139,189],[-330,-212],[-101,285],[-182,-32],[-229,68],[-43,793],[-138,164],[-134,505],[-38,517],[32,548],[165,392]],[[79393,47122],[-308,-12],[-234,494],[-356,482],[-119,358],[-210,481],[-138,443],[-212,827],[-244,493],[-81,508],[-103,461],[-250,372],[-145,506],[-209,330],[-290,652],[-24,300],[178,-24],[430,-114],[246,-577],[215,-401],[153,-246],[263,-635],[283,-9],[233,-405],[161,-495],[211,-270],[-111,-482],[159,-205],[100,-15],[47,-412],[97,-330],[204,-52],[135,-374],[-70,-735],[-11,-914]],[[72530,68413],[-176,-268],[-108,-553],[269,-224],[262,-289],[362,-332],[381,-76],[160,-301],[215,-56],[334,-138],[231,10],[32,234],[-36,375],[21,255]],[[77035,67277],[20,-224],[-97,-108],[23,-364],[-199,107],[-359,-408],[8,-338],[-153,-496],[-14,-288],[-124,-487],[-217,135],[-11,-612],[-63,-201],[30,-251],[-137,-140]],[[74730,63611],[-39,-216],[-189,7],[-343,-122],[16,-445],[-148,-349],[-400,-398],[-311,-695],[-209,-373],[-276,-387],[-1,-271],[-138,-146],[-251,-212],[-129,-31],[-84,-450],[58,-769],[15,-490],[-118,-561],[-1,-1004],[-144,-29],[-126,-450],[84,-195],[-253,-168],[-93,-401],[-112,-170],[-263,552],[-128,827],[-107,596],[-97,279],[-148,568],[-69,739],[-48,369],[-253,811],[-115,1145],[-83,756],[1,716],[-54,553],[-404,-353],[-196,70],[-362,716],[133,214],[-82,232],[-326,501]],[[68937,64577],[185,395],[612,-2],[-56,507],[-156,300],[-31,455],[-182,265],[306,619],[323,-45],[290,620],[174,599],[270,593],[-4,421],[236,342],[-224,292],[-96,400],[-99,517],[137,255],[421,-144],[310,88],[268,496]],[[48278,82406],[46,-422],[-210,-528],[-493,-349],[-393,89],[225,617],[-145,601],[378,463],[210,276]],[[64978,72558],[244,114],[197,338],[186,-17],[122,110],[197,-55],[308,-299],[221,-65],[318,-523],[207,-21],[24,-498]],[[66909,68203],[137,-310],[112,-357],[266,-260],[7,-520],[133,-96],[23,-272],[-400,-305],[-105,-687]],[[67082,65396],[-523,179],[-303,136],[-313,76],[-118,725],[-133,105],[-214,-106],[-280,-286],[-339,196],[-281,454],[-267,168],[-186,561],[-205,788],[-149,-96],[-177,196],[-104,-231]],[[63490,68261],[-153,311],[-3,314],[-89,0],[46,428],[-143,449],[-340,324],[-193,562],[65,461],[139,204],[-21,345],[-182,177],[-180,705]],[[62436,72541],[-152,473],[55,183],[-87,678],[190,168]],[[63578,73220],[88,-436],[263,-123],[193,-296],[395,-102],[434,156],[27,139]],[[63490,68261],[-164,29]],[[63326,68290],[-187,49],[-204,-567]],[[62935,67772],[-516,47],[-784,1188],[-413,414],[-335,160]],[[60887,69581],[-112,720]],[[60775,70301],[615,614],[105,715],[-26,431],[152,146],[142,369]],[[61763,72576],[119,92],[324,-77],[97,-150],[133,100]],[[45969,89843],[-64,-382],[314,-403],[-361,-451],[-801,-405],[-240,-107],[-365,87],[-775,187],[273,261],[-605,289],[492,114],[-12,174],[-583,137],[188,385],[421,87],[433,-400],[422,321],[349,-167],[453,315],[461,-42]],[[59922,69905],[-49,-186]],[[59873,69719],[-100,82],[-58,-394],[69,-66],[-71,-81],[-12,-156],[131,80]],[[59832,69184],[7,-230],[-139,-944]],[[59518,69025],[80,194],[-19,34],[74,276],[56,446],[40,149],[8,6]],[[59757,70130],[93,-1],[25,104],[75,8]],[[59950,70241],[4,-242],[-38,-90],[6,-4]],[[54311,73167],[-100,-465],[41,-183],[-58,-303],[-213,222],[-141,64],[-387,300],[38,304],[325,-54],[284,64],[211,51]],[[52558,74927],[166,-419],[-39,-782],[-126,38],[-113,-197],[-105,156],[-11,713],[-64,338],[153,-30],[139,183]],[[53835,78058],[-31,-291],[67,-251]],[[53871,77516],[-221,86],[-226,-210],[15,-293],[-34,-168],[91,-301],[261,-298],[140,-488],[309,-476],[217,3],[68,-130],[-78,-118],[249,-214],[204,-178],[238,-308],[29,-111],[-52,-211],[-154,276],[-242,97],[-116,-382],[200,-219],[-33,-309],[-116,-35],[-148,-506],[-116,-46],[1,181],[57,317],[60,126],[-108,342],[-85,298],[-115,74],[-82,255],[-179,107],[-120,238],[-206,38],[-217,267],[-254,384],[-189,340],[-86,585],[-138,68],[-226,195],[-128,-80],[-161,-274],[-115,-43]],[[28453,61504],[187,-53],[147,-142],[46,-161],[-195,-11],[-84,-99],[-156,95],[-159,215],[34,135],[116,41],[64,-20]],[[59922,69905],[309,-234],[544,630]],[[60887,69581],[-53,-89],[-556,-296],[277,-591],[-92,-101],[-46,-197],[-212,-82],[-66,-213],[-120,-182],[-310,94]],[[59709,67924],[-9,86]],[[59832,69184],[41,173],[0,362]],[[87399,70756],[35,-203],[-156,-357],[-114,189],[-143,-137],[-73,-346],[-181,168],[2,281],[154,352],[158,-68],[114,248],[204,-127]],[[89159,72524],[-104,-472],[48,-296],[-145,-416],[-355,-278],[-488,-36],[-396,-675],[-186,227],[-12,442],[-483,-130],[-329,-279],[-325,-11],[282,-435],[-186,-1004],[-179,-248],[-135,229],[69,533],[-176,172],[-113,405],[263,182],[145,371],[280,306],[203,403],[553,177],[297,-121],[291,1050],[185,-282],[408,591],[158,229],[174,723],[-47,664],[117,374],[295,108],[152,-819],[-9,-479],[-256,-595],[4,-610]],[[89974,76679],[195,-126],[197,250],[62,-663],[-412,-162],[-244,-587],[-436,404],[-152,-646],[-308,-9],[-39,587],[138,455],[296,33],[81,817],[83,460],[326,-615],[213,-198]],[[69711,75551],[-159,-109],[-367,-412],[-121,-422],[-104,-4],[-76,280],[-353,19],[-57,484],[-135,4],[21,593],[-333,431],[-476,-46],[-326,-86],[-265,533],[-227,223],[-431,423],[-52,51],[-715,-349],[11,-2178]],[[65546,74986],[-142,-29],[-195,463],[-188,166],[-315,-123],[-123,-197]],[[64583,75266],[-15,144],[68,246],[-53,206],[-322,202],[-125,530],[-154,150],[-9,192],[270,-56],[11,432],[236,96],[243,-88],[50,576],[-50,365],[-278,-28],[-236,144],[-321,-260],[-259,-124]],[[63639,77993],[-142,96],[29,304],[-177,395],[-207,-17],[-235,401],[160,448],[-81,120],[222,649],[285,-342],[35,431],[573,643],[434,15],[612,-409],[329,-239],[295,249],[440,12],[356,-306],[80,175],[391,-25],[69,280],[-450,406],[267,288],[-52,161],[266,153],[-200,405],[127,202],[1039,205],[136,146],[695,218],[250,245],[499,-127],[88,-612],[290,144],[356,-202],[-23,-322],[267,33],[696,558],[-102,-185],[355,-457],[620,-1500],[148,309],[383,-340],[399,151],[154,-106],[133,-341],[194,-115],[119,-251],[358,79],[147,-361]],[[72294,75601],[-171,87],[-140,212],[-412,62],[-461,16],[-100,-65],[-396,248],[-158,-122],[-43,-349],[-457,204],[-183,-84],[-62,-259]],[[61551,49585],[-195,-236],[-68,-246],[-104,-44],[-40,-416],[-89,-238],[-54,-393],[-112,-195]],[[60889,47817],[-399,590],[-19,343],[-1007,1203],[-47,65]],[[59417,50018],[-3,627],[80,239],[137,391],[101,431],[-123,678],[-32,296],[-132,411]],[[59445,53091],[171,352],[188,390]],[[61626,52895],[-243,-670],[3,-2152],[165,-488]],[[70465,73876],[-526,-89],[-343,192],[-301,-46],[26,340],[303,-98],[101,182]],[[69725,74357],[212,-58],[355,425],[-329,311],[-198,-147],[-205,223],[234,382],[-83,58]],[[78495,57780],[-66,713],[178,492],[359,112],[261,-84]],[[79227,59013],[229,-232],[126,407],[246,-217]],[[79828,58971],[64,-394],[-34,-708],[-467,-455],[122,-358],[-292,-43],[-240,-238]],[[78981,56775],[-233,87],[-112,307],[-141,611]],[[85652,73393],[240,-697],[68,-383],[3,-681],[-105,-325],[-252,-113],[-222,-245],[-250,-51],[-31,322],[51,443],[-122,615],[206,99],[-190,506]],[[85048,72883],[17,54],[124,-21],[108,266],[197,29],[118,39],[40,143]],[[55575,75742],[52,132]],[[55627,75874],[66,43],[38,196],[50,33],[40,-84],[52,-36],[36,-94],[46,-28],[54,-110],[39,4],[-31,-144],[-33,-71],[9,-44]],[[55993,75539],[-62,-23],[-164,-91],[-13,-121],[-35,5]],[[63326,68290],[58,-261],[-25,-135],[89,-445]],[[63448,67449],[-196,-16],[-69,282],[-248,57]],[[79227,59013],[90,266],[12,500],[-224,515],[-18,583],[-211,480],[-210,40],[-56,-205],[-163,-17],[-83,104],[-293,-353],[-6,530],[68,623],[-188,27],[-16,355],[-120,182]],[[77809,62643],[59,218],[237,384]],[[78380,63852],[162,-466],[125,-537],[342,-5],[108,-515],[-178,-155],[-80,-212],[333,-353],[231,-699],[175,-520],[210,-411],[70,-418],[-50,-590]],[[59757,70130],[99,482],[138,416],[5,21]],[[59999,71049],[125,-31],[45,-231],[-151,-223],[-68,-323]],[[47857,53158],[-73,-5],[-286,282],[-252,449],[-237,324],[-187,381]],[[46822,54589],[66,189],[15,172],[126,320],[129,276]],[[54125,64088],[-197,-220],[-156,324],[-439,255]],[[52633,68486],[136,137],[24,250],[-30,244],[191,228],[86,189],[135,170],[16,454]],[[53191,70158],[326,-204],[117,51],[232,-98],[368,-264],[130,-526],[250,-114],[391,-248],[296,-293],[136,153],[133,272],[-65,452],[87,288],[200,277],[192,80],[375,-121],[95,-264],[104,-2],[88,-101],[276,-70],[68,-195]],[[56944,63578],[0,-1180],[-320,-2],[-3,-248]],[[56621,62148],[-1108,1131],[-1108,1132],[-280,-323]],[[72718,55024],[-42,-615],[-116,-168],[-242,-135],[-132,470],[-49,849],[126,959],[192,-328],[129,-416],[134,-616]],[[58049,33472],[96,-178],[-85,-288],[-47,-192],[-155,-93],[-51,-188],[-99,-59],[-209,454],[148,374],[151,232],[130,120],[121,-182]],[[56314,82678],[-23,150],[30,162],[-123,94],[-291,103]],[[55907,83187],[-59,497]],[[55848,83684],[318,181],[466,-38],[273,59],[39,-123],[148,-38],[267,-287]],[[56523,82432],[-67,182],[-142,64]],[[55848,83684],[10,445],[136,371],[262,202],[221,-442],[223,12],[53,453]],[[57579,84537],[134,-136],[24,-287],[89,-348]],[[47592,66920],[-42,0],[7,-317],[-172,-19],[-90,-134],[-126,0],[-100,76],[-234,-63],[-91,-460],[-86,-44],[-131,-745],[-386,-637],[-92,-816],[-114,-265],[-33,-213],[-625,-48],[-5,1]],[[45272,63236],[13,274],[106,161],[91,308],[-18,200],[96,417],[155,376],[93,95],[74,344],[6,315],[100,365],[185,216],[177,603],[5,8],[139,227],[259,65],[218,404],[140,158],[232,493],[-70,735],[106,508],[37,312],[179,399],[278,270],[206,244],[186,612],[87,362],[205,-2],[167,-251],[264,41],[288,-131],[121,-6]],[[57394,79070],[66,87],[185,58],[204,-184],[115,-22],[125,-159],[-20,-200],[101,-97],[40,-247],[97,-150],[-19,-88],[52,-60],[-74,-44],[-164,18],[-27,81],[-58,-47],[20,-106],[-76,-188],[-49,-203],[-70,-64]],[[57842,77455],[-50,270],[30,252],[-9,259],[-160,352],[-89,249],[-86,175],[-84,58]],[[63761,43212],[74,-251],[69,-390],[45,-711],[72,-276],[-28,-284],[-49,-174],[-94,347],[-53,-175],[53,-438],[-24,-250],[-77,-137],[-18,-500],[-109,-689],[-137,-814],[-172,-1120],[-106,-821],[-125,-685],[-226,-140],[-243,-250],[-160,151],[-220,211],[-77,312],[-18,524],[-98,471],[-26,425],[50,426],[128,102],[1,197],[133,447],[25,377],[-65,280],[-52,372],[-23,544],[97,331],[38,375],[138,22],[155,121],[103,107],[122,7],[158,337],[229,364],[83,297],[-38,253],[118,-71],[153,410],[6,356],[92,264],[96,-254]],[[23016,65864],[-107,-518],[-49,-426],[-20,-791],[-27,-289],[48,-322],[86,-288],[56,-458],[184,-440],[65,-337],[109,-291],[295,-157],[114,-247],[244,165],[212,60],[208,106],[175,101],[176,241],[67,345],[22,496],[48,173],[188,155],[294,137],[246,-21],[169,50],[66,-125],[-9,-285],[-149,-351],[-66,-360],[51,-103],[-42,-255],[-69,-461],[-71,152],[-58,-10]],[[24381,59170],[-314,636],[-144,191],[-226,155],[-156,-43],[-223,-223],[-140,-58],[-196,156],[-208,112],[-260,271],[-208,83],[-314,275],[-233,282],[-70,158],[-155,35],[-284,187],[-116,270],[-299,335],[-139,373],[-66,288],[93,57],[-29,169],[64,153],[1,204],[-93,266],[-25,235],[-94,298],[-244,587],[-280,462],[-135,368],[-238,241],[-51,145],[42,365],[-142,138],[-164,287],[-69,412],[-149,48],[-162,311],[-130,288],[-12,184],[-149,446],[-99,452],[5,227],[-201,234],[-93,-25],[-159,163],[-44,-240],[46,-284],[27,-444],[95,-243],[206,-407],[46,-139],[42,-42],[37,-203],[49,8],[56,-381],[85,-150],[59,-210],[174,-300],[92,-550],[83,-259],[77,-277],[15,-311],[134,-20],[112,-268],[100,-264],[-6,-106],[-117,-217],[-49,3],[-74,359],[-181,337],[-201,286],[-142,150],[9,432],[-42,320],[-132,183],[-191,264],[-37,-76],[-70,154],[-171,143],[-164,343],[20,44],[115,-33],[103,221],[10,266],[-214,422],[-163,163],[-102,369],[-103,388],[-129,472],[-113,531]],[[17464,69802],[316,46],[353,64],[-26,-116],[419,-287],[634,-416],[552,4],[221,0],[0,244],[481,0],[102,-210],[142,-186],[165,-260],[92,-309],[69,-325],[144,-178],[230,-177],[175,467],[227,11],[196,-236],[139,-404],[96,-346],[164,-337],[61,-414],[78,-277],[217,-184],[197,-130],[108,18]],[[55993,75539],[95,35],[128,9]],[[46619,59216],[93,107],[47,348],[88,14],[194,-165],[157,117],[107,-39],[42,131],[1114,9],[62,414],[-48,73],[-134,2550],[-134,2550],[425,10]],[[51185,61897],[1,-1361],[-152,-394],[-24,-364],[-247,-94],[-379,-51],[-102,-210],[-178,-23]],[[46801,57931],[13,184],[-24,229],[-104,166],[-54,338],[-13,368]],[[77375,56448],[-27,439],[86,452],[-94,350],[23,644],[-113,306],[-90,707],[-50,746],[-121,490],[-183,-297],[-315,-421],[-156,53],[-172,138],[96,732],[-58,554],[-218,681],[34,213],[-163,76],[-197,481]],[[77809,62643],[-159,-137],[-162,-256],[-196,-26],[-127,-639],[-117,-107],[134,-519],[177,-431],[113,-390],[-101,-514],[-96,-109],[66,-296],[185,-470],[32,-330],[-4,-274],[108,-539],[-152,-551],[-135,-607]],[[55380,75322],[-58,46],[-78,192],[-120,118]],[[55338,76294],[74,-101],[40,-82],[91,-63],[106,-123],[-22,-51]],[[74375,79706],[292,102],[530,509],[423,278],[242,-182],[289,-8],[186,-276],[277,-22],[402,-148],[270,411],[-113,348],[288,612],[311,-244],[252,-69],[327,-152],[53,-443],[394,-248],[263,109],[351,78],[279,-78],[272,-284],[168,-302],[258,6],[350,-96],[255,146],[366,98],[407,416],[166,-63],[146,-198],[331,49]],[[59599,43773],[209,48],[334,-166],[73,74],[193,16],[99,177],[167,-10],[303,230],[221,342]],[[61198,44484],[45,-265],[-11,-588],[34,-519],[11,-923],[49,-290],[-83,-422],[-108,-410],[-177,-366],[-254,-225],[-313,-287],[-313,-634],[-107,-108],[-194,-420],[-115,-136],[-23,-421],[132,-448],[54,-346],[4,-177],[49,29],[-8,-579],[-45,-275],[65,-101],[-41,-245],[-116,-211],[-229,-199],[-334,-320],[-122,-219],[24,-248],[71,-40],[-24,-311]],[[59119,34780],[-211,5]],[[58908,34785],[-24,261],[-41,265]],[[58843,35311],[-23,212],[49,659],[-72,419],[-133,832]],[[58664,37433],[292,671],[74,426],[42,53],[31,348],[-45,175],[12,442],[54,409],[0,748],[-145,190],[-132,43],[-60,146],[-128,125],[-232,-12],[-18,220]],[[58409,41417],[-26,421],[843,487]],[[59226,42325],[159,-284],[77,54],[110,-149],[16,-237],[-59,-274],[21,-417],[181,-365],[85,410],[120,124],[-24,760],[-116,427],[-100,191],[-97,-9],[-77,768],[77,449]],[[46619,59216],[-184,405],[-168,435],[-184,157],[-133,173],[-155,-6],[-135,-129],[-138,51],[-96,-189]],[[45426,60113],[-24,318],[78,291],[34,557],[-30,583],[-34,294],[28,295],[-72,281],[-146,255]],[[45260,62987],[60,197],[1088,-4],[-53,853],[68,304],[261,53],[-9,1512],[911,-31],[1,895]],[[59226,42325],[-147,153],[85,549],[87,205],[-53,490],[56,479],[47,160],[-71,501],[-131,264]],[[59099,45126],[273,-110],[55,-164],[95,-275],[77,-804]],[[78372,54256],[64,-56],[164,-356],[116,-396],[16,-398],[-29,-269],[27,-203],[20,-349],[98,-163],[109,-523],[-5,-199],[-197,-40],[-263,438],[-329,469],[-32,301],[-161,395],[-38,489],[-100,322],[30,431],[-61,250]],[[77801,54399],[48,105],[227,-258],[22,-304],[183,71],[91,243]],[[80461,51765],[204,-202],[214,110],[56,500],[119,112],[333,128],[199,467],[137,374]],[[82069,53798],[214,411],[140,462],[112,2],[143,-299],[13,-257],[183,-165],[231,-177],[-20,-232],[-186,-29],[50,-289],[-205,-201]],[[54540,33696],[-207,446],[-108,432],[-62,575],[-68,428],[-93,910],[-7,707],[-35,322],[-108,243],[-144,489],[-146,708],[-60,371],[-226,577],[-17,453]],[[56448,40227],[228,134],[180,-34],[109,-133],[2,-49]],[[55526,35946],[0,-2182],[-248,-302],[-149,-43],[-175,112],[-125,43],[-47,252],[-109,162],[-133,-292]],[[96049,38125],[228,-366],[144,-272],[-105,-142],[-153,160],[-199,266],[-179,313],[-184,416],[-38,201],[119,-9],[156,-201],[122,-200],[89,-166]],[[54125,64088],[68,-919],[104,-153],[4,-188],[116,-203],[-60,-254],[-107,-1199],[-15,-769],[-354,-557],[-120,-778],[115,-219],[0,-380],[178,-13],[-28,-279]],[[53939,57955],[-52,-13],[-188,647],[-65,24],[-217,-331],[-215,173],[-150,34],[-80,-83],[-163,18],[-164,-252],[-141,-14],[-337,305],[-131,-145],[-142,10],[-104,223],[-279,221],[-298,-70],[-72,-128],[-39,-340],[-80,-238],[-19,-527]],[[52361,53399],[-289,-213],[-105,31],[-107,-132],[-222,13],[-149,370],[-91,427],[-197,389],[-209,-7],[-245,1]],[[26191,57131],[-96,186],[-130,238],[-61,200],[-117,185],[-140,267],[31,91],[46,-88],[21,41]],[[26903,59440],[-24,-57],[-14,-132],[29,-216],[-64,-202],[-30,-237],[-9,-261],[15,-152],[7,-266],[-43,-58],[-26,-253],[19,-156],[-56,-151],[12,-159],[43,-97]],[[50920,80916],[143,162],[244,869],[380,248],[231,-17]],[[58639,91676],[-473,-237],[-224,-54]],[[55734,91409],[-172,-24],[-41,-389],[-523,95],[-74,-329],[-267,2],[-183,-421],[-278,-655],[-431,-831],[101,-202],[-97,-234],[-275,10],[-180,-554],[17,-784],[177,-300],[-92,-694],[-231,-405],[-122,-341]],[[53063,85353],[-187,363],[-548,-684],[-371,-138],[-384,301],[-99,635],[-88,1363],[256,381],[733,496],[549,609],[508,824],[668,1141],[465,444],[763,741],[610,259],[457,-31],[423,489],[506,-26],[499,118],[869,-433],[-358,-158],[305,-371]],[[56867,96577],[-620,-241],[-490,137],[191,152],[-167,189],[575,119],[110,-222],[401,-134]],[[55069,97669],[915,-440],[-699,-233],[-155,-435],[-243,-111],[-132,-490],[-335,-23],[-598,361],[252,210],[-416,170],[-541,499],[-216,463],[757,212],[152,-207],[396,8],[105,202],[408,20],[350,-206]],[[57068,98086],[545,-207],[-412,-318],[-806,-70],[-819,98],[-50,163],[-398,11],[-304,271],[858,165],[403,-142],[281,177],[702,-148]],[[98060,26404],[63,-244],[198,239],[80,-249],[0,-249],[-103,-274],[-182,-435],[-142,-238],[103,-284],[-214,-7],[-238,-223],[-75,-387],[-157,-597],[-219,-264],[-138,-169],[-256,13],[-180,194],[-302,42],[-46,217],[149,438],[349,583],[179,111],[200,225],[238,310],[167,306],[123,441],[106,149],[41,330],[195,273],[61,-251]],[[98502,29218],[202,-622],[5,403],[126,-161],[41,-447],[224,-192],[188,-48],[158,226],[141,-69],[-67,-524],[-85,-345],[-212,12],[-74,-179],[26,-254],[-41,-110],[-105,-319],[-138,-404],[-214,-236],[-48,155],[-116,85],[160,486],[-91,326],[-299,236],[8,214],[201,206],[47,455],[-13,382],[-113,396],[8,104],[-133,244],[-218,523],[-117,418],[104,46],[151,-328],[216,-153],[78,-526]],[[64752,60417],[-91,413],[-217,975]],[[64444,61805],[833,591],[185,1182],[-127,418]],[[65665,65306],[125,-404],[155,-214],[203,-78],[165,-107],[125,-339],[75,-196],[100,-75],[-1,-132],[-101,-352],[-44,-166],[-117,-189],[-104,-404],[-126,31],[-58,-141],[-44,-300],[34,-395],[-26,-72],[-128,2],[-174,-221],[-27,-288],[-63,-125],[-173,5],[-109,-149],[1,-238],[-134,-165],[-153,56],[-186,-199],[-128,-34]],[[65575,65974],[80,201],[35,-51],[-26,-244],[-37,-108]],[[68937,64577],[-203,150],[-83,424],[-215,450],[-512,-111],[-451,-11],[-391,-83]],[[28366,54848],[-93,170],[-59,319],[68,158],[-70,40],[-52,196],[-138,164],[-122,-38],[-56,-205],[-112,-149],[-61,-20],[-27,-123],[132,-321],[-75,-76],[-40,-87],[-130,-30],[-48,353],[-36,-101],[-92,35],[-56,238],[-114,39],[-72,69],[-119,-1],[-8,-128],[-32,89]],[[27070,56232],[100,-212],[-6,-126],[111,-26],[26,48],[77,-145],[136,42],[119,150],[168,119],[95,176],[153,-34],[-10,-58],[155,-21],[124,-102],[90,-177],[105,-164]],[[30452,39739],[-279,340],[-24,242],[-551,593],[-498,646],[-214,365],[-115,488],[46,170],[-236,775],[-274,1090],[-262,1177],[-114,269],[-87,435],[-216,386],[-198,239],[90,264],[-134,563],[86,414],[221,373]],[[85104,55551],[28,-392],[16,-332],[-94,-540],[-102,602],[-130,-300],[89,-435],[-79,-277],[-327,343],[-78,428],[84,280],[-176,280],[-87,-245],[-131,23],[-205,-330],[-46,173],[109,498],[175,166],[151,223],[98,-268],[212,162],[45,264],[196,15],[-16,457],[225,-280],[23,-297],[20,-218]],[[84439,56653],[-100,-195],[-87,-373],[-87,-175],[-171,409],[57,158],[70,165],[30,367],[153,35],[-44,-398],[205,570],[-26,-563]],[[82917,56084],[-369,-561],[136,414],[200,364],[167,409],[146,587],[49,-482],[-183,-325],[-146,-406]],[[83856,57606],[166,-183],[177,1],[-5,-247],[-129,-251],[-176,-178],[-10,275],[20,301],[-43,282]],[[84861,57766],[78,-660],[-214,157],[5,-199],[68,-364],[-132,-133],[-11,416],[-84,31],[-43,357],[163,-47],[-4,224],[-169,451],[266,-13],[77,-220]],[[83757,58301],[-74,-510],[-119,295],[-142,450],[238,-22],[97,-213]],[[83700,61512],[171,-168],[85,153],[26,-150],[-46,-245],[95,-423],[-73,-491],[-164,-196],[-43,-476],[62,-471],[147,-65],[123,70],[347,-328],[-27,-321],[91,-142],[-29,-272],[-216,290],[-103,310],[-71,-217],[-177,354],[-253,-87],[-138,130],[14,244],[87,151],[-83,136],[-36,-213],[-137,340],[-41,257],[-11,566],[112,-195],[29,925],[90,535],[169,-1]],[[93299,46550],[-78,-59],[-120,227],[-122,375],[-59,450],[38,57],[30,-175],[84,-134],[135,-375],[131,-200],[-39,-166]],[[92217,47343],[-146,-48],[-44,-166],[-152,-144],[-142,-138],[-148,1],[-228,171],[-158,165],[23,183],[249,-86],[152,46],[42,283],[40,15],[27,-314],[158,45],[78,202],[155,211],[-30,348],[166,11],[56,-97],[-5,-327],[-93,-361]],[[89166,49043],[482,-407],[513,-338],[192,-302],[154,-297],[43,-349],[462,-365],[68,-313],[-256,-64],[62,-393],[248,-388],[180,-627],[159,20],[-11,-262],[215,-100],[-84,-111],[295,-249],[-30,-171],[-184,-41],[-69,153],[-238,66],[-281,89],[-216,377],[-158,325],[-144,517],[-362,259],[-235,-169],[-170,-195],[35,-436],[-218,-203],[-155,99],[-288,25]],[[92538,47921],[-87,-157],[-52,348],[-65,229],[-126,193],[-158,252],[-200,174],[77,143],[150,-166],[94,-130],[117,-142],[111,-248],[106,-189],[33,-307]],[[53922,82340],[189,174],[434,273],[350,200],[277,-100],[21,-144],[268,-7]],[[55461,82736],[342,-67],[511,9]],[[56535,81053],[139,-515],[-29,-166],[-138,-69],[-252,-491],[71,-266],[-60,35]],[[56266,79581],[-264,227],[-200,-84],[-131,61],[-165,-127],[-140,210],[-114,-81],[-16,36]],[[31588,61519],[142,-52],[50,-118],[-71,-149],[-209,4],[-163,-21],[-16,253],[40,86],[227,-3]],[[86288,75628],[39,-104]],[[86327,75524],[-106,36],[-120,-200],[-83,-202],[10,-424],[-143,-130],[-50,-105],[-104,-174],[-185,-97],[-121,-159],[-9,-256],[-32,-65],[111,-96],[157,-259]],[[85048,72883],[-135,112],[-34,-111],[-81,-49],[-10,112],[-72,54],[-75,94],[76,260],[66,69],[-25,108],[71,319],[-18,96],[-163,65],[-131,158]],[[47929,72498],[-112,-153],[-146,83],[-143,-65],[42,462],[-26,363],[-124,55],[-67,224],[22,386],[111,215],[20,239],[58,355],[-6,250],[-56,212],[-12,200]],[[64113,65205],[-18,430],[75,310],[76,64],[84,-185],[5,-346],[-61,-348]],[[64274,65130],[-77,-42],[-84,117]],[[56308,78869],[120,127],[172,-65],[178,-3],[129,-144],[95,91],[205,56],[69,139],[118,0]],[[57842,77455],[124,-109],[131,95],[126,-101]],[[58223,77340],[6,-152],[-135,-128],[-84,56],[-78,-713]],[[56293,76715],[-51,103],[65,99],[-69,74],[-87,-133],[-162,172],[-22,244],[-169,139],[-31,188],[-151,232]],[[89901,80562],[280,-1046],[-411,195],[-171,-854],[271,-605],[-8,-413],[-211,356],[-182,-457],[-51,496],[31,575],[-32,638],[64,446],[13,790],[-163,581],[24,808],[257,271],[-110,274],[123,83],[73,-391],[96,-569],[-7,-581],[114,-597]],[[55461,82736],[63,260],[383,191]],[[99999,92429],[-305,-30],[-49,187],[-99645,247],[36,24],[235,-1],[402,-169],[-24,-81],[-286,-141],[-363,-36],[99999,0]],[[89889,93835],[-421,-4],[-569,66],[-49,31],[263,234],[348,54],[394,-226],[34,-155]],[[91869,94941],[-321,-234],[-444,53],[-516,233],[66,192],[518,-89],[697,-155]],[[90301,95224],[-219,-439],[-1023,16],[-461,-139],[-550,384],[149,406],[366,111],[734,-26],[1004,-313]],[[65981,92363],[-164,-52],[-907,77],[-74,262],[-503,158],[-40,320],[284,126],[-10,323],[551,503],[-255,73],[665,518],[-75,268],[621,312],[917,380],[925,110],[475,220],[541,76],[193,-233],[-187,-184],[-984,-293],[-848,-282],[-863,-562],[-414,-577],[-435,-568],[56,-491],[531,-484]],[[63639,77993],[-127,-350],[-269,-97],[-276,-610],[252,-561],[-27,-398],[303,-696]],[[61098,76242],[-354,499],[-317,223],[-240,347],[202,95],[231,494],[-156,234],[410,241],[-8,129],[-249,-95]],[[60617,78409],[9,262],[143,165],[269,43],[44,197],[-62,326],[113,310],[-3,173],[-410,192],[-162,-6],[-172,277],[-213,-94],[-352,208],[6,116],[-99,256],[-222,29],[-23,183],[70,120],[-178,334],[-288,-57],[-84,30],[-70,-134],[-104,23]],[[57772,85719],[316,327],[-291,280]],[[58639,91676],[286,206],[456,-358],[761,-140],[1050,-668],[213,-281],[18,-393],[-308,-311],[-454,-157],[-1240,449],[-204,-75],[453,-433],[18,-274],[18,-604],[358,-180],[217,-153],[36,286],[-168,254],[177,224],[672,-368],[233,144],[-186,433],[647,578],[256,-34],[260,-206],[161,406],[-231,352],[136,353],[-204,367],[777,-190],[158,-331],[-351,-73],[1,-328],[219,-203],[429,128],[68,377],[580,282],[970,507],[209,-29],[-273,-359],[344,-61],[199,202],[521,16],[412,245],[317,-356],[315,391],[-291,343],[145,195],[820,-179],[385,-185],[1006,-675],[186,309],[-282,313],[-8,125],[-335,58],[92,280],[-149,461],[-8,189],[512,535],[183,537],[206,116],[736,-156],[57,-328],[-263,-479],[173,-189],[89,-413],[-63,-809],[307,-362],[-120,-395],[-544,-839],[318,-87],[110,213],[306,151],[74,293],[240,281],[-162,336],[130,390],[-304,49],[-67,328],[222,593],[-361,482],[497,398],[-64,421],[139,13],[145,-328],[-109,-570],[297,-108],[-127,426],[465,233],[577,31],[513,-337],[-247,492],[-28,630],[483,119],[669,-26],[602,77],[-226,309],[321,388],[319,16],[540,293],[734,79],[93,162],[729,55],[227,-133],[624,314],[510,-10],[77,255],[265,252],[656,242],[476,-191],[-378,-146],[629,-90],[75,-292],[254,143],[812,-7],[626,-289],[223,-221],[-69,-307],[-307,-175],[-730,-328],[-209,-175],[345,-83],[410,-149],[251,112],[141,-379],[122,153],[444,93],[892,-97],[67,-276],[1162,-88],[15,451],[590,-104],[443,4],[449,-312],[128,-378],[-165,-247],[349,-465],[437,-240],[268,620],[446,-266],[473,159],[538,-182],[204,166],[455,-83],[-201,549],[367,256],[2509,-384],[236,-351],[727,-451],[1122,112],[553,-98],[231,-244],[-33,-432],[342,-168],[372,121],[492,15],[525,-116],[526,66],[484,-526],[344,189],[-224,378],[123,262],[886,-165],[578,36],[799,-282],[-99610,-258],[681,-451],[728,-588],[-24,-367],[187,-147],[-64,429],[754,-88],[544,-553],[-276,-257],[-455,-61],[-7,-578],[-111,-122],[-260,17],[-212,206],[-369,172],[-62,257],[-283,96],[-315,-76],[-151,207],[60,219],[-333,-140],[126,-278],[-158,-251],[99997,-3],[-357,-260],[-360,44],[250,-315],[166,-487],[128,-159],[32,-244],[-71,-157],[-518,129],[-777,-445],[-247,-69],[-425,-415],[-403,-362],[-102,-269],[-397,409],[-724,-464],[-126,219],[-268,-253],[-371,81],[-90,-388],[-333,-572],[10,-239],[316,-132],[-37,-860],[-258,-22],[-119,-494],[116,-255],[-486,-302],[-96,-674],[-415,-144],[-83,-600],[-400,-551],[-103,407],[-119,862],[-155,1313],[134,819],[234,353],[14,276],[432,132],[496,744],[479,608],[499,471],[223,833],[-337,-50],[-167,-487],[-705,-649],[-227,727],[-717,-201],[-696,-990],[230,-362],[-620,-154],[-430,-61],[20,427],[-431,90],[-344,-291],[-850,102],[-914,-175],[-899,-1153],[-1065,-1394],[438,-74],[136,-370],[270,-132],[178,295],[305,-38],[401,-650],[9,-503],[-217,-590],[-23,-705],[-126,-945],[-418,-855],[-94,-409],[-377,-688],[-374,-682],[-179,-349],[-370,-346],[-175,-8],[-175,287],[-373,-432],[-43,-197]],[[79187,96845],[-1566,-228],[507,776],[229,66],[208,-38],[704,-336],[-82,-240]],[[64204,98169],[-373,-78],[-250,-45],[-39,-97],[-324,-98],[-301,140],[158,185],[-618,18],[542,107],[422,8],[57,-160],[159,142],[262,97],[412,-129],[-107,-90]],[[77760,97184],[-606,-73],[-773,170],[-462,226],[-213,423],[-379,117],[722,404],[600,133],[540,-297],[640,-572],[-69,-531]],[[58449,49909],[110,-333],[-16,-348],[-80,-74]],[[58216,49787],[67,-60],[166,182]],[[45260,62987],[12,249]],[[61883,60238],[-37,252],[-83,178],[-22,236],[-143,212],[-148,495],[-79,482],[-192,406],[-124,97],[-184,563],[-32,411],[12,350],[-159,655],[-130,231],[-150,122],[-92,339],[15,133],[-77,306],[-81,132],[-108,440],[-170,476],[-141,406],[-139,-3],[44,325],[12,206],[34,236]],[[63448,67449],[109,-510],[137,-135],[47,-207],[190,-249],[16,-243],[-27,-197],[35,-199],[80,-165],[37,-194],[41,-145]],[[64274,65130],[53,-226]],[[64444,61805],[-801,-226],[-259,-266],[-199,-620],[-130,-99],[-70,197],[-106,-30],[-269,60],[-50,59],[-321,-14],[-75,-53],[-114,153],[-74,-290],[28,-249],[-121,-189]],[[59434,56171],[-39,12],[5,294],[-33,203],[-143,233],[-34,426],[34,436],[-129,41],[-19,-132],[-167,-30],[67,-173],[23,-355],[-152,-324],[-138,-426],[-144,-61],[-233,345],[-105,-122],[-29,-172],[-143,-112],[-9,-122],[-277,0],[-38,122],[-200,20],[-100,-101],[-77,51],[-143,344],[-48,163],[-200,-81],[-76,-274],[-72,-528],[-95,-111],[-85,-65]],[[56635,55672],[-23,28]],[[56351,57163],[3,143],[-102,174],[-3,343],[-58,228],[-98,-34],[28,217],[72,246],[-32,245],[92,181],[-58,138],[73,365],[127,435],[240,-41],[-14,2345]],[[60240,63578],[90,-580],[-61,-107],[40,-608],[102,-706],[106,-145],[152,-219]],[[59433,56242],[1,-71]],[[59434,56171],[3,-460]],[[59445,53091],[-171,-272],[-195,1],[-224,-138],[-176,132],[-115,-161]],[[56824,55442],[-189,230]],[[45357,58612],[-115,460],[-138,210],[122,112],[134,415],[66,304]],[[45367,57897],[-46,453]],[[95032,44386],[78,-203],[-194,4],[-106,363],[166,-142],[56,-22]],[[94680,44747],[-108,-14],[-170,60],[-58,91],[17,235],[183,-93],[91,-124],[45,-155]],[[94910,44908],[-42,-109],[-206,512],[-57,353],[94,0],[100,-473],[111,-283]],[[94409,45654],[12,-119],[-218,251],[-152,212],[-104,197],[41,60],[128,-142],[228,-272],[65,-187]],[[93760,46238],[-56,-33],[-121,134],[-114,243],[14,99],[166,-250],[111,-193]],[[46822,54589],[-75,44],[-200,238],[-144,316],[-49,216],[-34,437]],[[25613,58487],[-31,-139],[-161,9],[-100,57],[-115,117],[-154,37],[-79,127]],[[61984,57352],[91,-109],[54,-245],[125,-247],[138,-2],[262,151],[302,70],[245,184],[138,39],[99,108],[158,20]],[[63596,57321],[-2,-9],[-1,-244],[0,-596],[0,-308],[-125,-363],[-194,-493]],[[63596,57321],[89,12],[128,88],[147,59],[132,202],[105,2],[6,-163],[-25,-344],[1,-310],[-59,-214],[-78,-639],[-134,-659],[-172,-755],[-238,-866],[-237,-661],[-327,-806],[-278,-479],[-415,-586],[-259,-450],[-304,-715],[-64,-312],[-63,-140]],[[34125,54109],[333,-119],[30,107],[225,43],[298,-159]],[[34889,53069],[109,-351],[-49,-254],[-24,-270],[-71,-248]],[[56266,79581],[-77,-154],[-55,-238]],[[53809,77462],[62,54]],[[56639,89578],[-478,-167],[-269,-413],[43,-361],[-441,-475],[-537,-509],[-202,-832],[198,-416],[265,-328],[-255,-666],[-289,-138],[-106,-992],[-157,-554],[-337,57],[-158,-468],[-321,-27],[-89,558],[-232,671],[-211,835]],[[58908,34785],[-56,-263],[-163,-63],[-166,320],[-2,204],[76,222],[26,172],[80,42],[140,-108]],[[59999,71049],[-26,452],[68,243]],[[60041,71744],[74,129],[75,130],[15,329],[91,-115],[306,165],[147,-112],[229,2],[320,222],[149,-10],[316,92]],[[50518,54209],[-224,-126]],[[78495,57780],[-249,271],[-238,-11],[41,464],[-245,-3],[-22,-650],[-150,-863],[-90,-522],[19,-428],[181,-18],[113,-539],[50,-512],[155,-338],[168,-69],[144,-306]],[[77801,54399],[-110,227],[-47,292],[-148,334],[-135,280],[-45,-347],[-53,328],[30,369],[82,566]],[[68841,72526],[156,598],[-60,440],[-204,140],[72,261],[232,-28],[132,326],[89,380],[371,137],[-58,-274],[40,-164],[114,15]],[[64978,72558],[-52,417],[40,618],[-216,200],[71,405],[-184,34],[61,498],[262,-145],[244,189],[-202,355],[-80,338],[-224,-151],[-28,-433],[-87,383]],[[65546,74986],[313,8],[-45,297],[237,204],[234,343],[374,-312],[30,-471],[106,-121],[301,27],[93,-108],[137,-609],[317,-408],[181,-278],[291,-289],[369,-253],[-7,-362]],[[84713,45326],[32,139],[239,133],[194,20],[87,74],[105,-74],[-102,-160],[-289,-258],[-233,-170]],[[32866,56937],[160,77],[58,-21],[-11,-440],[-232,-65],[-50,53],[81,163],[-6,233]],[[52339,72408],[302,239],[195,-71],[-9,-299],[236,217],[20,-113],[-139,-290],[-2,-273],[96,-147],[-36,-511],[-183,-297],[53,-322],[143,-10],[70,-281],[106,-92]],[[60041,71744],[-102,268],[105,222],[-169,-51],[-233,136],[-191,-340],[-421,-66],[-225,317],[-300,20],[-64,-245],[-192,-70],[-268,314],[-303,-11],[-165,588],[-203,328],[135,459],[-176,283],[308,565],[428,23],[117,449],[529,-78],[334,383],[324,167],[459,13],[485,-417],[399,-228],[323,91],[239,-53],[328,309]],[[57776,75399],[33,-228],[243,-190],[-51,-145],[-330,-33],[-118,-182],[-232,-319],[-87,276],[3,121]],[[83826,64992],[-167,-947],[-119,-485],[-146,499],[-32,438],[163,581],[223,447],[127,-176],[-49,-357]],[[60889,47817],[-128,-728],[16,-335],[178,-216],[8,-153],[-76,-357],[16,-180],[-18,-282],[97,-370],[115,-583],[101,-129]],[[59099,45126],[-157,177],[-177,100],[-111,99],[-116,150]],[[58388,46397],[-161,331],[-55,342]],[[58449,49909],[98,71],[304,-7],[566,45]],[[60617,78409],[-222,-48],[-185,-191],[-260,-31],[-239,-220],[16,-368],[136,-142],[284,35],[-55,-210],[-304,-103],[-377,-342],[-154,121],[61,277],[-304,173],[50,113],[265,197],[-80,135],[-432,149],[-19,221],[-257,-73],[-103,-325],[-215,-437]],[[35174,30629],[-121,-372],[-313,-328],[-205,118],[-151,-63],[-256,253],[-189,-19],[-169,327]],[[6794,61855],[-41,-99],[-69,84],[8,165],[-46,216],[14,65],[48,97],[-19,116],[16,55],[21,-11],[107,-100],[49,-51],[45,-79],[71,-207],[-7,-33],[-108,-126],[-89,-92]],[[6645,62777],[-94,-43],[-47,125],[-32,48],[-3,37],[27,50],[99,-56],[73,-90],[-23,-71]],[[6456,63091],[-9,-63],[-149,17],[21,72],[137,-26]],[[6207,63177],[-15,-34],[-19,8],[-97,21],[-35,133],[-11,24],[74,82],[23,-38],[80,-196]],[[5737,63567],[-33,-58],[-93,107],[14,43],[43,58],[64,-12],[5,-138]],[[31350,77248],[48,-194],[-296,-286],[-286,-204],[-293,-175],[-147,-351],[-47,-133],[-3,-313],[92,-313],[115,-15],[-29,216],[83,-131],[-22,-169],[-188,-96],[-133,11],[-205,-103],[-121,-29],[-162,-29],[-231,-171],[408,111],[82,-112],[-389,-177],[-177,-1],[8,72],[-84,-164],[82,-27],[-60,-424],[-203,-455],[-20,152],[-61,30],[-91,148],[57,-318],[69,-105],[5,-223],[-89,-230],[-157,-472],[-25,24],[86,402],[-142,225],[-33,491],[-53,-255],[59,-375],[-183,93],[191,-191],[12,-562],[79,-41],[29,-204],[39,-591],[-176,-439],[-288,-175],[-182,-346],[-139,-38],[-141,-217],[-39,-199],[-305,-383],[-157,-281],[-131,-351],[-43,-419],[50,-411],[92,-505],[124,-418],[1,-256],[132,-685],[-9,-398],[-12,-230],[-69,-361],[-83,-75],[-137,72],[-44,259],[-105,136],[-148,508],[-129,452],[-42,231],[57,393],[-77,325],[-217,494],[-108,90],[-281,-268],[-49,30],[-135,275],[-174,147],[-314,-75],[-247,66],[-212,-41],[-114,-92],[50,-157],[-5,-240],[59,-117],[-53,-77],[-103,87],[-104,-112],[-202,18],[-207,312],[-242,-73],[-202,137],[-173,-42],[-234,-138],[-253,-438],[-276,-255],[-152,-282],[-63,-266],[-3,-407],[14,-284],[52,-201]],[[17464,69802],[-46,302],[-180,340],[-130,71],[-30,169],[-156,30],[-100,159],[-258,59],[-71,95],[-33,324],[-270,594],[-231,821],[10,137],[-123,195],[-215,495],[-38,482],[-148,323],[61,489],[-10,507],[-89,453],[109,557],[34,536],[33,536],[-50,792],[-88,506],[-80,274],[33,115],[402,-200],[148,-558],[69,156],[-45,484],[-94,485]],[[7498,84325],[-277,-225],[-142,152],[-43,277],[252,210],[148,90],[185,-40],[117,-183],[-240,-281]],[[4006,85976],[-171,-92],[-182,110],[-168,161],[274,101],[220,-54],[27,-226]],[[2297,88264],[171,-113],[173,61],[225,-156],[276,-79],[-23,-64],[-211,-125],[-211,128],[-106,107],[-245,-34],[-66,52],[17,223]],[[13740,82958],[-153,223],[-245,188],[-78,515],[-358,478],[-150,558],[-267,38],[-441,15],[-326,170],[-574,613],[-266,112],[-486,211],[-385,-51],[-546,272],[-330,252],[-309,-125],[58,-411],[-154,-38],[-321,-123],[-245,-199],[-308,-126],[-39,348],[125,580],[295,182],[-76,148],[-354,-329],[-190,-394],[-400,-420],[203,-287],[-262,-424],[-299,-248],[-278,-180],[-69,-261],[-434,-305],[-87,-278],[-325,-252],[-191,45],[-259,-165],[-282,-201],[-231,-197],[-477,-169],[-43,99],[304,276],[271,182],[296,324],[345,66],[137,243],[385,353],[62,119],[205,208],[48,448],[141,349],[-320,-179],[-90,102],[-150,-215],[-181,300],[-75,-212],[-104,294],[-278,-236],[-170,0],[-24,352],[50,216],[-179,211],[-361,-113],[-235,277],[-190,142],[-1,334],[-214,252],[108,340],[226,330],[99,303],[225,43],[191,-94],[224,285],[201,-51],[212,183],[-52,270],[-155,106],[205,228],[-170,-7],[-295,-128],[-85,-131],[-219,131],[-392,-67],[-407,142],[-117,238],[-351,343],[390,247],[620,289],[228,0],[-38,-296],[586,23],[-225,366],[-342,225],[-197,296],[-267,252],[-381,187],[155,309],[493,19],[350,270],[66,287],[284,281],[271,68],[526,262],[256,-40],[427,315],[421,-124],[201,-266],[123,114],[469,-35],[-16,-136],[425,-101],[283,59],[585,-186],[534,-56],[214,-77],[370,96],[421,-177],[302,-83]],[[30185,57537],[-8,-139],[-163,-69],[91,-268],[-3,-309],[-123,-344],[105,-468],[120,38],[62,427],[-86,208],[-14,447],[346,241],[-38,278],[97,186],[100,-415],[195,-9],[180,-330],[11,-195],[249,-6],[297,61],[159,-264],[213,-74],[155,185],[4,149],[344,35],[333,9],[-236,-175],[95,-279],[222,-44],[210,-291],[45,-473],[144,13],[109,-139]],[[80013,63313],[-371,-505],[-231,-558],[-61,-410],[212,-623],[260,-772],[252,-365],[169,-475],[127,-1093],[-37,-1039],[-232,-389],[-318,-381],[-227,-492],[-346,-550],[-101,378],[78,401],[-206,335]],[[96623,40851],[-92,-78],[-93,259],[10,158],[175,-339]],[[96418,41756],[45,-476],[-75,74],[-58,-32],[-39,163],[-6,453],[133,-182]],[[64752,60417],[-201,-158],[-54,-263],[-6,-201],[-277,-249],[-444,-276],[-249,-417],[-122,-33],[-83,35],[-163,-245],[-177,-114],[-233,-30],[-70,-34],[-61,-156],[-73,-43],[-43,-150],[-137,13],[-89,-80],[-192,30],[-72,345],[8,323],[-46,174],[-54,437],[-80,243],[56,29],[-29,270],[34,114],[-12,257]],[[58175,37528],[113,-7],[134,-100],[94,71],[148,-59]],[[59119,34780],[-70,-430],[-32,-491],[-72,-267],[-190,-298],[-54,-86],[-118,-300],[-77,-303],[-158,-424],[-314,-609],[-196,-355],[-210,-269],[-290,-229],[-141,-31],[-36,-164],[-169,88],[-138,-113],[-301,114],[-168,-72],[-115,31],[-286,-233],[-238,-94],[-171,-223],[-127,-14],[-117,210],[-94,11],[-120,264],[-13,-82],[-37,159],[2,346],[-90,396],[89,108],[-7,453],[-182,553],[-139,501],[-1,1],[-199,768]],[[58409,41417],[-210,-81],[-159,-235],[-33,-205],[-100,-46],[-241,-486],[-154,-383],[-94,-13],[-90,68],[-311,65]]],\"bbox\":[-180,-85.60903777459767,180,83.64513000000001],\"transform\":{\"scale\":[0.0036000360003600037,0.00169255860333201],\"translate\":[-180,-85.60903777459767]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p.plot/assets/world-110m.json\n// module id = n/L2\n// module chunks = 1","import { randomJSONs, randomArrays } from './utils';\n\nlet educations = ['High School', 'Some College', 'AA/AS', 'Bachelor', 'Master', 'Doctorate']\nlet races = ['White', 'Asian', 'Black', 'Mixed'];\n\nlet dataProps = [\n    {name: 'BabyMonth', dtype: 'int', dist: 'uniform', min: 1, max: 12},\n    {name: 'BabyGender', dtype: 'string', values: ['F', 'M']},\n    {name: 'BabyWeight', dtype: 'float', dist: 'normal', min: 2, max: 20, mean: 7, std: 2},\n    {name: 'MotherAge', dtype: 'int', dist: 'normal', min: 16, max: 70, mean: 30, std: 10},\n    {name: 'MotherRace', dtype: 'string', values: races},\n    {name: 'MotherStatus', dtype: 'string', values: ['Married', 'Unmarried']},\n    {name: 'MotherEdu', dtype: 'string', values: educations},\n    {name: 'MotherHeight', dtype: 'float', dist: 'normal', min: 120, max: 220, mean: 168, std: 20},\n    {name: 'MotherWeight', dtype: 'float', dist: 'normal', min: 50, max: 290, mean: 100, std: 50},\n    {name: 'MotherWgtGain', dtype: 'float', dist: 'normal', min: 0, max: 100, mean: 30, std: 10},\n    {name: 'FatherAge', dtype: 'int', dist: 'normal', min: 16, max: 90, mean: 32, std: 10},\n    {name: 'FatherRace', dtype: 'string', values: races},\n    {name: 'FatherEdu', dtype: 'string', values: educations}\n];\n\nlet schema = {};\nfor(let prop of dataProps) {\n    schema[prop.name] = prop.dtype;\n}\n\nfunction Babies(arg) {\n    let dataSize = (Number.isInteger(arg)) ? arg : arg.size;\n    let props = arg.props || dataProps;\n    let type = arg.type || 'json';\n    let data = (type === 'json') ? randomJSONs({props: props, size: dataSize}): randomArrays({props: props, size: dataSize});\n    return { data, schema };\n}\n\nBabies.schema = schema;\n\nexport default Babies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/test/data-babies.js\n// module id = nxai\n// module chunks = 1","import flexgl from './src/main'\r\n\r\nvar root = typeof self == 'object' && self.self === self && self ||\r\n           typeof global == 'object' && global.global === global && global ||\r\n           this;\r\n\r\nroot.flexgl = flexgl;\r\n\r\nexport default flexgl;\r\n\r\nif(typeof module != 'undefined' && module.exports)\r\n    module.exports = flexgl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/flexgl/index.js\n// module id = pcb+\n// module chunks = 1","module.exports = function join(dataLeft, dataRight) {\n    var len = dataLeft.length,\n        keyL = Object.keys(dataLeft[0]),\n        keyR = Object.keys(dataRight[0]);\n        \n    var keys = keyR.filter(function(kr){ return (keyL.indexOf(kr) === -1);});\n\n    keys.forEach(function(k){\n        for(var i = 0; i < len; i++) {\n            dataLeft[i][k] = dataRight[i][k];    \n        }\n    });\n\n    return dataLeft;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/join.js\n// module id = sfu5\n// module chunks = 1","module.exports = \"<v-app id=\\\"inspire\\\">\\n  <WebSocket ref=\\\"WebSocket\\\" @connect=\\\"connect\\\" />\\n  <v-toolbar\\n    color=\\\"blue-grey\\\"\\n    dark\\n    fixed\\n    app\\n    clipped-right\\n  >\\n    <v-toolbar-side-icon @click.stop=\\\"left = !left\\\">\\n    </v-toolbar-side-icon>\\n    <v-toolbar-title style=\\\"margin-right: 3em;\\\">{{ appName }}</v-toolbar-title>\\n    <v-spacer></v-spacer>\\n  </v-toolbar>\\n  <v-content class=\\\"pa-2\\\">\\n    <v-container fluid style=\\\"height: 90%\\\" class=\\\"pa-2\\\">\\n      <v-layout fill-height row>\\n          <v-flex xs5 fill-height class=\\\"pa-1\\\">\\n            <Dimensionality ref=\\\"Dimensionality\\\"></Dimensionality>\\n          </v-flex>\\n          <v-flex xs7 fill-height class=\\\"pa-1\\\">\\n            <TimeSeries  ref=\\\"TimeSeries\\\" />\\n          </v-flex>\\n      </v-layout>\\n    </v-container>\\n  </v-content>\\n</v-app>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/DimTime.html\n// module id = td/E\n// module chunks = 1","var root = typeof self == 'object' && self.self === self && self ||\n           typeof global == 'object' && global.global === global && global ||\n           this;\n\nvar p3 = {\n    allocate    : require('./src/allocate'),\n    arrays      : require('./src/arrays'),\n    aggregate   : require('./src/aggregate'),\n    pipeline    : require('./src/pipeline'),\n    derive      : require('./src/derive'),\n    match       : require('./src/match'),\n    join        : require('./src/join'),\n    stats       : require('./src/stats'),\n    embed       : require('./src/embed'),\n    toArray     : require('./src/toarray'),\n    vector     : require('./src/vector')\n};\n\nif(typeof root.p3 == 'object') {\n    root.p3 = Object.assign(root.p3, p3);\n} else {\n    root.p3 = p3;\n}\n\nmodule.exports = p3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/index.js\n// module id = vsA5\n// module chunks = 1","module.exports = {\n    add: vectorAdd,\n    sum: vectorSum,\n    avg: vectorAvg\n}\n\nfunction vectorAdd(a, b){\n    var c = [];\n    a.forEach(function(v, i){\n        c[i] = v + b[i];\n    });\n\n    return c;\n}\n\nfunction vectorSum(vectors){\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for(var i = 1; i < numberOfVectors; i++){\n        result = vectorAdd(result, vectors[i]);\n    }\n\n    return result;\n}\n\nfunction _vectorAvg(a, b){\n    var c = [];\n    a.forEach(function(v, i){\n        c[i] = (v + b[i]) * 0.5;\n    });\n\n    return c;\n}\n\nfunction vectorAvg(vectors){\n    var result = vectors[0],\n        numberOfVectors = vectors.length;\n\n    for(var i = 1; i < numberOfVectors; i++){\n        result =  _vectorAvg(result, vectors[i]);\n    }\n\n    return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p3/src/vector.js\n// module id = vxwt\n// module chunks = 1","module.exports = \"<v-flex fill-height>\\n  <v-toolbar dense flat v-if=\\\"!isComparisonMode\\\">\\n  <v-switch\\n    label=\\\"Intra-Comm\\\"\\n    v-model=\\\"showIntraComm\\\"\\n    v-on:change=\\\"visualize()\\\"\\n  ></v-switch>\\n  <v-spacer></v-spacer>\\n  <v-slider\\n    v-model=\\\"threshold\\\"\\n    :thumb-size=\\\"24\\\"\\n    :min=0\\n    v-on:input=\\\"updateLink\\\"\\n    label=\\\"link threshold\\\"\\n  ></v-slider>\\n  <span>{{thresholdValue}}</span>\\n  </v-toolbar>\\n  <v-card class=\\\"fill-height\\\">\\n      <v-navigation-drawer temporary v-if=\\\"isComparisonMode\\\" v-model=\\\"drawer\\\" absolute style=\\\"padding: 3em 1em;\\\">\\n        <p style=\\\"text-align: center\\\">\\n          <v-slider\\n            v-model=\\\"threshold\\\"\\n            :thumb-size=\\\"24\\\"\\n            :min=0\\n            v-on:input=\\\"updateLink\\\"\\n            label=\\\"link threshold\\\"\\n          ></v-slider>\\n          <span>{{thresholdValue}}</span>\\n        </p>\\n        <v-select \\n          label=\\\"Metric\\\"\\n          :items=\\\"allMetrics\\\"\\n          multiple\\n          v-model=\\\"metrics\\\"\\n          :menu-props=\\\"{ maxHeight: '400' }\\\"\\n          persistent-hint\\n          v-on:change=\\\"updateMetrics\\\"\\n        >\\n        </v-select>\\n      </v-navigation-drawer>\\n      <v-btn\\n        v-if=\\\"isComparisonMode\\\"\\n        absolute\\n        dark\\n        fab\\n        top\\n        left\\n        small\\n        @click=\\\"drawer=!drawer\\\"\\n        style=\\\"margin-top: 2em;\\\"\\n        color=\\\"darken-2 blue\\\"\\n      >\\n        <v-icon>settings</v-icon>\\n      </v-btn>\\n    <div ref=\\\"container\\\" style=\\\"display: flex;\\\"></div>\\n  </v-card>\\n</v-flex>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/html/Communication.html\n// module id = w3S9\n// module chunks = 1","import {boundedRandom} from './utils';\r\n\r\nexport default function ({\r\n  timesteps = 128,\r\n  series = 8,\r\n  interval = 1,\r\n  props,\r\n  label = {time: 'timestamp', series: 'sid'}\r\n}) {\r\n  let dsize = timesteps * series;\r\n  let data = new Array(dsize);\r\n  for(let i = 0; i < timesteps; i++) {\r\n    for(let j = 0; j < series; j++) {\r\n      let record = {};\r\n      record[label.time] = i * interval;\r\n      record[label.series] = j;\r\n      for(let prop of props) {\r\n          if(prop.hasOwnProperty('values')){\r\n              let vid = parseInt( Math.round( Math.random() * (prop.values.length - 1) ) );\r\n              record[prop.name] = prop.values[vid];\r\n          } else {\r\n              let value = boundedRandom(prop);\r\n              record[prop.name] = (prop.dtype == 'float') ? parseFloat(value) : Math.round(value);\r\n          }\r\n      }\r\n      data[i * series + j] = record;\r\n    }\r\n  }\r\n\r\n  let schema = {};\r\n  schema[label.time] = 'int';\r\n  schema[label.series] = 'float';\r\n  for(let prop of props) {\r\n      schema[prop.name] = prop.dtype;\r\n  }\r\n\r\n  return {\r\n    data,\r\n    schema\r\n  }\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/test/data-timeseries.js\n// module id = yGlp\n// module chunks = 1","import * as ctypes from './ctypes';\r\nimport {unique} from './arrays';\r\n\r\nconst __VERSION__ = 1.0;\r\n\r\nexport default function ColumnStore(arg){\r\n    var cstore     = (this instanceof ColumnStore) ? this : {},\r\n        options    = arg || {},\r\n        columns    = [],                  // column-based binary data\r\n        size       = options.size  || 0,   // max size\r\n        count      = options.count || 0,   // number of entries stored\r\n        types      = options.types || [],  // types of the columns\r\n        attributes = options.attributes || options.keys || options.names || [],  // column attributes\r\n        struct     = options.struct || options.schema || null,\r\n        strValues  = options.strValues || {},  // string values \r\n        strLists   = options.strLists  || {},  // table lookaside buffer\r\n        intervals  = {},\r\n        indexes    = options.indexes || {},\r\n        colStats   = {},\r\n        colAlloc   = {},\r\n        colRead    = {},                  // functions for reading values\r\n        skip       = options.skip  || 0;\r\n\r\n    if(typeof(struct) === 'object') initStruct(struct);\r\n\r\n    function initCStore() {\r\n        if(size && types.length === attributes.length && types.length > 0) {\r\n            attributes.forEach(function(c, i){\r\n                configureColumn(i);\r\n                columns[i] = new colAlloc[c](size);\r\n                if(!columns.hasOwnProperty(c)) {\r\n                    Object.defineProperty(columns, c, {\r\n                        get: function() { return columns[i]; }\r\n                    });\r\n                }\r\n                if(intervals.hasOwnProperty(c)) {\r\n                    cstore.intervalize(c, intervals[c]);\r\n                }\r\n\r\n                if(strValues[c] && Object.keys(strValues[c]).length > 0) {\r\n                    strLists[c] = Object.keys(strValues[c]);\r\n                }\r\n\r\n            });\r\n            columns.attributes = attributes;\r\n            columns.keys = attributes;\r\n            columns.types = types;\r\n            columns.struct = struct;\r\n            columns.strLists = strLists;\r\n            columns.strValues = strValues;\r\n            columns.uniqueValues = indexes;\r\n            columns.size = size;\r\n            columns.get = function(c) {\r\n                var index = attributes.indexOf(c);\r\n                if(index < 0 ) throw new Error(\"Error: No column named \" + c);\r\n                return columns[index];\r\n            }\r\n        } \r\n        return cstore;\r\n    }\r\n\r\n    function initStruct(s) {\r\n        struct = s;\r\n        if(Array.isArray(struct)) {\r\n            struct.forEach(function(s){\r\n                attributes.push(s.name);\r\n                types.push(s.type || s.dtype);\r\n            })\r\n        } else {\r\n            for(var k in struct){\r\n                attributes.push(k);\r\n                types.push(struct[k]);\r\n            }\r\n        }\r\n        return struct;\r\n    }\r\n\r\n    function configureColumn(cid) {\r\n        if(typeof(cid) == \"string\") cid = attributes.indexOf(cid);\r\n        var f = attributes[cid];\r\n        colAlloc[f] = ctypes[types[cid]];\r\n        var columnType = types[cid]\r\n        if(columnType === 'string' || columnType === 'str'){\r\n            if (!strValues.hasOwnProperty(f)) {\r\n                strValues[f] = {};\r\n                strLists[f] = [];\r\n            }\r\n            colRead[f] = function(value) {\r\n                if(!strValues[f].hasOwnProperty(value)){\r\n                    strValues[f][value] = strLists[f].length;\r\n                    strLists[f].push(value);\r\n                }\r\n                return strValues[f][value];\r\n            };\r\n        } else if(['int', 'short', 'integer'].includes(columnType)) {\r\n            colRead[f] = function(value) { return parseInt(value) || 0; };\r\n        } else if(['float', 'double', 'numeric'].includes(columnType)){\r\n            colRead[f] = function(value) { return parseFloat(value) || 0.0; };\r\n        } else if(['date', 'time', 'datetime'].includes(columnType)){\r\n            colRead[f] = function(value) { \r\n                let datetime = new Date(value);\r\n                let ts = datetime.getTime() / 1000 - datetime.getTimezoneOffset() * 60; \r\n                return Math.floor(ts);\r\n            };\r\n        } else {\r\n            throw new Error(\"Invalid data type for TypedArray data!\")\r\n        }\r\n    }\r\n\r\n    cstore.addRows = function(rowArray) {\r\n        if(size === 0) {\r\n            size = rowArray.length;\r\n            initCStore();\r\n        }\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                rowArray.shift();\r\n        }\r\n        rowArray.forEach(function(row, i){\r\n            row.forEach(function(v,j){\r\n                columns[j][count] = colRead[attributes[j]](v);\r\n            });\r\n            count++;\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    cstore.addObjects = function(objArray) {\r\n        if(count === 0 && skip > 0) {\r\n            for(var j = 0; j<skip; j++)\r\n                objArray.shift();\r\n        }\r\n        objArray.forEach(function(obj, i){\r\n            Object.keys(obj).forEach(function(v,j){\r\n                if(typeof colRead[attributes[j]] !== 'function') {\r\n                    console.log(attributes[j], j, v, obj)\r\n                }\r\n                columns[j][count] = colRead[attributes[j]](obj[v]);\r\n            });\r\n            count++;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    cstore.addColumn = function(arg) {\r\n        var props = arg || {},\r\n            columnData = props.data || props.array,\r\n            columnName = props.name,\r\n            columnType = props.dtype,\r\n            values = props.values || [];\r\n\r\n        var cid = attributes.indexOf(columnName);\r\n        if( cid < 0) {\r\n            attributes.push(columnName);\r\n            types.push(columnType);\r\n            configureColumn(columnName);\r\n            cid = types.length - 1;\r\n            Object.defineProperty(columns, columnName, {\r\n                get: function() { return columns[cid]; }\r\n            });\r\n        }\r\n\r\n        if(columnData instanceof ctypes[types[cid]]) {\r\n            columns[cid] = columnData;\r\n            if(values.length) {\r\n                strLists[columnName] = values;\r\n                strValues[columnName] = {};\r\n                values.forEach(function(value, vi){\r\n                    strValues[columnName][value] = vi;\r\n                })\r\n            }\r\n        } else if(ArrayBuffer.isView(columnData)){\r\n            columns[cid] = new colAlloc[columnName](size);\r\n            for(var di = 0; di < size; di++) {\r\n                columns[cid][di] = colRead[columnName](columnData[di]);\r\n            }\r\n        } else {\r\n            throw new Error(\"Error: Invalid data type for columnArray!\");\r\n        }\r\n        size = count = columnData.length;\r\n    }\r\n\r\n    cstore.metadata = cstore.info = function() {\r\n        return {\r\n            size: size,\r\n            count: count,\r\n            attributes: attributes,\r\n            types: types,\r\n            strLists: strLists,\r\n            strValues: strValues,\r\n            stats: cstore.stats()\r\n        }\r\n    }\r\n\r\n    cstore.columns = function() {\r\n        return columns;\r\n    }\r\n\r\n    cstore.data = function() {\r\n        var data = columns;\r\n        data.stats = cstore.stats();\r\n        data.keys = attributes;\r\n        data.size = size;\r\n        data.strValues = strValues;\r\n        data.strLists = strLists;\r\n        data.dtypes = types;\r\n        data.export = cstore.export;\r\n        data._p4_cstore_version = __VERSION__;\r\n        return data;\r\n    }\r\n\r\n    cstore.stats = function(col){\r\n        var col = col || attributes;\r\n        col.forEach(function(name, c){\r\n            if(!colStats[c]){\r\n                var min, max, avg;\r\n                min = max = avg = columns[c][0];\r\n\r\n                for(var i = 1; i < columns[c].length; i++){\r\n                    var d = columns[c][i];\r\n                    if(d > max) max = d;\r\n                    else if(d < min) min = d;\r\n                    avg = avg - (avg-d) / i;\r\n                }\r\n                if(max == min) max += 0.000001;\r\n                colStats[name] = {min: min, max: max, avg: avg};\r\n            }\r\n        })\r\n        return colStats;\r\n    }\r\n\r\n    cstore.domains = function(col){\r\n        var col = col || attributes,\r\n            domains = [];\r\n\r\n        col.forEach(function(name, c){\r\n            domains[name] = [colStats[name].min, colStats[name].max];\r\n        })\r\n        return domains;\r\n    }\r\n\r\n    cstore.ctypes = function() {\r\n        return ctypes;\r\n    }\r\n\r\n    cstore.size = size;\r\n\r\n    cstore.exportAsJSON = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var dataFrame = {};\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    dataFrame[attr] = strLists[attr][columns[ai][ri]];\r\n                } else if(indexes.hasOwnProperty(attr)) {\r\n                    dataFrame[attr] = indexes[attr][columns[ai][ri]];\r\n                } else {\r\n                    dataFrame[attr] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = dataFrame;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.exportAsRowArray = function() {\r\n        var rows = new Array(size);\r\n        for(var ri = 0; ri < size; ri++) {\r\n            var row = new Array(attributes.length);\r\n            attributes.forEach(function(attr, ai) {\r\n                if(types[ai] == 'string') {\r\n                    row[ai] = strLists[attr][columns[ai][ri]];\r\n                } else if(indexes.hasOwnProperty(attr)) {\r\n                    row[ai] = indexes[attr][columns[ai][ri]];\r\n                } else {\r\n                    row[ai] = columns[ai][ri];\r\n                }\r\n            })\r\n            rows[ri] = row;\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    cstore.export = function(arg) {\r\n        var format = arg || 'json';\r\n        if(format == 'rowArray') {\r\n            return cstore.exportAsRowArray();\r\n        } else {\r\n            return cstore.exportAsJSON();\r\n        }\r\n    }\r\n\r\n    cstore.import = function({\r\n        data,\r\n        schema = null,\r\n        type = 'json'\r\n    }) {\r\n        size = data.length;\r\n        if(typeof(schema == 'object')) initStruct(schema);\r\n        initCStore();\r\n        if(type === 'json') {\r\n            cstore.addObjects(data);\r\n        } else {\r\n            cstore.addRows(data);\r\n        }\r\n        \r\n        return cstore;\r\n    }\r\n\r\n    cstore.scale = function(attr, factor) {\r\n        let len = columns[attr].length;\r\n        for(var i = 0; i < len; i++) {\r\n            columns[attr] *= factor;\r\n        }\r\n        return cstore;\r\n    }\r\n\r\n    cstore.normalize = function(attr) {\r\n        if(!colStats.hasOwnProperty(attr)) {\r\n            cstore.stats();\r\n        }\r\n        let fid = attributes.indexOf(attr);\r\n        let len = columns[attr].length;\r\n        let max = colStats[f].max;\r\n        let min = colStats[f].min;\r\n\r\n        if(types[fid] === 'float') {\r\n            for(var i = 0; i < len; i++) {\r\n                columns[attr][i] = (columns[attr][i] - min) / (max - min);\r\n            }\r\n        } \r\n        return cstore;\r\n    }\r\n\r\n    cstore.intervalize = function(attr, interval) {\r\n        intervals[attr] = interval;\r\n        if(!colStats.hasOwnProperty(attr)) {\r\n            cstore.stats([attr]);\r\n        }\r\n        let fid = attributes.indexOf(attr);\r\n        let len = columns[attr].length;\r\n        let min = colStats[f].min;\r\n\r\n        if(types[fid] === 'int' || types[fid] === 'float') {\r\n            for(var i = 0; i < len; i++) {\r\n                columns[attr][i] = (columns[attr][i] - min) / interval;\r\n            }\r\n        } \r\n        return cstore;\r\n    }\r\n\r\n    cstore.index = function(attr) {\r\n        let attrId = attributes.indexOf(attr);\r\n        if(attrId === -1) throw Error('Invalid attribute for indexing');\r\n        types[attrId] = 'int';\r\n        indexes[attr] = unique(columns[attr]).sort(function(a, b) {\r\n            return a - b;\r\n        });\r\n        let len = columns[attr].length;\r\n        for(var i = 0; i < len; i++) {\r\n            columns[attr][i] = indexes[attr].indexOf(columns[attr][i]); \r\n        }\r\n        \r\n        return cstore;\r\n    }\r\n\r\n    return initCStore();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../p4/src/cstore.js\n// module id = z27Q\n// module chunks = 1"],"sourceRoot":""}